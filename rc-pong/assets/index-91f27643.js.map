{"version":3,"file":"index-91f27643.js","sources":["../../raw_code/rc_pong/src/engine/window.js","../../raw_code/rc_pong/node_modules/lil-gui/dist/lil-gui.esm.js","../../raw_code/rc_pong/src/engine/data.js","../../raw_code/rc_pong/node_modules/stats-js/build/stats.min.js","../../raw_code/rc_pong/node_modules/twgl.js/dist/5.x/twgl-full.module.js","../../raw_code/rc_pong/src/utils/helper.js","../../raw_code/rc_pong/src/engine/input.js","../../raw_code/rc_pong/src/utils/array.js","../../raw_code/rc_pong/src/utils/stateMachine.js","../../raw_code/rc_pong/src/utils/vector.js","../../raw_code/rc_pong/src/game.js","../../raw_code/rc_pong/src/shaders/quadCascade.fs","../../raw_code/rc_pong/src/shaders/renderQuadCascade.fs","../../raw_code/rc_pong/src/script.js"],"sourcesContent":["class WindowManager {\r\n  constructor(aspect) {\r\n    this.sizes = {\r\n      width: window.innerWidth,\r\n      height: window.innerHeight,\r\n      buffer: 20,\r\n      aspect,\r\n    };\r\n    this.listeners = [];\r\n\r\n    const container = document.querySelector(\"div.container\");\r\n    const canvasContainer = document.querySelector(\"div.relative\");\r\n\r\n    this.update = () => {\r\n      const { buffer } = this.sizes;\r\n      const adjustedHeight = window.innerHeight - 2 * buffer;\r\n      const adjustedWidth = window.innerWidth - 2 * buffer;\r\n      if (adjustedHeight * this.sizes.aspect > adjustedWidth) {\r\n        this.sizes.width = adjustedWidth;\r\n        this.sizes.height = adjustedWidth / this.sizes.aspect;\r\n        this.sizes.verticalOffset =\r\n          buffer + (adjustedHeight - this.sizes.height) / 2;\r\n        this.sizes.horizontalOffset = buffer;\r\n      } else {\r\n        this.sizes.width = adjustedHeight * this.sizes.aspect;\r\n        this.sizes.height = adjustedHeight;\r\n        this.sizes.verticalOffset = buffer;\r\n        this.sizes.horizontalOffset =\r\n          buffer + (adjustedWidth - this.sizes.width) / 2;\r\n      }\r\n      canvasContainer.style.top = this.sizes.verticalOffset.toString() + \"px\";\r\n      canvasContainer.style.left =\r\n        this.sizes.horizontalOffset.toString() + \"px\";\r\n\r\n      this.listeners.forEach((l) => {\r\n        l.updateSize(this.sizes);\r\n      });\r\n    };\r\n\r\n    window.addEventListener(\"resize\", this.update);\r\n    window.addEventListener(\"orientationchange\", this.update);\r\n    window.addEventListener(\"dblclick\", (event) => {\r\n      // I want the fullscreen to stop for now.\r\n      return;\r\n      if (event.target.className !== \"webgl\") {\r\n        return;\r\n      }\r\n      const fullscreenElement =\r\n        document.fullscreenElement || document.webkitFullscreenElement;\r\n\r\n      if (fullscreenElement) {\r\n        document.exitFullscreen();\r\n      } else {\r\n        container.requestFullscreen();\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport { WindowManager };\r\n","/**\n * lil-gui\n * https://lil-gui.georgealways.com\n * @version 0.19.2\n * @author George Michael Brower\n * @license MIT\n */\n\n/**\n * Base class for all controllers.\n */\nclass Controller {\n\n\tconstructor( parent, object, property, className, elementType = 'div' ) {\n\n\t\t/**\n\t\t * The GUI that contains this controller.\n\t\t * @type {GUI}\n\t\t */\n\t\tthis.parent = parent;\n\n\t\t/**\n\t\t * The object this controller will modify.\n\t\t * @type {object}\n\t\t */\n\t\tthis.object = object;\n\n\t\t/**\n\t\t * The name of the property to control.\n\t\t * @type {string}\n\t\t */\n\t\tthis.property = property;\n\n\t\t/**\n\t\t * Used to determine if the controller is disabled.\n\t\t * Use `controller.disable( true|false )` to modify this value.\n\t\t * @type {boolean}\n\t\t */\n\t\tthis._disabled = false;\n\n\t\t/**\n\t\t * Used to determine if the Controller is hidden.\n\t\t * Use `controller.show()` or `controller.hide()` to change this.\n\t\t * @type {boolean}\n\t\t */\n\t\tthis._hidden = false;\n\n\t\t/**\n\t\t * The value of `object[ property ]` when the controller was created.\n\t\t * @type {any}\n\t\t */\n\t\tthis.initialValue = this.getValue();\n\n\t\t/**\n\t\t * The outermost container DOM element for this controller.\n\t\t * @type {HTMLElement}\n\t\t */\n\t\tthis.domElement = document.createElement( elementType );\n\t\tthis.domElement.classList.add( 'controller' );\n\t\tthis.domElement.classList.add( className );\n\n\t\t/**\n\t\t * The DOM element that contains the controller's name.\n\t\t * @type {HTMLElement}\n\t\t */\n\t\tthis.$name = document.createElement( 'div' );\n\t\tthis.$name.classList.add( 'name' );\n\n\t\tController.nextNameID = Controller.nextNameID || 0;\n\t\tthis.$name.id = `lil-gui-name-${++Controller.nextNameID}`;\n\n\t\t/**\n\t\t * The DOM element that contains the controller's \"widget\" (which differs by controller type).\n\t\t * @type {HTMLElement}\n\t\t */\n\t\tthis.$widget = document.createElement( 'div' );\n\t\tthis.$widget.classList.add( 'widget' );\n\n\t\t/**\n\t\t * The DOM element that receives the disabled attribute when using disable().\n\t\t * @type {HTMLElement}\n\t\t */\n\t\tthis.$disable = this.$widget;\n\n\t\tthis.domElement.appendChild( this.$name );\n\t\tthis.domElement.appendChild( this.$widget );\n\n\t\t// Don't fire global key events while typing in a controller\n\t\tthis.domElement.addEventListener( 'keydown', e => e.stopPropagation() );\n\t\tthis.domElement.addEventListener( 'keyup', e => e.stopPropagation() );\n\n\t\tthis.parent.children.push( this );\n\t\tthis.parent.controllers.push( this );\n\n\t\tthis.parent.$children.appendChild( this.domElement );\n\n\t\tthis._listenCallback = this._listenCallback.bind( this );\n\n\t\tthis.name( property );\n\n\t}\n\n\t/**\n\t * Sets the name of the controller and its label in the GUI.\n\t * @param {string} name\n\t * @returns {this}\n\t */\n\tname( name ) {\n\t\t/**\n\t\t * The controller's name. Use `controller.name( 'Name' )` to modify this value.\n\t\t * @type {string}\n\t\t */\n\t\tthis._name = name;\n\t\tthis.$name.textContent = name;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Pass a function to be called whenever the value is modified by this controller.\n\t * The function receives the new value as its first parameter. The value of `this` will be the\n\t * controller.\n\t *\n\t * For function controllers, the `onChange` callback will be fired on click, after the function\n\t * executes.\n\t * @param {Function} callback\n\t * @returns {this}\n\t * @example\n\t * const controller = gui.add( object, 'property' );\n\t *\n\t * controller.onChange( function( v ) {\n\t * \tconsole.log( 'The value is now ' + v );\n\t * \tconsole.assert( this === controller );\n\t * } );\n\t */\n\tonChange( callback ) {\n\t\t/**\n\t\t * Used to access the function bound to `onChange` events. Don't modify this value directly.\n\t\t * Use the `controller.onChange( callback )` method instead.\n\t\t * @type {Function}\n\t\t */\n\t\tthis._onChange = callback;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Calls the onChange methods of this controller and its parent GUI.\n\t * @protected\n\t */\n\t_callOnChange() {\n\n\t\tthis.parent._callOnChange( this );\n\n\t\tif ( this._onChange !== undefined ) {\n\t\t\tthis._onChange.call( this, this.getValue() );\n\t\t}\n\n\t\tthis._changed = true;\n\n\t}\n\n\t/**\n\t * Pass a function to be called after this controller has been modified and loses focus.\n\t * @param {Function} callback\n\t * @returns {this}\n\t * @example\n\t * const controller = gui.add( object, 'property' );\n\t *\n\t * controller.onFinishChange( function( v ) {\n\t * \tconsole.log( 'Changes complete: ' + v );\n\t * \tconsole.assert( this === controller );\n\t * } );\n\t */\n\tonFinishChange( callback ) {\n\t\t/**\n\t\t * Used to access the function bound to `onFinishChange` events. Don't modify this value\n\t\t * directly. Use the `controller.onFinishChange( callback )` method instead.\n\t\t * @type {Function}\n\t\t */\n\t\tthis._onFinishChange = callback;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Should be called by Controller when its widgets lose focus.\n\t * @protected\n\t */\n\t_callOnFinishChange() {\n\n\t\tif ( this._changed ) {\n\n\t\t\tthis.parent._callOnFinishChange( this );\n\n\t\t\tif ( this._onFinishChange !== undefined ) {\n\t\t\t\tthis._onFinishChange.call( this, this.getValue() );\n\t\t\t}\n\n\t\t}\n\n\t\tthis._changed = false;\n\n\t}\n\n\t/**\n\t * Sets the controller back to its initial value.\n\t * @returns {this}\n\t */\n\treset() {\n\t\tthis.setValue( this.initialValue );\n\t\tthis._callOnFinishChange();\n\t\treturn this;\n\t}\n\n\t/**\n\t * Enables this controller.\n\t * @param {boolean} enabled\n\t * @returns {this}\n\t * @example\n\t * controller.enable();\n\t * controller.enable( false ); // disable\n\t * controller.enable( controller._disabled ); // toggle\n\t */\n\tenable( enabled = true ) {\n\t\treturn this.disable( !enabled );\n\t}\n\n\t/**\n\t * Disables this controller.\n\t * @param {boolean} disabled\n\t * @returns {this}\n\t * @example\n\t * controller.disable();\n\t * controller.disable( false ); // enable\n\t * controller.disable( !controller._disabled ); // toggle\n\t */\n\tdisable( disabled = true ) {\n\n\t\tif ( disabled === this._disabled ) return this;\n\n\t\tthis._disabled = disabled;\n\n\t\tthis.domElement.classList.toggle( 'disabled', disabled );\n\t\tthis.$disable.toggleAttribute( 'disabled', disabled );\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Shows the Controller after it's been hidden.\n\t * @param {boolean} show\n\t * @returns {this}\n\t * @example\n\t * controller.show();\n\t * controller.show( false ); // hide\n\t * controller.show( controller._hidden ); // toggle\n\t */\n\tshow( show = true ) {\n\n\t\tthis._hidden = !show;\n\n\t\tthis.domElement.style.display = this._hidden ? 'none' : '';\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Hides the Controller.\n\t * @returns {this}\n\t */\n\thide() {\n\t\treturn this.show( false );\n\t}\n\n\t/**\n\t * Changes this controller into a dropdown of options.\n\t *\n\t * Calling this method on an option controller will simply update the options. However, if this\n\t * controller was not already an option controller, old references to this controller are\n\t * destroyed, and a new controller is added to the end of the GUI.\n\t * @example\n\t * // safe usage\n\t *\n\t * gui.add( obj, 'prop1' ).options( [ 'a', 'b', 'c' ] );\n\t * gui.add( obj, 'prop2' ).options( { Big: 10, Small: 1 } );\n\t * gui.add( obj, 'prop3' );\n\t *\n\t * // danger\n\t *\n\t * const ctrl1 = gui.add( obj, 'prop1' );\n\t * gui.add( obj, 'prop2' );\n\t *\n\t * // calling options out of order adds a new controller to the end...\n\t * const ctrl2 = ctrl1.options( [ 'a', 'b', 'c' ] );\n\t *\n\t * // ...and ctrl1 now references a controller that doesn't exist\n\t * assert( ctrl2 !== ctrl1 )\n\t * @param {object|Array} options\n\t * @returns {Controller}\n\t */\n\toptions( options ) {\n\t\tconst controller = this.parent.add( this.object, this.property, options );\n\t\tcontroller.name( this._name );\n\t\tthis.destroy();\n\t\treturn controller;\n\t}\n\n\t/**\n\t * Sets the minimum value. Only works on number controllers.\n\t * @param {number} min\n\t * @returns {this}\n\t */\n\tmin( min ) {\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the maximum value. Only works on number controllers.\n\t * @param {number} max\n\t * @returns {this}\n\t */\n\tmax( max ) {\n\t\treturn this;\n\t}\n\n\t/**\n\t * Values set by this controller will be rounded to multiples of `step`. Only works on number\n\t * controllers.\n\t * @param {number} step\n\t * @returns {this}\n\t */\n\tstep( step ) {\n\t\treturn this;\n\t}\n\n\t/**\n\t * Rounds the displayed value to a fixed number of decimals, without affecting the actual value\n\t * like `step()`. Only works on number controllers.\n\t * @example\n\t * gui.add( object, 'property' ).listen().decimals( 4 );\n\t * @param {number} decimals\n\t * @returns {this}\n\t */\n\tdecimals( decimals ) {\n\t\treturn this;\n\t}\n\n\t/**\n\t * Calls `updateDisplay()` every animation frame. Pass `false` to stop listening.\n\t * @param {boolean} listen\n\t * @returns {this}\n\t */\n\tlisten( listen = true ) {\n\n\t\t/**\n\t\t * Used to determine if the controller is currently listening. Don't modify this value\n\t\t * directly. Use the `controller.listen( true|false )` method instead.\n\t\t * @type {boolean}\n\t\t */\n\t\tthis._listening = listen;\n\n\t\tif ( this._listenCallbackID !== undefined ) {\n\t\t\tcancelAnimationFrame( this._listenCallbackID );\n\t\t\tthis._listenCallbackID = undefined;\n\t\t}\n\n\t\tif ( this._listening ) {\n\t\t\tthis._listenCallback();\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t_listenCallback() {\n\n\t\tthis._listenCallbackID = requestAnimationFrame( this._listenCallback );\n\n\t\t// To prevent framerate loss, make sure the value has changed before updating the display.\n\t\t// Note: save() is used here instead of getValue() only because of ColorController. The !== operator\n\t\t// won't work for color objects or arrays, but ColorController.save() always returns a string.\n\n\t\tconst curValue = this.save();\n\n\t\tif ( curValue !== this._listenPrevValue ) {\n\t\t\tthis.updateDisplay();\n\t\t}\n\n\t\tthis._listenPrevValue = curValue;\n\n\t}\n\n\t/**\n\t * Returns `object[ property ]`.\n\t * @returns {any}\n\t */\n\tgetValue() {\n\t\treturn this.object[ this.property ];\n\t}\n\n\t/**\n\t * Sets the value of `object[ property ]`, invokes any `onChange` handlers and updates the display.\n\t * @param {any} value\n\t * @returns {this}\n\t */\n\tsetValue( value ) {\n\n\t\tif ( this.getValue() !== value ) {\n\n\t\t\tthis.object[ this.property ] = value;\n\t\t\tthis._callOnChange();\n\t\t\tthis.updateDisplay();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Updates the display to keep it in sync with the current value. Useful for updating your\n\t * controllers when their values have been modified outside of the GUI.\n\t * @returns {this}\n\t */\n\tupdateDisplay() {\n\t\treturn this;\n\t}\n\n\tload( value ) {\n\t\tthis.setValue( value );\n\t\tthis._callOnFinishChange();\n\t\treturn this;\n\t}\n\n\tsave() {\n\t\treturn this.getValue();\n\t}\n\n\t/**\n\t * Destroys this controller and removes it from the parent GUI.\n\t */\n\tdestroy() {\n\t\tthis.listen( false );\n\t\tthis.parent.children.splice( this.parent.children.indexOf( this ), 1 );\n\t\tthis.parent.controllers.splice( this.parent.controllers.indexOf( this ), 1 );\n\t\tthis.parent.$children.removeChild( this.domElement );\n\t}\n\n}\n\nclass BooleanController extends Controller {\n\n\tconstructor( parent, object, property ) {\n\n\t\tsuper( parent, object, property, 'boolean', 'label' );\n\n\t\tthis.$input = document.createElement( 'input' );\n\t\tthis.$input.setAttribute( 'type', 'checkbox' );\n\t\tthis.$input.setAttribute( 'aria-labelledby', this.$name.id );\n\n\t\tthis.$widget.appendChild( this.$input );\n\n\t\tthis.$input.addEventListener( 'change', () => {\n\t\t\tthis.setValue( this.$input.checked );\n\t\t\tthis._callOnFinishChange();\n\t\t} );\n\n\t\tthis.$disable = this.$input;\n\n\t\tthis.updateDisplay();\n\n\t}\n\n\tupdateDisplay() {\n\t\tthis.$input.checked = this.getValue();\n\t\treturn this;\n\t}\n\n}\n\nfunction normalizeColorString( string ) {\n\n\tlet match, result;\n\n\tif ( match = string.match( /(#|0x)?([a-f0-9]{6})/i ) ) {\n\n\t\tresult = match[ 2 ];\n\n\t} else if ( match = string.match( /rgb\\(\\s*(\\d*)\\s*,\\s*(\\d*)\\s*,\\s*(\\d*)\\s*\\)/ ) ) {\n\n\t\tresult = parseInt( match[ 1 ] ).toString( 16 ).padStart( 2, 0 )\n\t\t\t+ parseInt( match[ 2 ] ).toString( 16 ).padStart( 2, 0 )\n\t\t\t+ parseInt( match[ 3 ] ).toString( 16 ).padStart( 2, 0 );\n\n\t} else if ( match = string.match( /^#?([a-f0-9])([a-f0-9])([a-f0-9])$/i ) ) {\n\n\t\tresult = match[ 1 ] + match[ 1 ] + match[ 2 ] + match[ 2 ] + match[ 3 ] + match[ 3 ];\n\n\t}\n\n\tif ( result ) {\n\t\treturn '#' + result;\n\t}\n\n\treturn false;\n\n}\n\nconst STRING = {\n\tisPrimitive: true,\n\tmatch: v => typeof v === 'string',\n\tfromHexString: normalizeColorString,\n\ttoHexString: normalizeColorString\n};\n\nconst INT = {\n\tisPrimitive: true,\n\tmatch: v => typeof v === 'number',\n\tfromHexString: string => parseInt( string.substring( 1 ), 16 ),\n\ttoHexString: value => '#' + value.toString( 16 ).padStart( 6, 0 )\n};\n\nconst ARRAY = {\n\tisPrimitive: false,\n\n\t// The arrow function is here to appease tree shakers like esbuild or webpack.\n\t// See https://esbuild.github.io/api/#tree-shaking\n\tmatch: v => Array.isArray( v ),\n\n\tfromHexString( string, target, rgbScale = 1 ) {\n\n\t\tconst int = INT.fromHexString( string );\n\n\t\ttarget[ 0 ] = ( int >> 16 & 255 ) / 255 * rgbScale;\n\t\ttarget[ 1 ] = ( int >> 8 & 255 ) / 255 * rgbScale;\n\t\ttarget[ 2 ] = ( int & 255 ) / 255 * rgbScale;\n\n\t},\n\ttoHexString( [ r, g, b ], rgbScale = 1 ) {\n\n\t\trgbScale = 255 / rgbScale;\n\n\t\tconst int = ( r * rgbScale ) << 16 ^\n\t\t\t( g * rgbScale ) << 8 ^\n\t\t\t( b * rgbScale ) << 0;\n\n\t\treturn INT.toHexString( int );\n\n\t}\n};\n\nconst OBJECT = {\n\tisPrimitive: false,\n\tmatch: v => Object( v ) === v,\n\tfromHexString( string, target, rgbScale = 1 ) {\n\n\t\tconst int = INT.fromHexString( string );\n\n\t\ttarget.r = ( int >> 16 & 255 ) / 255 * rgbScale;\n\t\ttarget.g = ( int >> 8 & 255 ) / 255 * rgbScale;\n\t\ttarget.b = ( int & 255 ) / 255 * rgbScale;\n\n\t},\n\ttoHexString( { r, g, b }, rgbScale = 1 ) {\n\n\t\trgbScale = 255 / rgbScale;\n\n\t\tconst int = ( r * rgbScale ) << 16 ^\n\t\t\t( g * rgbScale ) << 8 ^\n\t\t\t( b * rgbScale ) << 0;\n\n\t\treturn INT.toHexString( int );\n\n\t}\n};\n\nconst FORMATS = [ STRING, INT, ARRAY, OBJECT ];\n\nfunction getColorFormat( value ) {\n\treturn FORMATS.find( format => format.match( value ) );\n}\n\nclass ColorController extends Controller {\n\n\tconstructor( parent, object, property, rgbScale ) {\n\n\t\tsuper( parent, object, property, 'color' );\n\n\t\tthis.$input = document.createElement( 'input' );\n\t\tthis.$input.setAttribute( 'type', 'color' );\n\t\tthis.$input.setAttribute( 'tabindex', -1 );\n\t\tthis.$input.setAttribute( 'aria-labelledby', this.$name.id );\n\n\t\tthis.$text = document.createElement( 'input' );\n\t\tthis.$text.setAttribute( 'type', 'text' );\n\t\tthis.$text.setAttribute( 'spellcheck', 'false' );\n\t\tthis.$text.setAttribute( 'aria-labelledby', this.$name.id );\n\n\t\tthis.$display = document.createElement( 'div' );\n\t\tthis.$display.classList.add( 'display' );\n\n\t\tthis.$display.appendChild( this.$input );\n\t\tthis.$widget.appendChild( this.$display );\n\t\tthis.$widget.appendChild( this.$text );\n\n\t\tthis._format = getColorFormat( this.initialValue );\n\t\tthis._rgbScale = rgbScale;\n\n\t\tthis._initialValueHexString = this.save();\n\t\tthis._textFocused = false;\n\n\t\tthis.$input.addEventListener( 'input', () => {\n\t\t\tthis._setValueFromHexString( this.$input.value );\n\t\t} );\n\n\t\tthis.$input.addEventListener( 'blur', () => {\n\t\t\tthis._callOnFinishChange();\n\t\t} );\n\n\t\tthis.$text.addEventListener( 'input', () => {\n\t\t\tconst tryParse = normalizeColorString( this.$text.value );\n\t\t\tif ( tryParse ) {\n\t\t\t\tthis._setValueFromHexString( tryParse );\n\t\t\t}\n\t\t} );\n\n\t\tthis.$text.addEventListener( 'focus', () => {\n\t\t\tthis._textFocused = true;\n\t\t\tthis.$text.select();\n\t\t} );\n\n\t\tthis.$text.addEventListener( 'blur', () => {\n\t\t\tthis._textFocused = false;\n\t\t\tthis.updateDisplay();\n\t\t\tthis._callOnFinishChange();\n\t\t} );\n\n\t\tthis.$disable = this.$text;\n\n\t\tthis.updateDisplay();\n\n\t}\n\n\treset() {\n\t\tthis._setValueFromHexString( this._initialValueHexString );\n\t\treturn this;\n\t}\n\n\t_setValueFromHexString( value ) {\n\n\t\tif ( this._format.isPrimitive ) {\n\n\t\t\tconst newValue = this._format.fromHexString( value );\n\t\t\tthis.setValue( newValue );\n\n\t\t} else {\n\n\t\t\tthis._format.fromHexString( value, this.getValue(), this._rgbScale );\n\t\t\tthis._callOnChange();\n\t\t\tthis.updateDisplay();\n\n\t\t}\n\n\t}\n\n\tsave() {\n\t\treturn this._format.toHexString( this.getValue(), this._rgbScale );\n\t}\n\n\tload( value ) {\n\t\tthis._setValueFromHexString( value );\n\t\tthis._callOnFinishChange();\n\t\treturn this;\n\t}\n\n\tupdateDisplay() {\n\t\tthis.$input.value = this._format.toHexString( this.getValue(), this._rgbScale );\n\t\tif ( !this._textFocused ) {\n\t\t\tthis.$text.value = this.$input.value.substring( 1 );\n\t\t}\n\t\tthis.$display.style.backgroundColor = this.$input.value;\n\t\treturn this;\n\t}\n\n}\n\nclass FunctionController extends Controller {\n\n\tconstructor( parent, object, property ) {\n\n\t\tsuper( parent, object, property, 'function' );\n\n\t\t// Buttons are the only case where widget contains name\n\t\tthis.$button = document.createElement( 'button' );\n\t\tthis.$button.appendChild( this.$name );\n\t\tthis.$widget.appendChild( this.$button );\n\n\t\tthis.$button.addEventListener( 'click', e => {\n\t\t\te.preventDefault();\n\t\t\tthis.getValue().call( this.object );\n\t\t\tthis._callOnChange();\n\t\t} );\n\n\t\t// enables :active pseudo class on mobile\n\t\tthis.$button.addEventListener( 'touchstart', () => {}, { passive: true } );\n\n\t\tthis.$disable = this.$button;\n\n\t}\n\n}\n\nclass NumberController extends Controller {\n\n\tconstructor( parent, object, property, min, max, step ) {\n\n\t\tsuper( parent, object, property, 'number' );\n\n\t\tthis._initInput();\n\n\t\tthis.min( min );\n\t\tthis.max( max );\n\n\t\tconst stepExplicit = step !== undefined;\n\t\tthis.step( stepExplicit ? step : this._getImplicitStep(), stepExplicit );\n\n\t\tthis.updateDisplay();\n\n\t}\n\n\tdecimals( decimals ) {\n\t\tthis._decimals = decimals;\n\t\tthis.updateDisplay();\n\t\treturn this;\n\t}\n\n\tmin( min ) {\n\t\tthis._min = min;\n\t\tthis._onUpdateMinMax();\n\t\treturn this;\n\t}\n\n\tmax( max ) {\n\t\tthis._max = max;\n\t\tthis._onUpdateMinMax();\n\t\treturn this;\n\t}\n\n\tstep( step, explicit = true ) {\n\t\tthis._step = step;\n\t\tthis._stepExplicit = explicit;\n\t\treturn this;\n\t}\n\n\tupdateDisplay() {\n\n\t\tconst value = this.getValue();\n\n\t\tif ( this._hasSlider ) {\n\n\t\t\tlet percent = ( value - this._min ) / ( this._max - this._min );\n\t\t\tpercent = Math.max( 0, Math.min( percent, 1 ) );\n\n\t\t\tthis.$fill.style.width = percent * 100 + '%';\n\n\t\t}\n\n\t\tif ( !this._inputFocused ) {\n\t\t\tthis.$input.value = this._decimals === undefined ? value : value.toFixed( this._decimals );\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t_initInput() {\n\n\t\tthis.$input = document.createElement( 'input' );\n\t\tthis.$input.setAttribute( 'type', 'text' );\n\t\tthis.$input.setAttribute( 'aria-labelledby', this.$name.id );\n\n\t\t// On touch devices only, use input[type=number] to force a numeric keyboard.\n\t\t// Ideally we could use one input type everywhere, but [type=number] has quirks\n\t\t// on desktop, and [inputmode=decimal] has quirks on iOS.\n\t\t// See https://github.com/georgealways/lil-gui/pull/16\n\n\t\tconst isTouch = window.matchMedia( '(pointer: coarse)' ).matches;\n\n\t\tif ( isTouch ) {\n\t\t\tthis.$input.setAttribute( 'type', 'number' );\n\t\t\tthis.$input.setAttribute( 'step', 'any' );\n\t\t}\n\n\t\tthis.$widget.appendChild( this.$input );\n\n\t\tthis.$disable = this.$input;\n\n\t\tconst onInput = () => {\n\n\t\t\tlet value = parseFloat( this.$input.value );\n\n\t\t\tif ( isNaN( value ) ) return;\n\n\t\t\tif ( this._stepExplicit ) {\n\t\t\t\tvalue = this._snap( value );\n\t\t\t}\n\n\t\t\tthis.setValue( this._clamp( value ) );\n\n\t\t};\n\n\t\t// Keys & mouse wheel\n\t\t// ---------------------------------------------------------------------\n\n\t\tconst increment = delta => {\n\n\t\t\tconst value = parseFloat( this.$input.value );\n\n\t\t\tif ( isNaN( value ) ) return;\n\n\t\t\tthis._snapClampSetValue( value + delta );\n\n\t\t\t// Force the input to updateDisplay when it's focused\n\t\t\tthis.$input.value = this.getValue();\n\n\t\t};\n\n\t\tconst onKeyDown = e => {\n\t\t\t// Using `e.key` instead of `e.code` also catches NumpadEnter\n\t\t\tif ( e.key === 'Enter' ) {\n\t\t\t\tthis.$input.blur();\n\t\t\t}\n\t\t\tif ( e.code === 'ArrowUp' ) {\n\t\t\t\te.preventDefault();\n\t\t\t\tincrement( this._step * this._arrowKeyMultiplier( e ) );\n\t\t\t}\n\t\t\tif ( e.code === 'ArrowDown' ) {\n\t\t\t\te.preventDefault();\n\t\t\t\tincrement( this._step * this._arrowKeyMultiplier( e ) * -1 );\n\t\t\t}\n\t\t};\n\n\t\tconst onWheel = e => {\n\t\t\tif ( this._inputFocused ) {\n\t\t\t\te.preventDefault();\n\t\t\t\tincrement( this._step * this._normalizeMouseWheel( e ) );\n\t\t\t}\n\t\t};\n\n\t\t// Vertical drag\n\t\t// ---------------------------------------------------------------------\n\n\t\tlet testingForVerticalDrag = false,\n\t\t\tinitClientX,\n\t\t\tinitClientY,\n\t\t\tprevClientY,\n\t\t\tinitValue,\n\t\t\tdragDelta;\n\n\t\t// Once the mouse is dragged more than DRAG_THRESH px on any axis, we decide\n\t\t// on the user's intent: horizontal means highlight, vertical means drag.\n\t\tconst DRAG_THRESH = 5;\n\n\t\tconst onMouseDown = e => {\n\n\t\t\tinitClientX = e.clientX;\n\t\t\tinitClientY = prevClientY = e.clientY;\n\t\t\ttestingForVerticalDrag = true;\n\n\t\t\tinitValue = this.getValue();\n\t\t\tdragDelta = 0;\n\n\t\t\twindow.addEventListener( 'mousemove', onMouseMove );\n\t\t\twindow.addEventListener( 'mouseup', onMouseUp );\n\n\t\t};\n\n\t\tconst onMouseMove = e => {\n\n\t\t\tif ( testingForVerticalDrag ) {\n\n\t\t\t\tconst dx = e.clientX - initClientX;\n\t\t\t\tconst dy = e.clientY - initClientY;\n\n\t\t\t\tif ( Math.abs( dy ) > DRAG_THRESH ) {\n\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tthis.$input.blur();\n\t\t\t\t\ttestingForVerticalDrag = false;\n\t\t\t\t\tthis._setDraggingStyle( true, 'vertical' );\n\n\t\t\t\t} else if ( Math.abs( dx ) > DRAG_THRESH ) {\n\n\t\t\t\t\tonMouseUp();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// This isn't an else so that the first move counts towards dragDelta\n\t\t\tif ( !testingForVerticalDrag ) {\n\n\t\t\t\tconst dy = e.clientY - prevClientY;\n\n\t\t\t\tdragDelta -= dy * this._step * this._arrowKeyMultiplier( e );\n\n\t\t\t\t// Clamp dragDelta so we don't have 'dead space' after dragging past bounds.\n\t\t\t\t// We're okay with the fact that bounds can be undefined here.\n\t\t\t\tif ( initValue + dragDelta > this._max ) {\n\t\t\t\t\tdragDelta = this._max - initValue;\n\t\t\t\t} else if ( initValue + dragDelta < this._min ) {\n\t\t\t\t\tdragDelta = this._min - initValue;\n\t\t\t\t}\n\n\t\t\t\tthis._snapClampSetValue( initValue + dragDelta );\n\n\t\t\t}\n\n\t\t\tprevClientY = e.clientY;\n\n\t\t};\n\n\t\tconst onMouseUp = () => {\n\t\t\tthis._setDraggingStyle( false, 'vertical' );\n\t\t\tthis._callOnFinishChange();\n\t\t\twindow.removeEventListener( 'mousemove', onMouseMove );\n\t\t\twindow.removeEventListener( 'mouseup', onMouseUp );\n\t\t};\n\n\t\t// Focus state & onFinishChange\n\t\t// ---------------------------------------------------------------------\n\n\t\tconst onFocus = () => {\n\t\t\tthis._inputFocused = true;\n\t\t};\n\n\t\tconst onBlur = () => {\n\t\t\tthis._inputFocused = false;\n\t\t\tthis.updateDisplay();\n\t\t\tthis._callOnFinishChange();\n\t\t};\n\n\t\tthis.$input.addEventListener( 'input', onInput );\n\t\tthis.$input.addEventListener( 'keydown', onKeyDown );\n\t\tthis.$input.addEventListener( 'wheel', onWheel, { passive: false } );\n\t\tthis.$input.addEventListener( 'mousedown', onMouseDown );\n\t\tthis.$input.addEventListener( 'focus', onFocus );\n\t\tthis.$input.addEventListener( 'blur', onBlur );\n\n\t}\n\n\t_initSlider() {\n\n\t\tthis._hasSlider = true;\n\n\t\t// Build DOM\n\t\t// ---------------------------------------------------------------------\n\n\t\tthis.$slider = document.createElement( 'div' );\n\t\tthis.$slider.classList.add( 'slider' );\n\n\t\tthis.$fill = document.createElement( 'div' );\n\t\tthis.$fill.classList.add( 'fill' );\n\n\t\tthis.$slider.appendChild( this.$fill );\n\t\tthis.$widget.insertBefore( this.$slider, this.$input );\n\n\t\tthis.domElement.classList.add( 'hasSlider' );\n\n\t\t// Map clientX to value\n\t\t// ---------------------------------------------------------------------\n\n\t\tconst map = ( v, a, b, c, d ) => {\n\t\t\treturn ( v - a ) / ( b - a ) * ( d - c ) + c;\n\t\t};\n\n\t\tconst setValueFromX = clientX => {\n\t\t\tconst rect = this.$slider.getBoundingClientRect();\n\t\t\tlet value = map( clientX, rect.left, rect.right, this._min, this._max );\n\t\t\tthis._snapClampSetValue( value );\n\t\t};\n\n\t\t// Mouse drag\n\t\t// ---------------------------------------------------------------------\n\n\t\tconst mouseDown = e => {\n\t\t\tthis._setDraggingStyle( true );\n\t\t\tsetValueFromX( e.clientX );\n\t\t\twindow.addEventListener( 'mousemove', mouseMove );\n\t\t\twindow.addEventListener( 'mouseup', mouseUp );\n\t\t};\n\n\t\tconst mouseMove = e => {\n\t\t\tsetValueFromX( e.clientX );\n\t\t};\n\n\t\tconst mouseUp = () => {\n\t\t\tthis._callOnFinishChange();\n\t\t\tthis._setDraggingStyle( false );\n\t\t\twindow.removeEventListener( 'mousemove', mouseMove );\n\t\t\twindow.removeEventListener( 'mouseup', mouseUp );\n\t\t};\n\n\t\t// Touch drag\n\t\t// ---------------------------------------------------------------------\n\n\t\tlet testingForScroll = false, prevClientX, prevClientY;\n\n\t\tconst beginTouchDrag = e => {\n\t\t\te.preventDefault();\n\t\t\tthis._setDraggingStyle( true );\n\t\t\tsetValueFromX( e.touches[ 0 ].clientX );\n\t\t\ttestingForScroll = false;\n\t\t};\n\n\t\tconst onTouchStart = e => {\n\n\t\t\tif ( e.touches.length > 1 ) return;\n\n\t\t\t// If we're in a scrollable container, we should wait for the first\n\t\t\t// touchmove to see if the user is trying to slide or scroll.\n\t\t\tif ( this._hasScrollBar ) {\n\n\t\t\t\tprevClientX = e.touches[ 0 ].clientX;\n\t\t\t\tprevClientY = e.touches[ 0 ].clientY;\n\t\t\t\ttestingForScroll = true;\n\n\t\t\t} else {\n\n\t\t\t\t// Otherwise, we can set the value straight away on touchstart.\n\t\t\t\tbeginTouchDrag( e );\n\n\t\t\t}\n\n\t\t\twindow.addEventListener( 'touchmove', onTouchMove, { passive: false } );\n\t\t\twindow.addEventListener( 'touchend', onTouchEnd );\n\n\t\t};\n\n\t\tconst onTouchMove = e => {\n\n\t\t\tif ( testingForScroll ) {\n\n\t\t\t\tconst dx = e.touches[ 0 ].clientX - prevClientX;\n\t\t\t\tconst dy = e.touches[ 0 ].clientY - prevClientY;\n\n\t\t\t\tif ( Math.abs( dx ) > Math.abs( dy ) ) {\n\n\t\t\t\t\t// We moved horizontally, set the value and stop checking.\n\t\t\t\t\tbeginTouchDrag( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// This was, in fact, an attempt to scroll. Abort.\n\t\t\t\t\twindow.removeEventListener( 'touchmove', onTouchMove );\n\t\t\t\t\twindow.removeEventListener( 'touchend', onTouchEnd );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\te.preventDefault();\n\t\t\t\tsetValueFromX( e.touches[ 0 ].clientX );\n\n\t\t\t}\n\n\t\t};\n\n\t\tconst onTouchEnd = () => {\n\t\t\tthis._callOnFinishChange();\n\t\t\tthis._setDraggingStyle( false );\n\t\t\twindow.removeEventListener( 'touchmove', onTouchMove );\n\t\t\twindow.removeEventListener( 'touchend', onTouchEnd );\n\t\t};\n\n\t\t// Mouse wheel\n\t\t// ---------------------------------------------------------------------\n\n\t\t// We have to use a debounced function to call onFinishChange because\n\t\t// there's no way to tell when the user is \"done\" mouse-wheeling.\n\t\tconst callOnFinishChange = this._callOnFinishChange.bind( this );\n\t\tconst WHEEL_DEBOUNCE_TIME = 400;\n\t\tlet wheelFinishChangeTimeout;\n\n\t\tconst onWheel = e => {\n\n\t\t\t// ignore vertical wheels if there's a scrollbar\n\t\t\tconst isVertical = Math.abs( e.deltaX ) < Math.abs( e.deltaY );\n\t\t\tif ( isVertical && this._hasScrollBar ) return;\n\n\t\t\te.preventDefault();\n\n\t\t\t// set value\n\t\t\tconst delta = this._normalizeMouseWheel( e ) * this._step;\n\t\t\tthis._snapClampSetValue( this.getValue() + delta );\n\n\t\t\t// force the input to updateDisplay when it's focused\n\t\t\tthis.$input.value = this.getValue();\n\n\t\t\t// debounce onFinishChange\n\t\t\tclearTimeout( wheelFinishChangeTimeout );\n\t\t\twheelFinishChangeTimeout = setTimeout( callOnFinishChange, WHEEL_DEBOUNCE_TIME );\n\n\t\t};\n\n\t\tthis.$slider.addEventListener( 'mousedown', mouseDown );\n\t\tthis.$slider.addEventListener( 'touchstart', onTouchStart, { passive: false } );\n\t\tthis.$slider.addEventListener( 'wheel', onWheel, { passive: false } );\n\n\t}\n\n\t_setDraggingStyle( active, axis = 'horizontal' ) {\n\t\tif ( this.$slider ) {\n\t\t\tthis.$slider.classList.toggle( 'active', active );\n\t\t}\n\t\tdocument.body.classList.toggle( 'lil-gui-dragging', active );\n\t\tdocument.body.classList.toggle( `lil-gui-${axis}`, active );\n\t}\n\n\t_getImplicitStep() {\n\n\t\tif ( this._hasMin && this._hasMax ) {\n\t\t\treturn ( this._max - this._min ) / 1000;\n\t\t}\n\n\t\treturn 0.1;\n\n\t}\n\n\t_onUpdateMinMax() {\n\n\t\tif ( !this._hasSlider && this._hasMin && this._hasMax ) {\n\n\t\t\t// If this is the first time we're hearing about min and max\n\t\t\t// and we haven't explicitly stated what our step is, let's\n\t\t\t// update that too.\n\t\t\tif ( !this._stepExplicit ) {\n\t\t\t\tthis.step( this._getImplicitStep(), false );\n\t\t\t}\n\n\t\t\tthis._initSlider();\n\t\t\tthis.updateDisplay();\n\n\t\t}\n\n\t}\n\n\t_normalizeMouseWheel( e ) {\n\n\t\tlet { deltaX, deltaY } = e;\n\n\t\t// Safari and Chrome report weird non-integral values for a notched wheel,\n\t\t// but still expose actual lines scrolled via wheelDelta. Notched wheels\n\t\t// should behave the same way as arrow keys.\n\t\tif ( Math.floor( e.deltaY ) !== e.deltaY && e.wheelDelta ) {\n\t\t\tdeltaX = 0;\n\t\t\tdeltaY = -e.wheelDelta / 120;\n\t\t\tdeltaY *= this._stepExplicit ? 1 : 10;\n\t\t}\n\n\t\tconst wheel = deltaX + -deltaY;\n\n\t\treturn wheel;\n\n\t}\n\n\t_arrowKeyMultiplier( e ) {\n\n\t\tlet mult = this._stepExplicit ? 1 : 10;\n\n\t\tif ( e.shiftKey ) {\n\t\t\tmult *= 10;\n\t\t} else if ( e.altKey ) {\n\t\t\tmult /= 10;\n\t\t}\n\n\t\treturn mult;\n\n\t}\n\n\t_snap( value ) {\n\n\t\t// This would be the logical way to do things, but floating point errors.\n\t\t// return Math.round( value / this._step ) * this._step;\n\n\t\t// Using inverse step solves a lot of them, but not all\n\t\t// const inverseStep = 1 / this._step;\n\t\t// return Math.round( value * inverseStep ) / inverseStep;\n\n\t\t// Not happy about this, but haven't seen it break.\n\t\tconst r = Math.round( value / this._step ) * this._step;\n\t\treturn parseFloat( r.toPrecision( 15 ) );\n\n\t}\n\n\t_clamp( value ) {\n\t\t// either condition is false if min or max is undefined\n\t\tif ( value < this._min ) value = this._min;\n\t\tif ( value > this._max ) value = this._max;\n\t\treturn value;\n\t}\n\n\t_snapClampSetValue( value ) {\n\t\tthis.setValue( this._clamp( this._snap( value ) ) );\n\t}\n\n\tget _hasScrollBar() {\n\t\tconst root = this.parent.root.$children;\n\t\treturn root.scrollHeight > root.clientHeight;\n\t}\n\n\tget _hasMin() {\n\t\treturn this._min !== undefined;\n\t}\n\n\tget _hasMax() {\n\t\treturn this._max !== undefined;\n\t}\n\n}\n\nclass OptionController extends Controller {\n\n\tconstructor( parent, object, property, options ) {\n\n\t\tsuper( parent, object, property, 'option' );\n\n\t\tthis.$select = document.createElement( 'select' );\n\t\tthis.$select.setAttribute( 'aria-labelledby', this.$name.id );\n\n\t\tthis.$display = document.createElement( 'div' );\n\t\tthis.$display.classList.add( 'display' );\n\n\t\tthis.$select.addEventListener( 'change', () => {\n\t\t\tthis.setValue( this._values[ this.$select.selectedIndex ] );\n\t\t\tthis._callOnFinishChange();\n\t\t} );\n\n\t\tthis.$select.addEventListener( 'focus', () => {\n\t\t\tthis.$display.classList.add( 'focus' );\n\t\t} );\n\n\t\tthis.$select.addEventListener( 'blur', () => {\n\t\t\tthis.$display.classList.remove( 'focus' );\n\t\t} );\n\n\t\tthis.$widget.appendChild( this.$select );\n\t\tthis.$widget.appendChild( this.$display );\n\n\t\tthis.$disable = this.$select;\n\n\t\tthis.options( options );\n\n\t}\n\n\toptions( options ) {\n\n\t\tthis._values = Array.isArray( options ) ? options : Object.values( options );\n\t\tthis._names = Array.isArray( options ) ? options : Object.keys( options );\n\n\t\tthis.$select.replaceChildren();\n\n\t\tthis._names.forEach( name => {\n\t\t\tconst $option = document.createElement( 'option' );\n\t\t\t$option.textContent = name;\n\t\t\tthis.$select.appendChild( $option );\n\t\t} );\n\n\t\tthis.updateDisplay();\n\n\t\treturn this;\n\n\t}\n\n\tupdateDisplay() {\n\t\tconst value = this.getValue();\n\t\tconst index = this._values.indexOf( value );\n\t\tthis.$select.selectedIndex = index;\n\t\tthis.$display.textContent = index === -1 ? value : this._names[ index ];\n\t\treturn this;\n\t}\n\n}\n\nclass StringController extends Controller {\n\n\tconstructor( parent, object, property ) {\n\n\t\tsuper( parent, object, property, 'string' );\n\n\t\tthis.$input = document.createElement( 'input' );\n\t\tthis.$input.setAttribute( 'type', 'text' );\n\t\tthis.$input.setAttribute( 'spellcheck', 'false' );\n\t\tthis.$input.setAttribute( 'aria-labelledby', this.$name.id );\n\n\t\tthis.$input.addEventListener( 'input', () => {\n\t\t\tthis.setValue( this.$input.value );\n\t\t} );\n\n\t\tthis.$input.addEventListener( 'keydown', e => {\n\t\t\tif ( e.code === 'Enter' ) {\n\t\t\t\tthis.$input.blur();\n\t\t\t}\n\t\t} );\n\n\t\tthis.$input.addEventListener( 'blur', () => {\n\t\t\tthis._callOnFinishChange();\n\t\t} );\n\n\t\tthis.$widget.appendChild( this.$input );\n\n\t\tthis.$disable = this.$input;\n\n\t\tthis.updateDisplay();\n\n\t}\n\n\tupdateDisplay() {\n\t\tthis.$input.value = this.getValue();\n\t\treturn this;\n\t}\n\n}\n\nconst stylesheet = `.lil-gui {\n  font-family: var(--font-family);\n  font-size: var(--font-size);\n  line-height: 1;\n  font-weight: normal;\n  font-style: normal;\n  text-align: left;\n  color: var(--text-color);\n  user-select: none;\n  -webkit-user-select: none;\n  touch-action: manipulation;\n  --background-color: #1f1f1f;\n  --text-color: #ebebeb;\n  --title-background-color: #111111;\n  --title-text-color: #ebebeb;\n  --widget-color: #424242;\n  --hover-color: #4f4f4f;\n  --focus-color: #595959;\n  --number-color: #2cc9ff;\n  --string-color: #a2db3c;\n  --font-size: 11px;\n  --input-font-size: 11px;\n  --font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Arial, sans-serif;\n  --font-family-mono: Menlo, Monaco, Consolas, \"Droid Sans Mono\", monospace;\n  --padding: 4px;\n  --spacing: 4px;\n  --widget-height: 20px;\n  --title-height: calc(var(--widget-height) + var(--spacing) * 1.25);\n  --name-width: 45%;\n  --slider-knob-width: 2px;\n  --slider-input-width: 27%;\n  --color-input-width: 27%;\n  --slider-input-min-width: 45px;\n  --color-input-min-width: 45px;\n  --folder-indent: 7px;\n  --widget-padding: 0 0 0 3px;\n  --widget-border-radius: 2px;\n  --checkbox-size: calc(0.75 * var(--widget-height));\n  --scrollbar-width: 5px;\n}\n.lil-gui, .lil-gui * {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n}\n.lil-gui.root {\n  width: var(--width, 245px);\n  display: flex;\n  flex-direction: column;\n  background: var(--background-color);\n}\n.lil-gui.root > .title {\n  background: var(--title-background-color);\n  color: var(--title-text-color);\n}\n.lil-gui.root > .children {\n  overflow-x: hidden;\n  overflow-y: auto;\n}\n.lil-gui.root > .children::-webkit-scrollbar {\n  width: var(--scrollbar-width);\n  height: var(--scrollbar-width);\n  background: var(--background-color);\n}\n.lil-gui.root > .children::-webkit-scrollbar-thumb {\n  border-radius: var(--scrollbar-width);\n  background: var(--focus-color);\n}\n@media (pointer: coarse) {\n  .lil-gui.allow-touch-styles, .lil-gui.allow-touch-styles .lil-gui {\n    --widget-height: 28px;\n    --padding: 6px;\n    --spacing: 6px;\n    --font-size: 13px;\n    --input-font-size: 16px;\n    --folder-indent: 10px;\n    --scrollbar-width: 7px;\n    --slider-input-min-width: 50px;\n    --color-input-min-width: 65px;\n  }\n}\n.lil-gui.force-touch-styles, .lil-gui.force-touch-styles .lil-gui {\n  --widget-height: 28px;\n  --padding: 6px;\n  --spacing: 6px;\n  --font-size: 13px;\n  --input-font-size: 16px;\n  --folder-indent: 10px;\n  --scrollbar-width: 7px;\n  --slider-input-min-width: 50px;\n  --color-input-min-width: 65px;\n}\n.lil-gui.autoPlace {\n  max-height: 100%;\n  position: fixed;\n  top: 0;\n  right: 15px;\n  z-index: 1001;\n}\n\n.lil-gui .controller {\n  display: flex;\n  align-items: center;\n  padding: 0 var(--padding);\n  margin: var(--spacing) 0;\n}\n.lil-gui .controller.disabled {\n  opacity: 0.5;\n}\n.lil-gui .controller.disabled, .lil-gui .controller.disabled * {\n  pointer-events: none !important;\n}\n.lil-gui .controller > .name {\n  min-width: var(--name-width);\n  flex-shrink: 0;\n  white-space: pre;\n  padding-right: var(--spacing);\n  line-height: var(--widget-height);\n}\n.lil-gui .controller .widget {\n  position: relative;\n  display: flex;\n  align-items: center;\n  width: 100%;\n  min-height: var(--widget-height);\n}\n.lil-gui .controller.string input {\n  color: var(--string-color);\n}\n.lil-gui .controller.boolean {\n  cursor: pointer;\n}\n.lil-gui .controller.color .display {\n  width: 100%;\n  height: var(--widget-height);\n  border-radius: var(--widget-border-radius);\n  position: relative;\n}\n@media (hover: hover) {\n  .lil-gui .controller.color .display:hover:before {\n    content: \" \";\n    display: block;\n    position: absolute;\n    border-radius: var(--widget-border-radius);\n    border: 1px solid #fff9;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n  }\n}\n.lil-gui .controller.color input[type=color] {\n  opacity: 0;\n  width: 100%;\n  height: 100%;\n  cursor: pointer;\n}\n.lil-gui .controller.color input[type=text] {\n  margin-left: var(--spacing);\n  font-family: var(--font-family-mono);\n  min-width: var(--color-input-min-width);\n  width: var(--color-input-width);\n  flex-shrink: 0;\n}\n.lil-gui .controller.option select {\n  opacity: 0;\n  position: absolute;\n  width: 100%;\n  max-width: 100%;\n}\n.lil-gui .controller.option .display {\n  position: relative;\n  pointer-events: none;\n  border-radius: var(--widget-border-radius);\n  height: var(--widget-height);\n  line-height: var(--widget-height);\n  max-width: 100%;\n  overflow: hidden;\n  word-break: break-all;\n  padding-left: 0.55em;\n  padding-right: 1.75em;\n  background: var(--widget-color);\n}\n@media (hover: hover) {\n  .lil-gui .controller.option .display.focus {\n    background: var(--focus-color);\n  }\n}\n.lil-gui .controller.option .display.active {\n  background: var(--focus-color);\n}\n.lil-gui .controller.option .display:after {\n  font-family: \"lil-gui\";\n  content: \"↕\";\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  padding-right: 0.375em;\n}\n.lil-gui .controller.option .widget,\n.lil-gui .controller.option select {\n  cursor: pointer;\n}\n@media (hover: hover) {\n  .lil-gui .controller.option .widget:hover .display {\n    background: var(--hover-color);\n  }\n}\n.lil-gui .controller.number input {\n  color: var(--number-color);\n}\n.lil-gui .controller.number.hasSlider input {\n  margin-left: var(--spacing);\n  width: var(--slider-input-width);\n  min-width: var(--slider-input-min-width);\n  flex-shrink: 0;\n}\n.lil-gui .controller.number .slider {\n  width: 100%;\n  height: var(--widget-height);\n  background: var(--widget-color);\n  border-radius: var(--widget-border-radius);\n  padding-right: var(--slider-knob-width);\n  overflow: hidden;\n  cursor: ew-resize;\n  touch-action: pan-y;\n}\n@media (hover: hover) {\n  .lil-gui .controller.number .slider:hover {\n    background: var(--hover-color);\n  }\n}\n.lil-gui .controller.number .slider.active {\n  background: var(--focus-color);\n}\n.lil-gui .controller.number .slider.active .fill {\n  opacity: 0.95;\n}\n.lil-gui .controller.number .fill {\n  height: 100%;\n  border-right: var(--slider-knob-width) solid var(--number-color);\n  box-sizing: content-box;\n}\n\n.lil-gui-dragging .lil-gui {\n  --hover-color: var(--widget-color);\n}\n.lil-gui-dragging * {\n  cursor: ew-resize !important;\n}\n\n.lil-gui-dragging.lil-gui-vertical * {\n  cursor: ns-resize !important;\n}\n\n.lil-gui .title {\n  height: var(--title-height);\n  line-height: calc(var(--title-height) - 4px);\n  font-weight: 600;\n  padding: 0 var(--padding);\n  -webkit-tap-highlight-color: transparent;\n  cursor: pointer;\n  outline: none;\n  text-decoration-skip: objects;\n}\n.lil-gui .title:before {\n  font-family: \"lil-gui\";\n  content: \"▾\";\n  padding-right: 2px;\n  display: inline-block;\n}\n.lil-gui .title:active {\n  background: var(--title-background-color);\n  opacity: 0.75;\n}\n@media (hover: hover) {\n  body:not(.lil-gui-dragging) .lil-gui .title:hover {\n    background: var(--title-background-color);\n    opacity: 0.85;\n  }\n  .lil-gui .title:focus {\n    text-decoration: underline var(--focus-color);\n  }\n}\n.lil-gui.root > .title:focus {\n  text-decoration: none !important;\n}\n.lil-gui.closed > .title:before {\n  content: \"▸\";\n}\n.lil-gui.closed > .children {\n  transform: translateY(-7px);\n  opacity: 0;\n}\n.lil-gui.closed:not(.transition) > .children {\n  display: none;\n}\n.lil-gui.transition > .children {\n  transition-duration: 300ms;\n  transition-property: height, opacity, transform;\n  transition-timing-function: cubic-bezier(0.2, 0.6, 0.35, 1);\n  overflow: hidden;\n  pointer-events: none;\n}\n.lil-gui .children:empty:before {\n  content: \"Empty\";\n  padding: 0 var(--padding);\n  margin: var(--spacing) 0;\n  display: block;\n  height: var(--widget-height);\n  font-style: italic;\n  line-height: var(--widget-height);\n  opacity: 0.5;\n}\n.lil-gui.root > .children > .lil-gui > .title {\n  border: 0 solid var(--widget-color);\n  border-width: 1px 0;\n  transition: border-color 300ms;\n}\n.lil-gui.root > .children > .lil-gui.closed > .title {\n  border-bottom-color: transparent;\n}\n.lil-gui + .controller {\n  border-top: 1px solid var(--widget-color);\n  margin-top: 0;\n  padding-top: var(--spacing);\n}\n.lil-gui .lil-gui .lil-gui > .title {\n  border: none;\n}\n.lil-gui .lil-gui .lil-gui > .children {\n  border: none;\n  margin-left: var(--folder-indent);\n  border-left: 2px solid var(--widget-color);\n}\n.lil-gui .lil-gui .controller {\n  border: none;\n}\n\n.lil-gui label, .lil-gui input, .lil-gui button {\n  -webkit-tap-highlight-color: transparent;\n}\n.lil-gui input {\n  border: 0;\n  outline: none;\n  font-family: var(--font-family);\n  font-size: var(--input-font-size);\n  border-radius: var(--widget-border-radius);\n  height: var(--widget-height);\n  background: var(--widget-color);\n  color: var(--text-color);\n  width: 100%;\n}\n@media (hover: hover) {\n  .lil-gui input:hover {\n    background: var(--hover-color);\n  }\n  .lil-gui input:active {\n    background: var(--focus-color);\n  }\n}\n.lil-gui input:disabled {\n  opacity: 1;\n}\n.lil-gui input[type=text],\n.lil-gui input[type=number] {\n  padding: var(--widget-padding);\n  -moz-appearance: textfield;\n}\n.lil-gui input[type=text]:focus,\n.lil-gui input[type=number]:focus {\n  background: var(--focus-color);\n}\n.lil-gui input[type=checkbox] {\n  appearance: none;\n  width: var(--checkbox-size);\n  height: var(--checkbox-size);\n  border-radius: var(--widget-border-radius);\n  text-align: center;\n  cursor: pointer;\n}\n.lil-gui input[type=checkbox]:checked:before {\n  font-family: \"lil-gui\";\n  content: \"✓\";\n  font-size: var(--checkbox-size);\n  line-height: var(--checkbox-size);\n}\n@media (hover: hover) {\n  .lil-gui input[type=checkbox]:focus {\n    box-shadow: inset 0 0 0 1px var(--focus-color);\n  }\n}\n.lil-gui button {\n  outline: none;\n  cursor: pointer;\n  font-family: var(--font-family);\n  font-size: var(--font-size);\n  color: var(--text-color);\n  width: 100%;\n  height: var(--widget-height);\n  text-transform: none;\n  background: var(--widget-color);\n  border-radius: var(--widget-border-radius);\n  border: none;\n}\n@media (hover: hover) {\n  .lil-gui button:hover {\n    background: var(--hover-color);\n  }\n  .lil-gui button:focus {\n    box-shadow: inset 0 0 0 1px var(--focus-color);\n  }\n}\n.lil-gui button:active {\n  background: var(--focus-color);\n}\n\n@font-face {\n  font-family: \"lil-gui\";\n  src: url(\"data:application/font-woff;charset=utf-8;base64,d09GRgABAAAAAAUsAAsAAAAACJwAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAABHU1VCAAABCAAAAH4AAADAImwmYE9TLzIAAAGIAAAAPwAAAGBKqH5SY21hcAAAAcgAAAD0AAACrukyyJBnbHlmAAACvAAAAF8AAACEIZpWH2hlYWQAAAMcAAAAJwAAADZfcj2zaGhlYQAAA0QAAAAYAAAAJAC5AHhobXR4AAADXAAAABAAAABMAZAAAGxvY2EAAANsAAAAFAAAACgCEgIybWF4cAAAA4AAAAAeAAAAIAEfABJuYW1lAAADoAAAASIAAAIK9SUU/XBvc3QAAATEAAAAZgAAAJCTcMc2eJxVjbEOgjAURU+hFRBK1dGRL+ALnAiToyMLEzFpnPz/eAshwSa97517c/MwwJmeB9kwPl+0cf5+uGPZXsqPu4nvZabcSZldZ6kfyWnomFY/eScKqZNWupKJO6kXN3K9uCVoL7iInPr1X5baXs3tjuMqCtzEuagm/AAlzQgPAAB4nGNgYRBlnMDAysDAYM/gBiT5oLQBAwuDJAMDEwMrMwNWEJDmmsJwgCFeXZghBcjlZMgFCzOiKOIFAB71Bb8AeJy1kjFuwkAQRZ+DwRAwBtNQRUGKQ8OdKCAWUhAgKLhIuAsVSpWz5Bbkj3dEgYiUIszqWdpZe+Z7/wB1oCYmIoboiwiLT2WjKl/jscrHfGg/pKdMkyklC5Zs2LEfHYpjcRoPzme9MWWmk3dWbK9ObkWkikOetJ554fWyoEsmdSlt+uR0pCJR34b6t/TVg1SY3sYvdf8vuiKrpyaDXDISiegp17p7579Gp3p++y7HPAiY9pmTibljrr85qSidtlg4+l25GLCaS8e6rRxNBmsnERunKbaOObRz7N72ju5vdAjYpBXHgJylOAVsMseDAPEP8LYoUHicY2BiAAEfhiAGJgZWBgZ7RnFRdnVJELCQlBSRlATJMoLV2DK4glSYs6ubq5vbKrJLSbGrgEmovDuDJVhe3VzcXFwNLCOILB/C4IuQ1xTn5FPilBTj5FPmBAB4WwoqAHicY2BkYGAA4sk1sR/j+W2+MnAzpDBgAyEMQUCSg4EJxAEAwUgFHgB4nGNgZGBgSGFggJMhDIwMqEAYAByHATJ4nGNgAIIUNEwmAABl3AGReJxjYAACIQYlBiMGJ3wQAEcQBEV4nGNgZGBgEGZgY2BiAAEQyQWEDAz/wXwGAAsPATIAAHicXdBNSsNAHAXwl35iA0UQXYnMShfS9GPZA7T7LgIu03SSpkwzYTIt1BN4Ak/gKTyAeCxfw39jZkjymzcvAwmAW/wgwHUEGDb36+jQQ3GXGot79L24jxCP4gHzF/EIr4jEIe7wxhOC3g2TMYy4Q7+Lu/SHuEd/ivt4wJd4wPxbPEKMX3GI5+DJFGaSn4qNzk8mcbKSR6xdXdhSzaOZJGtdapd4vVPbi6rP+cL7TGXOHtXKll4bY1Xl7EGnPtp7Xy2n00zyKLVHfkHBa4IcJ2oD3cgggWvt/V/FbDrUlEUJhTn/0azVWbNTNr0Ens8de1tceK9xZmfB1CPjOmPH4kitmvOubcNpmVTN3oFJyjzCvnmrwhJTzqzVj9jiSX911FjeAAB4nG3HMRKCMBBA0f0giiKi4DU8k0V2GWbIZDOh4PoWWvq6J5V8If9NVNQcaDhyouXMhY4rPTcG7jwYmXhKq8Wz+p762aNaeYXom2n3m2dLTVgsrCgFJ7OTmIkYbwIbC6vIB7WmFfAAAA==\") format(\"woff\");\n}`;\n\nfunction _injectStyles( cssContent ) {\n\tconst injected = document.createElement( 'style' );\n\tinjected.innerHTML = cssContent;\n\tconst before = document.querySelector( 'head link[rel=stylesheet], head style' );\n\tif ( before ) {\n\t\tdocument.head.insertBefore( injected, before );\n\t} else {\n\t\tdocument.head.appendChild( injected );\n\t}\n}\n\nlet stylesInjected = false;\n\nclass GUI {\n\n\t/**\n\t * Creates a panel that holds controllers.\n\t * @example\n\t * new GUI();\n\t * new GUI( { container: document.getElementById( 'custom' ) } );\n\t *\n\t * @param {object} [options]\n\t * @param {boolean} [options.autoPlace=true]\n\t * Adds the GUI to `document.body` and fixes it to the top right of the page.\n\t *\n\t * @param {HTMLElement} [options.container]\n\t * Adds the GUI to this DOM element. Overrides `autoPlace`.\n\t *\n\t * @param {number} [options.width=245]\n\t * Width of the GUI in pixels, usually set when name labels become too long. Note that you can make\n\t * name labels wider in CSS with `.lil‑gui { ‑‑name‑width: 55% }`.\n\t *\n\t * @param {string} [options.title=Controls]\n\t * Name to display in the title bar.\n\t *\n\t * @param {boolean} [options.closeFolders=false]\n\t * Pass `true` to close all folders in this GUI by default.\n\t *\n\t * @param {boolean} [options.injectStyles=true]\n\t * Injects the default stylesheet into the page if this is the first GUI.\n\t * Pass `false` to use your own stylesheet.\n\t *\n\t * @param {number} [options.touchStyles=true]\n\t * Makes controllers larger on touch devices. Pass `false` to disable touch styles.\n\t *\n\t * @param {GUI} [options.parent]\n\t * Adds this GUI as a child in another GUI. Usually this is done for you by `addFolder()`.\n\t *\n\t */\n\tconstructor( {\n\t\tparent,\n\t\tautoPlace = parent === undefined,\n\t\tcontainer,\n\t\twidth,\n\t\ttitle = 'Controls',\n\t\tcloseFolders = false,\n\t\tinjectStyles = true,\n\t\ttouchStyles = true\n\t} = {} ) {\n\n\t\t/**\n\t\t * The GUI containing this folder, or `undefined` if this is the root GUI.\n\t\t * @type {GUI}\n\t\t */\n\t\tthis.parent = parent;\n\n\t\t/**\n\t\t * The top level GUI containing this folder, or `this` if this is the root GUI.\n\t\t * @type {GUI}\n\t\t */\n\t\tthis.root = parent ? parent.root : this;\n\n\t\t/**\n\t\t * The list of controllers and folders contained by this GUI.\n\t\t * @type {Array<GUI|Controller>}\n\t\t */\n\t\tthis.children = [];\n\n\t\t/**\n\t\t * The list of controllers contained by this GUI.\n\t\t * @type {Array<Controller>}\n\t\t */\n\t\tthis.controllers = [];\n\n\t\t/**\n\t\t * The list of folders contained by this GUI.\n\t\t * @type {Array<GUI>}\n\t\t */\n\t\tthis.folders = [];\n\n\t\t/**\n\t\t * Used to determine if the GUI is closed. Use `gui.open()` or `gui.close()` to change this.\n\t\t * @type {boolean}\n\t\t */\n\t\tthis._closed = false;\n\n\t\t/**\n\t\t * Used to determine if the GUI is hidden. Use `gui.show()` or `gui.hide()` to change this.\n\t\t * @type {boolean}\n\t\t */\n\t\tthis._hidden = false;\n\n\t\t/**\n\t\t * The outermost container element.\n\t\t * @type {HTMLElement}\n\t\t */\n\t\tthis.domElement = document.createElement( 'div' );\n\t\tthis.domElement.classList.add( 'lil-gui' );\n\n\t\t/**\n\t\t * The DOM element that contains the title.\n\t\t * @type {HTMLElement}\n\t\t */\n\t\tthis.$title = document.createElement( 'div' );\n\t\tthis.$title.classList.add( 'title' );\n\t\tthis.$title.setAttribute( 'role', 'button' );\n\t\tthis.$title.setAttribute( 'aria-expanded', true );\n\t\tthis.$title.setAttribute( 'tabindex', 0 );\n\n\t\tthis.$title.addEventListener( 'click', () => this.openAnimated( this._closed ) );\n\t\tthis.$title.addEventListener( 'keydown', e => {\n\t\t\tif ( e.code === 'Enter' || e.code === 'Space' ) {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.$title.click();\n\t\t\t}\n\t\t} );\n\n\t\t// enables :active pseudo class on mobile\n\t\tthis.$title.addEventListener( 'touchstart', () => {}, { passive: true } );\n\n\t\t/**\n\t\t * The DOM element that contains children.\n\t\t * @type {HTMLElement}\n\t\t */\n\t\tthis.$children = document.createElement( 'div' );\n\t\tthis.$children.classList.add( 'children' );\n\n\t\tthis.domElement.appendChild( this.$title );\n\t\tthis.domElement.appendChild( this.$children );\n\n\t\tthis.title( title );\n\n\t\tif ( this.parent ) {\n\n\t\t\tthis.parent.children.push( this );\n\t\t\tthis.parent.folders.push( this );\n\n\t\t\tthis.parent.$children.appendChild( this.domElement );\n\n\t\t\t// Stop the constructor early, everything onward only applies to root GUI's\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.domElement.classList.add( 'root' );\n\n\t\tif ( touchStyles ) {\n\t\t\tthis.domElement.classList.add( 'allow-touch-styles' );\n\t\t}\n\n\t\t// Inject stylesheet if we haven't done that yet\n\t\tif ( !stylesInjected && injectStyles ) {\n\t\t\t_injectStyles( stylesheet );\n\t\t\tstylesInjected = true;\n\t\t}\n\n\t\tif ( container ) {\n\n\t\t\tcontainer.appendChild( this.domElement );\n\n\t\t} else if ( autoPlace ) {\n\n\t\t\tthis.domElement.classList.add( 'autoPlace' );\n\t\t\tdocument.body.appendChild( this.domElement );\n\n\t\t}\n\n\t\tif ( width ) {\n\t\t\tthis.domElement.style.setProperty( '--width', width + 'px' );\n\t\t}\n\n\t\tthis._closeFolders = closeFolders;\n\n\t}\n\n\t/**\n\t * Adds a controller to the GUI, inferring controller type using the `typeof` operator.\n\t * @example\n\t * gui.add( object, 'property' );\n\t * gui.add( object, 'number', 0, 100, 1 );\n\t * gui.add( object, 'options', [ 1, 2, 3 ] );\n\t *\n\t * @param {object} object The object the controller will modify.\n\t * @param {string} property Name of the property to control.\n\t * @param {number|object|Array} [$1] Minimum value for number controllers, or the set of\n\t * selectable values for a dropdown.\n\t * @param {number} [max] Maximum value for number controllers.\n\t * @param {number} [step] Step value for number controllers.\n\t * @returns {Controller}\n\t */\n\tadd( object, property, $1, max, step ) {\n\n\t\tif ( Object( $1 ) === $1 ) {\n\n\t\t\treturn new OptionController( this, object, property, $1 );\n\n\t\t}\n\n\t\tconst initialValue = object[ property ];\n\n\t\tswitch ( typeof initialValue ) {\n\n\t\t\tcase 'number':\n\n\t\t\t\treturn new NumberController( this, object, property, $1, max, step );\n\n\t\t\tcase 'boolean':\n\n\t\t\t\treturn new BooleanController( this, object, property );\n\n\t\t\tcase 'string':\n\n\t\t\t\treturn new StringController( this, object, property );\n\n\t\t\tcase 'function':\n\n\t\t\t\treturn new FunctionController( this, object, property );\n\n\t\t}\n\n\t\tconsole.error( `gui.add failed\n\tproperty:`, property, `\n\tobject:`, object, `\n\tvalue:`, initialValue );\n\n\t}\n\n\t/**\n\t * Adds a color controller to the GUI.\n\t * @example\n\t * params = {\n\t * \tcssColor: '#ff00ff',\n\t * \trgbColor: { r: 0, g: 0.2, b: 0.4 },\n\t * \tcustomRange: [ 0, 127, 255 ],\n\t * };\n\t *\n\t * gui.addColor( params, 'cssColor' );\n\t * gui.addColor( params, 'rgbColor' );\n\t * gui.addColor( params, 'customRange', 255 );\n\t *\n\t * @param {object} object The object the controller will modify.\n\t * @param {string} property Name of the property to control.\n\t * @param {number} rgbScale Maximum value for a color channel when using an RGB color. You may\n\t * need to set this to 255 if your colors are too bright.\n\t * @returns {Controller}\n\t */\n\taddColor( object, property, rgbScale = 1 ) {\n\t\treturn new ColorController( this, object, property, rgbScale );\n\t}\n\n\t/**\n\t * Adds a folder to the GUI, which is just another GUI. This method returns\n\t * the nested GUI so you can add controllers to it.\n\t * @example\n\t * const folder = gui.addFolder( 'Position' );\n\t * folder.add( position, 'x' );\n\t * folder.add( position, 'y' );\n\t * folder.add( position, 'z' );\n\t *\n\t * @param {string} title Name to display in the folder's title bar.\n\t * @returns {GUI}\n\t */\n\taddFolder( title ) {\n\t\tconst folder = new GUI( { parent: this, title } );\n\t\tif ( this.root._closeFolders ) folder.close();\n\t\treturn folder;\n\t}\n\n\t/**\n\t * Recalls values that were saved with `gui.save()`.\n\t * @param {object} obj\n\t * @param {boolean} recursive Pass false to exclude folders descending from this GUI.\n\t * @returns {this}\n\t */\n\tload( obj, recursive = true ) {\n\n\t\tif ( obj.controllers ) {\n\n\t\t\tthis.controllers.forEach( c => {\n\n\t\t\t\tif ( c instanceof FunctionController ) return;\n\n\t\t\t\tif ( c._name in obj.controllers ) {\n\t\t\t\t\tc.load( obj.controllers[ c._name ] );\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t}\n\n\t\tif ( recursive && obj.folders ) {\n\n\t\t\tthis.folders.forEach( f => {\n\n\t\t\t\tif ( f._title in obj.folders ) {\n\t\t\t\t\tf.load( obj.folders[ f._title ] );\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Returns an object mapping controller names to values. The object can be passed to `gui.load()` to\n\t * recall these values.\n\t * @example\n\t * {\n\t * \tcontrollers: {\n\t * \t\tprop1: 1,\n\t * \t\tprop2: 'value',\n\t * \t\t...\n\t * \t},\n\t * \tfolders: {\n\t * \t\tfolderName1: { controllers, folders },\n\t * \t\tfolderName2: { controllers, folders }\n\t * \t\t...\n\t * \t}\n\t * }\n\t *\n\t * @param {boolean} recursive Pass false to exclude folders descending from this GUI.\n\t * @returns {object}\n\t */\n\tsave( recursive = true ) {\n\n\t\tconst obj = {\n\t\t\tcontrollers: {},\n\t\t\tfolders: {}\n\t\t};\n\n\t\tthis.controllers.forEach( c => {\n\n\t\t\tif ( c instanceof FunctionController ) return;\n\n\t\t\tif ( c._name in obj.controllers ) {\n\t\t\t\tthrow new Error( `Cannot save GUI with duplicate property \"${c._name}\"` );\n\t\t\t}\n\n\t\t\tobj.controllers[ c._name ] = c.save();\n\n\t\t} );\n\n\t\tif ( recursive ) {\n\n\t\t\tthis.folders.forEach( f => {\n\n\t\t\t\tif ( f._title in obj.folders ) {\n\t\t\t\t\tthrow new Error( `Cannot save GUI with duplicate folder \"${f._title}\"` );\n\t\t\t\t}\n\n\t\t\t\tobj.folders[ f._title ] = f.save();\n\n\t\t\t} );\n\n\t\t}\n\n\t\treturn obj;\n\n\t}\n\n\t/**\n\t * Opens a GUI or folder. GUI and folders are open by default.\n\t * @param {boolean} open Pass false to close.\n\t * @returns {this}\n\t * @example\n\t * gui.open(); // open\n\t * gui.open( false ); // close\n\t * gui.open( gui._closed ); // toggle\n\t */\n\topen( open = true ) {\n\n\t\tthis._setClosed( !open );\n\n\t\tthis.$title.setAttribute( 'aria-expanded', !this._closed );\n\t\tthis.domElement.classList.toggle( 'closed', this._closed );\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Closes the GUI.\n\t * @returns {this}\n\t */\n\tclose() {\n\t\treturn this.open( false );\n\t}\n\n\t_setClosed( closed ) {\n\t\tif ( this._closed === closed ) return;\n\t\tthis._closed = closed;\n\t\tthis._callOnOpenClose( this );\n\t}\n\n\t/**\n\t * Shows the GUI after it's been hidden.\n\t * @param {boolean} show\n\t * @returns {this}\n\t * @example\n\t * gui.show();\n\t * gui.show( false ); // hide\n\t * gui.show( gui._hidden ); // toggle\n\t */\n\tshow( show = true ) {\n\n\t\tthis._hidden = !show;\n\n\t\tthis.domElement.style.display = this._hidden ? 'none' : '';\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Hides the GUI.\n\t * @returns {this}\n\t */\n\thide() {\n\t\treturn this.show( false );\n\t}\n\n\topenAnimated( open = true ) {\n\n\t\t// set state immediately\n\t\tthis._setClosed( !open );\n\n\t\tthis.$title.setAttribute( 'aria-expanded', !this._closed );\n\n\t\t// wait for next frame to measure $children\n\t\trequestAnimationFrame( () => {\n\n\t\t\t// explicitly set initial height for transition\n\t\t\tconst initialHeight = this.$children.clientHeight;\n\t\t\tthis.$children.style.height = initialHeight + 'px';\n\n\t\t\tthis.domElement.classList.add( 'transition' );\n\n\t\t\tconst onTransitionEnd = e => {\n\t\t\t\tif ( e.target !== this.$children ) return;\n\t\t\t\tthis.$children.style.height = '';\n\t\t\t\tthis.domElement.classList.remove( 'transition' );\n\t\t\t\tthis.$children.removeEventListener( 'transitionend', onTransitionEnd );\n\t\t\t};\n\n\t\t\tthis.$children.addEventListener( 'transitionend', onTransitionEnd );\n\n\t\t\t// todo: this is wrong if children's scrollHeight makes for a gui taller than maxHeight\n\t\t\tconst targetHeight = !open ? 0 : this.$children.scrollHeight;\n\n\t\t\tthis.domElement.classList.toggle( 'closed', !open );\n\n\t\t\trequestAnimationFrame( () => {\n\t\t\t\tthis.$children.style.height = targetHeight + 'px';\n\t\t\t} );\n\n\t\t} );\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Change the title of this GUI.\n\t * @param {string} title\n\t * @returns {this}\n\t */\n\ttitle( title ) {\n\t\t/**\n\t\t * Current title of the GUI. Use `gui.title( 'Title' )` to modify this value.\n\t\t * @type {string}\n\t\t */\n\t\tthis._title = title;\n\t\tthis.$title.textContent = title;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Resets all controllers to their initial values.\n\t * @param {boolean} recursive Pass false to exclude folders descending from this GUI.\n\t * @returns {this}\n\t */\n\treset( recursive = true ) {\n\t\tconst controllers = recursive ? this.controllersRecursive() : this.controllers;\n\t\tcontrollers.forEach( c => c.reset() );\n\t\treturn this;\n\t}\n\n\t/**\n\t * Pass a function to be called whenever a controller in this GUI changes.\n\t * @param {function({object:object, property:string, value:any, controller:Controller})} callback\n\t * @returns {this}\n\t * @example\n\t * gui.onChange( event => {\n\t * \tevent.object     // object that was modified\n\t * \tevent.property   // string, name of property\n\t * \tevent.value      // new value of controller\n\t * \tevent.controller // controller that was modified\n\t * } );\n\t */\n\tonChange( callback ) {\n\t\t/**\n\t\t * Used to access the function bound to `onChange` events. Don't modify this value\n\t\t * directly. Use the `gui.onChange( callback )` method instead.\n\t\t * @type {Function}\n\t\t */\n\t\tthis._onChange = callback;\n\t\treturn this;\n\t}\n\n\t_callOnChange( controller ) {\n\n\t\tif ( this.parent ) {\n\t\t\tthis.parent._callOnChange( controller );\n\t\t}\n\n\t\tif ( this._onChange !== undefined ) {\n\t\t\tthis._onChange.call( this, {\n\t\t\t\tobject: controller.object,\n\t\t\t\tproperty: controller.property,\n\t\t\t\tvalue: controller.getValue(),\n\t\t\t\tcontroller\n\t\t\t} );\n\t\t}\n\t}\n\n\t/**\n\t * Pass a function to be called whenever a controller in this GUI has finished changing.\n\t * @param {function({object:object, property:string, value:any, controller:Controller})} callback\n\t * @returns {this}\n\t * @example\n\t * gui.onFinishChange( event => {\n\t * \tevent.object     // object that was modified\n\t * \tevent.property   // string, name of property\n\t * \tevent.value      // new value of controller\n\t * \tevent.controller // controller that was modified\n\t * } );\n\t */\n\tonFinishChange( callback ) {\n\t\t/**\n\t\t * Used to access the function bound to `onFinishChange` events. Don't modify this value\n\t\t * directly. Use the `gui.onFinishChange( callback )` method instead.\n\t\t * @type {Function}\n\t\t */\n\t\tthis._onFinishChange = callback;\n\t\treturn this;\n\t}\n\n\t_callOnFinishChange( controller ) {\n\n\t\tif ( this.parent ) {\n\t\t\tthis.parent._callOnFinishChange( controller );\n\t\t}\n\n\t\tif ( this._onFinishChange !== undefined ) {\n\t\t\tthis._onFinishChange.call( this, {\n\t\t\t\tobject: controller.object,\n\t\t\t\tproperty: controller.property,\n\t\t\t\tvalue: controller.getValue(),\n\t\t\t\tcontroller\n\t\t\t} );\n\t\t}\n\t}\n\n\t/**\n\t * Pass a function to be called when this GUI or its descendants are opened or closed.\n\t * @param {function(GUI)} callback\n\t * @returns {this}\n\t * @example\n\t * gui.onOpenClose( changedGUI => {\n\t * \tconsole.log( changedGUI._closed );\n\t * } );\n\t */\n\tonOpenClose( callback ) {\n\t\tthis._onOpenClose = callback;\n\t\treturn this;\n\t}\n\n\t_callOnOpenClose( changedGUI ) {\n\t\tif ( this.parent ) {\n\t\t\tthis.parent._callOnOpenClose( changedGUI );\n\t\t}\n\n\t\tif ( this._onOpenClose !== undefined ) {\n\t\t\tthis._onOpenClose.call( this, changedGUI );\n\t\t}\n\t}\n\n\t/**\n\t * Destroys all DOM elements and event listeners associated with this GUI.\n\t */\n\tdestroy() {\n\n\t\tif ( this.parent ) {\n\t\t\tthis.parent.children.splice( this.parent.children.indexOf( this ), 1 );\n\t\t\tthis.parent.folders.splice( this.parent.folders.indexOf( this ), 1 );\n\t\t}\n\n\t\tif ( this.domElement.parentElement ) {\n\t\t\tthis.domElement.parentElement.removeChild( this.domElement );\n\t\t}\n\n\t\tArray.from( this.children ).forEach( c => c.destroy() );\n\n\t}\n\n\t/**\n\t * Returns an array of controllers contained by this GUI and its descendents.\n\t * @returns {Controller[]}\n\t */\n\tcontrollersRecursive() {\n\t\tlet controllers = Array.from( this.controllers );\n\t\tthis.folders.forEach( f => {\n\t\t\tcontrollers = controllers.concat( f.controllersRecursive() );\n\t\t} );\n\t\treturn controllers;\n\t}\n\n\t/**\n\t * Returns an array of folders contained by this GUI and its descendents.\n\t * @returns {GUI[]}\n\t */\n\tfoldersRecursive() {\n\t\tlet folders = Array.from( this.folders );\n\t\tthis.folders.forEach( f => {\n\t\t\tfolders = folders.concat( f.foldersRecursive() );\n\t\t} );\n\t\treturn folders;\n\t}\n\n}\n\nexport default GUI;\nexport { BooleanController, ColorController, Controller, FunctionController, GUI, NumberController, OptionController, StringController };\n","import GUI from \"lil-gui\";\r\n\r\nconst stateString = \"state\";\r\nconst configString = \"config\";\r\n\r\nclass DataManager {\r\n  constructor() {\r\n    this.added = [];\r\n    this.listeners = [];\r\n    this.serializedConfig = {};\r\n    this.config = {};\r\n    this.state = {};\r\n  }\r\n\r\n  init() {\r\n    const gui = new GUI();\r\n\r\n    this.variables = gui.addFolder(\"Variables\");\r\n    this.buttons = gui.addFolder(\"Buttons\");\r\n\r\n    // load in the local data, if any\r\n    this.readData();\r\n    this.addButton({ name: \"Clear Data\", fn: () => this.clearData() });\r\n    gui.hide();\r\n  }\r\n\r\n  addEnum({ displayName, defaultValue, options, callback = null }) {\r\n    if (!this.config[displayName]) {\r\n      const existingValue =\r\n        this.serializedConfig[displayName]?.value ?? defaultValue;\r\n      this.config[displayName] = {\r\n        name: displayName,\r\n        defaultValue: defaultValue,\r\n        value: existingValue,\r\n        minOrOptions: options,\r\n      };\r\n      this.addConfigData(displayName, callback);\r\n      this.added.push(displayName);\r\n    }\r\n    return this.config[displayName];\r\n  }\r\n\r\n  addNumber({\r\n    displayName,\r\n    defaultValue,\r\n    min = null,\r\n    max = null,\r\n    step = null,\r\n    callback = null,\r\n  }) {\r\n    if (!this.config[displayName]) {\r\n      const existingValue =\r\n        this.serializedConfig[displayName]?.value ?? defaultValue;\r\n\r\n      this.config[displayName] = {\r\n        name: displayName,\r\n        defaultValue: defaultValue,\r\n        value: existingValue,\r\n        minOrOptions: min,\r\n        max,\r\n        step,\r\n      };\r\n\r\n      if (min !== null) {\r\n        this.config[displayName].value = Math.max(\r\n          min,\r\n          this.config[displayName].value\r\n        );\r\n      }\r\n      if (max !== null) {\r\n        this.config[displayName].value = Math.min(\r\n          max,\r\n          this.config[displayName].value\r\n        );\r\n      }\r\n      this.addConfigData(displayName, callback);\r\n      this.added.push(displayName);\r\n    }\r\n    return this.config[displayName];\r\n  }\r\n\r\n  addColor({ displayName, defaultValue, callback = null }) {\r\n    if (!this.config[displayName]) {\r\n      const existingValue =\r\n        this.serializedConfig[displayName]?.value ?? defaultValue;\r\n      this.config[displayName] = {\r\n        name: displayName,\r\n        defaultValue: defaultValue,\r\n        value: existingValue,\r\n      };\r\n      this.variables\r\n        .addColor(this.config[displayName], \"value\")\r\n        .name(displayName)\r\n        .onChange((v) => {\r\n          this.saveData();\r\n          this.notify();\r\n          if (callback) {\r\n            callback(v);\r\n          }\r\n        })\r\n        .listen();\r\n      this.added.push(displayName);\r\n    }\r\n    return this.config[displayName];\r\n  }\r\n\r\n  addButton({ fn, name }) {\r\n    const s = {};\r\n    s[name] = fn;\r\n    this.buttons.add(s, name);\r\n  }\r\n\r\n  addConfigData(key, callback) {\r\n    const {\r\n      minOrOptions = null,\r\n      max = null,\r\n      step = null,\r\n      name,\r\n    } = this.config[key];\r\n    this.variables\r\n      .add(this.config[key], \"value\", minOrOptions, max, step)\r\n      .name(name)\r\n      .onChange((v) => {\r\n        this.saveData();\r\n        this.notify();\r\n        if (callback) {\r\n          callback(v);\r\n        }\r\n      })\r\n      .listen();\r\n  }\r\n\r\n  notify() {\r\n    this.listeners.forEach((l) => l.configUpdated(this.config));\r\n  }\r\n\r\n  readData() {\r\n    const state = localStorage.getItem(stateString);\r\n    if (state && state != \"undefined\") {\r\n      this.state = JSON.parse(state);\r\n    } else {\r\n      this.state = {};\r\n    }\r\n\r\n    const config = localStorage.getItem(configString);\r\n    if (config && config != \"undefined\") {\r\n      this.serializedConfig = JSON.parse(config);\r\n    } else {\r\n      this.serializedConfig = {};\r\n    }\r\n  }\r\n\r\n  saveData() {\r\n    //localStorage.setItem(stateString, JSON.stringify(this.state));\r\n    //localStorage.setItem(configString, JSON.stringify(this.config));\r\n  }\r\n\r\n  clearData() {\r\n    if (localStorage.getItem(stateString)) {\r\n      localStorage.removeItem(stateString);\r\n    }\r\n    this.state = {};\r\n    if (localStorage.getItem(configString)) {\r\n      localStorage.removeItem(configString);\r\n    }\r\n\r\n    for (const [_, value] of Object.entries(this.config)) {\r\n      value.value = value.defaultValue;\r\n    }\r\n\r\n    this.notify();\r\n  }\r\n\r\n  addListener(listener) {\r\n    this.listeners.push(listener);\r\n  }\r\n}\r\n\r\nexport { DataManager };\r\n","!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(t):e.Stats=t()}(this,function(){\"use strict\";var c=function(){var n=0,l=document.createElement(\"div\");function e(e){return l.appendChild(e.dom),e}function t(e){for(var t=0;t<l.children.length;t++)l.children[t].style.display=t===e?\"block\":\"none\";n=e}l.style.cssText=\"position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000\",l.addEventListener(\"click\",function(e){e.preventDefault(),t(++n%l.children.length)},!1);var i=(performance||Date).now(),a=i,o=0,f=e(new c.Panel(\"FPS\",\"#0ff\",\"#002\")),r=e(new c.Panel(\"MS\",\"#0f0\",\"#020\"));if(self.performance&&self.performance.memory)var d=e(new c.Panel(\"MB\",\"#f08\",\"#201\"));return t(0),{REVISION:16,dom:l,addPanel:e,showPanel:t,begin:function(){i=(performance||Date).now()},end:function(){o++;var e=(performance||Date).now();if(r.update(e-i,200),a+1e3<=e&&(f.update(1e3*o/(e-a),100),a=e,o=0,d)){var t=performance.memory;d.update(t.usedJSHeapSize/1048576,t.jsHeapSizeLimit/1048576)}return e},update:function(){i=this.end()},domElement:l,setMode:t}};return c.Panel=function(n,l,i){var a=1/0,o=0,f=Math.round,r=f(window.devicePixelRatio||1),d=80*r,e=48*r,c=3*r,p=2*r,u=3*r,s=15*r,m=74*r,h=30*r,y=document.createElement(\"canvas\");y.width=d,y.height=e,y.style.cssText=\"width:80px;height:48px\";var v=y.getContext(\"2d\");return v.font=\"bold \"+9*r+\"px Helvetica,Arial,sans-serif\",v.textBaseline=\"top\",v.fillStyle=i,v.fillRect(0,0,d,e),v.fillStyle=l,v.fillText(n,c,p),v.fillRect(u,s,m,h),v.fillStyle=i,v.globalAlpha=.9,v.fillRect(u,s,m,h),{dom:y,update:function(e,t){a=Math.min(a,e),o=Math.max(o,e),v.fillStyle=i,v.globalAlpha=1,v.fillRect(0,0,d,s),v.fillStyle=l,v.fillText(f(e)+\" \"+n+\" (\"+f(a)+\"-\"+f(o)+\")\",c,p),v.drawImage(y,u+r,s,m-r,h,u,s,m-r,h),v.fillRect(u+m-r,s,r,h),v.fillStyle=i,v.globalAlpha=.9,v.fillRect(u+m-r,s,r,f((1-e/t)*h))}}},c});\n","/* @license twgl.js 5.5.4 Copyright (c) 2015, Gregg Tavares All Rights Reserved.\nAvailable via the MIT license.\nsee: http://github.com/greggman/twgl.js for details */\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n *\n * Vec3 math math functions.\n *\n * Almost all functions take an optional `dst` argument. If it is not passed in the\n * functions will create a new Vec3. In other words you can do this\n *\n *     var v = v3.cross(v1, v2);  // Creates a new Vec3 with the cross product of v1 x v2.\n *\n * or\n *\n *     var v = v3.create();\n *     v3.cross(v1, v2, v);  // Puts the cross product of v1 x v2 in v\n *\n * The first style is often easier but depending on where it's used it generates garbage where\n * as there is almost never allocation with the second style.\n *\n * It is always save to pass any vector as the destination. So for example\n *\n *     v3.cross(v1, v2, v1);  // Puts the cross product of v1 x v2 in v1\n *\n * @module twgl/v3\n */\n\nlet VecType = Float32Array;\n\n/**\n * A JavaScript array with 3 values or a Float32Array with 3 values.\n * When created by the library will create the default type which is `Float32Array`\n * but can be set by calling {@link module:twgl/v3.setDefaultType}.\n * @typedef {(number[]|Float32Array)} Vec3\n * @memberOf module:twgl/v3\n */\n\n/**\n * Sets the type this library creates for a Vec3\n * @param {constructor} ctor the constructor for the type. Either `Float32Array` or `Array`\n * @return {constructor} previous constructor for Vec3\n * @memberOf module:twgl/v3\n */\nfunction setDefaultType$1(ctor) {\n  const oldType = VecType;\n  VecType = ctor;\n  return oldType;\n}\n\n/**\n * Creates a vec3; may be called with x, y, z to set initial values.\n * @param {number} [x] Initial x value.\n * @param {number} [y] Initial y value.\n * @param {number} [z] Initial z value.\n * @return {module:twgl/v3.Vec3} the created vector\n * @memberOf module:twgl/v3\n */\nfunction create$1(x, y, z) {\n  const dst = new VecType(3);\n  if (x) {\n    dst[0] = x;\n  }\n  if (y) {\n    dst[1] = y;\n  }\n  if (z) {\n    dst[2] = z;\n  }\n  return dst;\n}\n\n/**\n * Adds two vectors; assumes a and b have the same dimension.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created.\n * @return {module:twgl/v3.Vec3} A vector tha tis the sum of a and b.\n * @memberOf module:twgl/v3\n */\nfunction add(a, b, dst) {\n  dst = dst || new VecType(3);\n\n  dst[0] = a[0] + b[0];\n  dst[1] = a[1] + b[1];\n  dst[2] = a[2] + b[2];\n\n  return dst;\n}\n\n/**\n * Subtracts two vectors.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created.\n * @return {module:twgl/v3.Vec3} A vector that is the difference of a and b.\n * @memberOf module:twgl/v3\n */\nfunction subtract(a, b, dst) {\n  dst = dst || new VecType(3);\n\n  dst[0] = a[0] - b[0];\n  dst[1] = a[1] - b[1];\n  dst[2] = a[2] - b[2];\n\n  return dst;\n}\n\n/**\n * Performs linear interpolation on two vectors.\n * Given vectors a and b and interpolation coefficient t, returns\n * a + t * (b - a).\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {number} t Interpolation coefficient.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created.\n * @return {module:twgl/v3.Vec3} The linear interpolated result.\n * @memberOf module:twgl/v3\n */\nfunction lerp(a, b, t, dst) {\n  dst = dst || new VecType(3);\n\n  dst[0] = a[0] + t * (b[0] - a[0]);\n  dst[1] = a[1] + t * (b[1] - a[1]);\n  dst[2] = a[2] + t * (b[2] - a[2]);\n\n  return dst;\n}\n\n/**\n * Performs linear interpolation on two vectors.\n * Given vectors a and b and interpolation coefficient vector t, returns\n * a + t * (b - a).\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} t Interpolation coefficients vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created.\n * @return {module:twgl/v3.Vec3} the linear interpolated result.\n * @memberOf module:twgl/v3\n */\nfunction lerpV(a, b, t, dst) {\n  dst = dst || new VecType(3);\n\n  dst[0] = a[0] + t[0] * (b[0] - a[0]);\n  dst[1] = a[1] + t[1] * (b[1] - a[1]);\n  dst[2] = a[2] + t[2] * (b[2] - a[2]);\n\n  return dst;\n}\n\n/**\n * Return max values of two vectors.\n * Given vectors a and b returns\n * [max(a[0], b[0]), max(a[1], b[1]), max(a[2], b[2])].\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created.\n * @return {module:twgl/v3.Vec3} The max components vector.\n * @memberOf module:twgl/v3\n */\nfunction max(a, b, dst) {\n  dst = dst || new VecType(3);\n\n  dst[0] = Math.max(a[0], b[0]);\n  dst[1] = Math.max(a[1], b[1]);\n  dst[2] = Math.max(a[2], b[2]);\n\n  return dst;\n}\n\n/**\n * Return min values of two vectors.\n * Given vectors a and b returns\n * [min(a[0], b[0]), min(a[1], b[1]), min(a[2], b[2])].\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created.\n * @return {module:twgl/v3.Vec3} The min components vector.\n * @memberOf module:twgl/v3\n */\nfunction min(a, b, dst) {\n  dst = dst || new VecType(3);\n\n  dst[0] = Math.min(a[0], b[0]);\n  dst[1] = Math.min(a[1], b[1]);\n  dst[2] = Math.min(a[2], b[2]);\n\n  return dst;\n}\n\n/**\n * Multiplies a vector by a scalar.\n * @param {module:twgl/v3.Vec3} v The vector.\n * @param {number} k The scalar.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created.\n * @return {module:twgl/v3.Vec3} The scaled vector.\n * @memberOf module:twgl/v3\n */\nfunction mulScalar(v, k, dst) {\n  dst = dst || new VecType(3);\n\n  dst[0] = v[0] * k;\n  dst[1] = v[1] * k;\n  dst[2] = v[2] * k;\n\n  return dst;\n}\n\n/**\n * Divides a vector by a scalar.\n * @param {module:twgl/v3.Vec3} v The vector.\n * @param {number} k The scalar.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created.\n * @return {module:twgl/v3.Vec3} The scaled vector.\n * @memberOf module:twgl/v3\n */\nfunction divScalar(v, k, dst) {\n  dst = dst || new VecType(3);\n\n  dst[0] = v[0] / k;\n  dst[1] = v[1] / k;\n  dst[2] = v[2] / k;\n\n  return dst;\n}\n\n/**\n * Computes the cross product of two vectors; assumes both vectors have\n * three entries.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created.\n * @return {module:twgl/v3.Vec3} The vector of a cross b.\n * @memberOf module:twgl/v3\n */\nfunction cross(a, b, dst) {\n  dst = dst || new VecType(3);\n\n  const t1 = a[2] * b[0] - a[0] * b[2];\n  const t2 = a[0] * b[1] - a[1] * b[0];\n  dst[0] = a[1] * b[2] - a[2] * b[1];\n  dst[1] = t1;\n  dst[2] = t2;\n\n  return dst;\n}\n\n/**\n * Computes the dot product of two vectors; assumes both vectors have\n * three entries.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @return {number} dot product\n * @memberOf module:twgl/v3\n */\nfunction dot(a, b) {\n  return (a[0] * b[0]) + (a[1] * b[1]) + (a[2] * b[2]);\n}\n\n/**\n * Computes the length of vector\n * @param {module:twgl/v3.Vec3} v vector.\n * @return {number} length of vector.\n * @memberOf module:twgl/v3\n */\nfunction length$1(v) {\n  return Math.sqrt(v[0] * v[0] + v[1] * v[1] + v[2] * v[2]);\n}\n\n/**\n * Computes the square of the length of vector\n * @param {module:twgl/v3.Vec3} v vector.\n * @return {number} square of the length of vector.\n * @memberOf module:twgl/v3\n */\nfunction lengthSq(v) {\n  return v[0] * v[0] + v[1] * v[1] + v[2] * v[2];\n}\n\n/**\n * Computes the distance between 2 points\n * @param {module:twgl/v3.Vec3} a vector.\n * @param {module:twgl/v3.Vec3} b vector.\n * @return {number} distance between a and b\n * @memberOf module:twgl/v3\n */\nfunction distance(a, b) {\n  const dx = a[0] - b[0];\n  const dy = a[1] - b[1];\n  const dz = a[2] - b[2];\n  return Math.sqrt(dx * dx + dy * dy + dz * dz);\n}\n\n/**\n * Computes the square of the distance between 2 points\n * @param {module:twgl/v3.Vec3} a vector.\n * @param {module:twgl/v3.Vec3} b vector.\n * @return {number} square of the distance between a and b\n * @memberOf module:twgl/v3\n */\nfunction distanceSq(a, b) {\n  const dx = a[0] - b[0];\n  const dy = a[1] - b[1];\n  const dz = a[2] - b[2];\n  return dx * dx + dy * dy + dz * dz;\n}\n\n/**\n * Divides a vector by its Euclidean length and returns the quotient.\n * @param {module:twgl/v3.Vec3} a The vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created.\n * @return {module:twgl/v3.Vec3} The normalized vector.\n * @memberOf module:twgl/v3\n */\nfunction normalize(a, dst) {\n  dst = dst || new VecType(3);\n\n  const lenSq = a[0] * a[0] + a[1] * a[1] + a[2] * a[2];\n  const len = Math.sqrt(lenSq);\n  if (len > 0.00001) {\n    dst[0] = a[0] / len;\n    dst[1] = a[1] / len;\n    dst[2] = a[2] / len;\n  } else {\n    dst[0] = 0;\n    dst[1] = 0;\n    dst[2] = 0;\n  }\n\n  return dst;\n}\n\n/**\n * Negates a vector.\n * @param {module:twgl/v3.Vec3} v The vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created.\n * @return {module:twgl/v3.Vec3} -v.\n * @memberOf module:twgl/v3\n */\nfunction negate$1(v, dst) {\n  dst = dst || new VecType(3);\n\n  dst[0] = -v[0];\n  dst[1] = -v[1];\n  dst[2] = -v[2];\n\n  return dst;\n}\n\n/**\n * Copies a vector.\n * @param {module:twgl/v3.Vec3} v The vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created.\n * @return {module:twgl/v3.Vec3} A copy of v.\n * @memberOf module:twgl/v3\n */\nfunction copy$1(v, dst) {\n  dst = dst || new VecType(3);\n\n  dst[0] = v[0];\n  dst[1] = v[1];\n  dst[2] = v[2];\n\n  return dst;\n}\n\n/**\n * Multiplies a vector by another vector (component-wise); assumes a and\n * b have the same length.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created.\n * @return {module:twgl/v3.Vec3} The vector of products of entries of a and\n *     b.\n * @memberOf module:twgl/v3\n */\nfunction multiply$1(a, b, dst) {\n  dst = dst || new VecType(3);\n\n  dst[0] = a[0] * b[0];\n  dst[1] = a[1] * b[1];\n  dst[2] = a[2] * b[2];\n\n  return dst;\n}\n\n/**\n * Divides a vector by another vector (component-wise); assumes a and\n * b have the same length.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created.\n * @return {module:twgl/v3.Vec3} The vector of quotients of entries of a and\n *     b.\n * @memberOf module:twgl/v3\n */\nfunction divide(a, b, dst) {\n  dst = dst || new VecType(3);\n\n  dst[0] = a[0] / b[0];\n  dst[1] = a[1] / b[1];\n  dst[2] = a[2] / b[2];\n\n  return dst;\n}\n\nvar v3 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  add: add,\n  copy: copy$1,\n  create: create$1,\n  cross: cross,\n  distance: distance,\n  distanceSq: distanceSq,\n  divide: divide,\n  divScalar: divScalar,\n  dot: dot,\n  lerp: lerp,\n  lerpV: lerpV,\n  length: length$1,\n  lengthSq: lengthSq,\n  max: max,\n  min: min,\n  mulScalar: mulScalar,\n  multiply: multiply$1,\n  negate: negate$1,\n  normalize: normalize,\n  setDefaultType: setDefaultType$1,\n  subtract: subtract\n});\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * 4x4 Matrix math math functions.\n *\n * Almost all functions take an optional `dst` argument. If it is not passed in the\n * functions will create a new matrix. In other words you can do this\n *\n *     const mat = m4.translation([1, 2, 3]);  // Creates a new translation matrix\n *\n * or\n *\n *     const mat = m4.create();\n *     m4.translation([1, 2, 3], mat);  // Puts translation matrix in mat.\n *\n * The first style is often easier but depending on where it's used it generates garbage where\n * as there is almost never allocation with the second style.\n *\n * It is always save to pass any matrix as the destination. So for example\n *\n *     const mat = m4.identity();\n *     const trans = m4.translation([1, 2, 3]);\n *     m4.multiply(mat, trans, mat);  // Multiplies mat * trans and puts result in mat.\n *\n * @module twgl/m4\n */\nlet MatType = Float32Array;\n\n/**\n * A JavaScript array with 16 values or a Float32Array with 16 values.\n * When created by the library will create the default type which is `Float32Array`\n * but can be set by calling {@link module:twgl/m4.setDefaultType}.\n * @typedef {(number[]|Float32Array)} Mat4\n * @memberOf module:twgl/m4\n */\n\n/**\n * Sets the type this library creates for a Mat4\n * @param {constructor} ctor the constructor for the type. Either `Float32Array` or `Array`\n * @return {constructor} previous constructor for Mat4\n * @memberOf module:twgl/m4\n */\nfunction setDefaultType(ctor) {\n  const oldType = MatType;\n  MatType = ctor;\n  return oldType;\n}\n\n/**\n * Negates a matrix.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} -m.\n * @memberOf module:twgl/m4\n */\nfunction negate(m, dst) {\n  dst = dst || new MatType(16);\n\n  dst[ 0] = -m[ 0];\n  dst[ 1] = -m[ 1];\n  dst[ 2] = -m[ 2];\n  dst[ 3] = -m[ 3];\n  dst[ 4] = -m[ 4];\n  dst[ 5] = -m[ 5];\n  dst[ 6] = -m[ 6];\n  dst[ 7] = -m[ 7];\n  dst[ 8] = -m[ 8];\n  dst[ 9] = -m[ 9];\n  dst[10] = -m[10];\n  dst[11] = -m[11];\n  dst[12] = -m[12];\n  dst[13] = -m[13];\n  dst[14] = -m[14];\n  dst[15] = -m[15];\n\n  return dst;\n}\n\n/**\n * Creates a matrix.\n * @return {module:twgl/m4.Mat4} A new matrix.\n * @memberOf module:twgl/m4\n */\nfunction create() {\n  return new MatType(16).fill(0);\n}\n\n/**\n * Copies a matrix.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/m4.Mat4} [dst] The matrix. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} A copy of m.\n * @memberOf module:twgl/m4\n */\nfunction copy(m, dst) {\n  dst = dst || new MatType(16);\n\n  dst[ 0] = m[ 0];\n  dst[ 1] = m[ 1];\n  dst[ 2] = m[ 2];\n  dst[ 3] = m[ 3];\n  dst[ 4] = m[ 4];\n  dst[ 5] = m[ 5];\n  dst[ 6] = m[ 6];\n  dst[ 7] = m[ 7];\n  dst[ 8] = m[ 8];\n  dst[ 9] = m[ 9];\n  dst[10] = m[10];\n  dst[11] = m[11];\n  dst[12] = m[12];\n  dst[13] = m[13];\n  dst[14] = m[14];\n  dst[15] = m[15];\n\n  return dst;\n}\n\n/**\n * Creates an n-by-n identity matrix.\n *\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} An n-by-n identity matrix.\n * @memberOf module:twgl/m4\n */\nfunction identity(dst) {\n  dst = dst || new MatType(16);\n\n  dst[ 0] = 1;\n  dst[ 1] = 0;\n  dst[ 2] = 0;\n  dst[ 3] = 0;\n  dst[ 4] = 0;\n  dst[ 5] = 1;\n  dst[ 6] = 0;\n  dst[ 7] = 0;\n  dst[ 8] = 0;\n  dst[ 9] = 0;\n  dst[10] = 1;\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n\n  return dst;\n}\n\n/**\n * Takes the transpose of a matrix.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The transpose of m.\n * @memberOf module:twgl/m4\n */\n function transpose(m, dst) {\n  dst = dst || new MatType(16);\n  if (dst === m) {\n    let t;\n\n    t = m[1];\n    m[1] = m[4];\n    m[4] = t;\n\n    t = m[2];\n    m[2] = m[8];\n    m[8] = t;\n\n    t = m[3];\n    m[3] = m[12];\n    m[12] = t;\n\n    t = m[6];\n    m[6] = m[9];\n    m[9] = t;\n\n    t = m[7];\n    m[7] = m[13];\n    m[13] = t;\n\n    t = m[11];\n    m[11] = m[14];\n    m[14] = t;\n    return dst;\n  }\n\n  const m00 = m[0 * 4 + 0];\n  const m01 = m[0 * 4 + 1];\n  const m02 = m[0 * 4 + 2];\n  const m03 = m[0 * 4 + 3];\n  const m10 = m[1 * 4 + 0];\n  const m11 = m[1 * 4 + 1];\n  const m12 = m[1 * 4 + 2];\n  const m13 = m[1 * 4 + 3];\n  const m20 = m[2 * 4 + 0];\n  const m21 = m[2 * 4 + 1];\n  const m22 = m[2 * 4 + 2];\n  const m23 = m[2 * 4 + 3];\n  const m30 = m[3 * 4 + 0];\n  const m31 = m[3 * 4 + 1];\n  const m32 = m[3 * 4 + 2];\n  const m33 = m[3 * 4 + 3];\n\n  dst[ 0] = m00;\n  dst[ 1] = m10;\n  dst[ 2] = m20;\n  dst[ 3] = m30;\n  dst[ 4] = m01;\n  dst[ 5] = m11;\n  dst[ 6] = m21;\n  dst[ 7] = m31;\n  dst[ 8] = m02;\n  dst[ 9] = m12;\n  dst[10] = m22;\n  dst[11] = m32;\n  dst[12] = m03;\n  dst[13] = m13;\n  dst[14] = m23;\n  dst[15] = m33;\n\n  return dst;\n}\n\n/**\n * Computes the inverse of a 4-by-4 matrix.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The inverse of m.\n * @memberOf module:twgl/m4\n */\nfunction inverse(m, dst) {\n  dst = dst || new MatType(16);\n\n  const m00 = m[0 * 4 + 0];\n  const m01 = m[0 * 4 + 1];\n  const m02 = m[0 * 4 + 2];\n  const m03 = m[0 * 4 + 3];\n  const m10 = m[1 * 4 + 0];\n  const m11 = m[1 * 4 + 1];\n  const m12 = m[1 * 4 + 2];\n  const m13 = m[1 * 4 + 3];\n  const m20 = m[2 * 4 + 0];\n  const m21 = m[2 * 4 + 1];\n  const m22 = m[2 * 4 + 2];\n  const m23 = m[2 * 4 + 3];\n  const m30 = m[3 * 4 + 0];\n  const m31 = m[3 * 4 + 1];\n  const m32 = m[3 * 4 + 2];\n  const m33 = m[3 * 4 + 3];\n  const tmp_0  = m22 * m33;\n  const tmp_1  = m32 * m23;\n  const tmp_2  = m12 * m33;\n  const tmp_3  = m32 * m13;\n  const tmp_4  = m12 * m23;\n  const tmp_5  = m22 * m13;\n  const tmp_6  = m02 * m33;\n  const tmp_7  = m32 * m03;\n  const tmp_8  = m02 * m23;\n  const tmp_9  = m22 * m03;\n  const tmp_10 = m02 * m13;\n  const tmp_11 = m12 * m03;\n  const tmp_12 = m20 * m31;\n  const tmp_13 = m30 * m21;\n  const tmp_14 = m10 * m31;\n  const tmp_15 = m30 * m11;\n  const tmp_16 = m10 * m21;\n  const tmp_17 = m20 * m11;\n  const tmp_18 = m00 * m31;\n  const tmp_19 = m30 * m01;\n  const tmp_20 = m00 * m21;\n  const tmp_21 = m20 * m01;\n  const tmp_22 = m00 * m11;\n  const tmp_23 = m10 * m01;\n\n  const t0 = (tmp_0 * m11 + tmp_3 * m21 + tmp_4 * m31) -\n      (tmp_1 * m11 + tmp_2 * m21 + tmp_5 * m31);\n  const t1 = (tmp_1 * m01 + tmp_6 * m21 + tmp_9 * m31) -\n      (tmp_0 * m01 + tmp_7 * m21 + tmp_8 * m31);\n  const t2 = (tmp_2 * m01 + tmp_7 * m11 + tmp_10 * m31) -\n      (tmp_3 * m01 + tmp_6 * m11 + tmp_11 * m31);\n  const t3 = (tmp_5 * m01 + tmp_8 * m11 + tmp_11 * m21) -\n      (tmp_4 * m01 + tmp_9 * m11 + tmp_10 * m21);\n\n  const d = 1.0 / (m00 * t0 + m10 * t1 + m20 * t2 + m30 * t3);\n\n  dst[ 0] = d * t0;\n  dst[ 1] = d * t1;\n  dst[ 2] = d * t2;\n  dst[ 3] = d * t3;\n  dst[ 4] = d * ((tmp_1 * m10 + tmp_2 * m20 + tmp_5 * m30) -\n          (tmp_0 * m10 + tmp_3 * m20 + tmp_4 * m30));\n  dst[ 5] = d * ((tmp_0 * m00 + tmp_7 * m20 + tmp_8 * m30) -\n          (tmp_1 * m00 + tmp_6 * m20 + tmp_9 * m30));\n  dst[ 6] = d * ((tmp_3 * m00 + tmp_6 * m10 + tmp_11 * m30) -\n          (tmp_2 * m00 + tmp_7 * m10 + tmp_10 * m30));\n  dst[ 7] = d * ((tmp_4 * m00 + tmp_9 * m10 + tmp_10 * m20) -\n          (tmp_5 * m00 + tmp_8 * m10 + tmp_11 * m20));\n  dst[ 8] = d * ((tmp_12 * m13 + tmp_15 * m23 + tmp_16 * m33) -\n          (tmp_13 * m13 + tmp_14 * m23 + tmp_17 * m33));\n  dst[ 9] = d * ((tmp_13 * m03 + tmp_18 * m23 + tmp_21 * m33) -\n          (tmp_12 * m03 + tmp_19 * m23 + tmp_20 * m33));\n  dst[10] = d * ((tmp_14 * m03 + tmp_19 * m13 + tmp_22 * m33) -\n          (tmp_15 * m03 + tmp_18 * m13 + tmp_23 * m33));\n  dst[11] = d * ((tmp_17 * m03 + tmp_20 * m13 + tmp_23 * m23) -\n          (tmp_16 * m03 + tmp_21 * m13 + tmp_22 * m23));\n  dst[12] = d * ((tmp_14 * m22 + tmp_17 * m32 + tmp_13 * m12) -\n          (tmp_16 * m32 + tmp_12 * m12 + tmp_15 * m22));\n  dst[13] = d * ((tmp_20 * m32 + tmp_12 * m02 + tmp_19 * m22) -\n          (tmp_18 * m22 + tmp_21 * m32 + tmp_13 * m02));\n  dst[14] = d * ((tmp_18 * m12 + tmp_23 * m32 + tmp_15 * m02) -\n          (tmp_22 * m32 + tmp_14 * m02 + tmp_19 * m12));\n  dst[15] = d * ((tmp_22 * m22 + tmp_16 * m02 + tmp_21 * m12) -\n          (tmp_20 * m12 + tmp_23 * m22 + tmp_17 * m02));\n\n  return dst;\n}\n\n/**\n * Multiplies two 4-by-4 matrices with a on the left and b on the right\n * @param {module:twgl/m4.Mat4} a The matrix on the left.\n * @param {module:twgl/m4.Mat4} b The matrix on the right.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The matrix product of a and b.\n * @memberOf module:twgl/m4\n */\nfunction multiply(a, b, dst) {\n  dst = dst || new MatType(16);\n\n  const a00 = a[0];\n  const a01 = a[1];\n  const a02 = a[2];\n  const a03 = a[3];\n  const a10 = a[ 4 + 0];\n  const a11 = a[ 4 + 1];\n  const a12 = a[ 4 + 2];\n  const a13 = a[ 4 + 3];\n  const a20 = a[ 8 + 0];\n  const a21 = a[ 8 + 1];\n  const a22 = a[ 8 + 2];\n  const a23 = a[ 8 + 3];\n  const a30 = a[12 + 0];\n  const a31 = a[12 + 1];\n  const a32 = a[12 + 2];\n  const a33 = a[12 + 3];\n  const b00 = b[0];\n  const b01 = b[1];\n  const b02 = b[2];\n  const b03 = b[3];\n  const b10 = b[ 4 + 0];\n  const b11 = b[ 4 + 1];\n  const b12 = b[ 4 + 2];\n  const b13 = b[ 4 + 3];\n  const b20 = b[ 8 + 0];\n  const b21 = b[ 8 + 1];\n  const b22 = b[ 8 + 2];\n  const b23 = b[ 8 + 3];\n  const b30 = b[12 + 0];\n  const b31 = b[12 + 1];\n  const b32 = b[12 + 2];\n  const b33 = b[12 + 3];\n\n  dst[ 0] = a00 * b00 + a10 * b01 + a20 * b02 + a30 * b03;\n  dst[ 1] = a01 * b00 + a11 * b01 + a21 * b02 + a31 * b03;\n  dst[ 2] = a02 * b00 + a12 * b01 + a22 * b02 + a32 * b03;\n  dst[ 3] = a03 * b00 + a13 * b01 + a23 * b02 + a33 * b03;\n  dst[ 4] = a00 * b10 + a10 * b11 + a20 * b12 + a30 * b13;\n  dst[ 5] = a01 * b10 + a11 * b11 + a21 * b12 + a31 * b13;\n  dst[ 6] = a02 * b10 + a12 * b11 + a22 * b12 + a32 * b13;\n  dst[ 7] = a03 * b10 + a13 * b11 + a23 * b12 + a33 * b13;\n  dst[ 8] = a00 * b20 + a10 * b21 + a20 * b22 + a30 * b23;\n  dst[ 9] = a01 * b20 + a11 * b21 + a21 * b22 + a31 * b23;\n  dst[10] = a02 * b20 + a12 * b21 + a22 * b22 + a32 * b23;\n  dst[11] = a03 * b20 + a13 * b21 + a23 * b22 + a33 * b23;\n  dst[12] = a00 * b30 + a10 * b31 + a20 * b32 + a30 * b33;\n  dst[13] = a01 * b30 + a11 * b31 + a21 * b32 + a31 * b33;\n  dst[14] = a02 * b30 + a12 * b31 + a22 * b32 + a32 * b33;\n  dst[15] = a03 * b30 + a13 * b31 + a23 * b32 + a33 * b33;\n\n  return dst;\n}\n\n/**\n * Sets the translation component of a 4-by-4 matrix to the given\n * vector.\n * @param {module:twgl/m4.Mat4} a The matrix.\n * @param {module:twgl/v3.Vec3} v The vector.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The matrix with translation set.\n * @memberOf module:twgl/m4\n */\nfunction setTranslation(a, v, dst) {\n  dst = dst || identity();\n  if (a !== dst) {\n    dst[ 0] = a[ 0];\n    dst[ 1] = a[ 1];\n    dst[ 2] = a[ 2];\n    dst[ 3] = a[ 3];\n    dst[ 4] = a[ 4];\n    dst[ 5] = a[ 5];\n    dst[ 6] = a[ 6];\n    dst[ 7] = a[ 7];\n    dst[ 8] = a[ 8];\n    dst[ 9] = a[ 9];\n    dst[10] = a[10];\n    dst[11] = a[11];\n  }\n  dst[12] = v[0];\n  dst[13] = v[1];\n  dst[14] = v[2];\n  dst[15] = 1;\n  return dst;\n}\n\n/**\n * Returns the translation component of a 4-by-4 matrix as a vector with 3\n * entries.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not passed a new one is created.\n * @return {module:twgl/v3.Vec3} The translation component of m.\n * @memberOf module:twgl/m4\n */\nfunction getTranslation(m, dst) {\n  dst = dst || create$1();\n  dst[0] = m[12];\n  dst[1] = m[13];\n  dst[2] = m[14];\n  return dst;\n}\n\n/**\n * Returns an axis of a 4x4 matrix as a vector with 3 entries\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {number} axis The axis 0 = x, 1 = y, 2 = z;\n * @return {module:twgl/v3.Vec3} [dst] vector.\n * @return {module:twgl/v3.Vec3} The axis component of m.\n * @memberOf module:twgl/m4\n */\nfunction getAxis(m, axis, dst) {\n  dst = dst || create$1();\n  const off = axis * 4;\n  dst[0] = m[off + 0];\n  dst[1] = m[off + 1];\n  dst[2] = m[off + 2];\n  return dst;\n}\n\n/**\n * Sets an axis of a 4x4 matrix as a vector with 3 entries\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/v3.Vec3} v the axis vector\n * @param {number} axis The axis  0 = x, 1 = y, 2 = z;\n * @param {module:twgl/m4.Mat4} [dst] The matrix to set. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The matrix with axis set.\n * @memberOf module:twgl/m4\n */\nfunction setAxis(a, v, axis, dst) {\n  if (dst !== a) {\n    dst = copy(a, dst);\n  }\n  const off = axis * 4;\n  dst[off + 0] = v[0];\n  dst[off + 1] = v[1];\n  dst[off + 2] = v[2];\n  return dst;\n}\n\n/**\n * Computes a 4-by-4 perspective transformation matrix given the angular height\n * of the frustum, the aspect ratio, and the near and far clipping planes.  The\n * arguments define a frustum extending in the negative z direction.  The given\n * angle is the vertical angle of the frustum, and the horizontal angle is\n * determined to produce the given aspect ratio.  The arguments near and far are\n * the distances to the near and far clipping planes.  Note that near and far\n * are not z coordinates, but rather they are distances along the negative\n * z-axis.  The matrix generated sends the viewing frustum to the unit box.\n * We assume a unit box extending from -1 to 1 in the x and y dimensions and\n * from 0 to 1 in the z dimension.\n * @param {number} fieldOfViewYInRadians The camera angle from top to bottom (in radians).\n * @param {number} aspect The aspect ratio width / height.\n * @param {number} zNear The depth (negative z coordinate)\n *     of the near clipping plane.\n * @param {number} zFar The depth (negative z coordinate)\n *     of the far clipping plane.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The perspective matrix.\n * @memberOf module:twgl/m4\n */\nfunction perspective(fieldOfViewYInRadians, aspect, zNear, zFar, dst) {\n  dst = dst || new MatType(16);\n\n  const f = Math.tan(Math.PI * 0.5 - 0.5 * fieldOfViewYInRadians);\n  const rangeInv = 1.0 / (zNear - zFar);\n\n  dst[0]  = f / aspect;\n  dst[1]  = 0;\n  dst[2]  = 0;\n  dst[3]  = 0;\n\n  dst[4]  = 0;\n  dst[5]  = f;\n  dst[6]  = 0;\n  dst[7]  = 0;\n\n  dst[8]  = 0;\n  dst[9]  = 0;\n  dst[10] = (zNear + zFar) * rangeInv;\n  dst[11] = -1;\n\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = zNear * zFar * rangeInv * 2;\n  dst[15] = 0;\n\n  return dst;\n}\n\n/**\n * Computes a 4-by-4 orthogonal transformation matrix given the left, right,\n * bottom, and top dimensions of the near clipping plane as well as the\n * near and far clipping plane distances.\n * @param {number} left Left side of the near clipping plane viewport.\n * @param {number} right Right side of the near clipping plane viewport.\n * @param {number} bottom Bottom of the near clipping plane viewport.\n * @param {number} top Top of the near clipping plane viewport.\n * @param {number} near The depth (negative z coordinate)\n *     of the near clipping plane.\n * @param {number} far The depth (negative z coordinate)\n *     of the far clipping plane.\n * @param {module:twgl/m4.Mat4} [dst] Output matrix. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The perspective matrix.\n * @memberOf module:twgl/m4\n */\nfunction ortho(left, right, bottom, top, near, far, dst) {\n  dst = dst || new MatType(16);\n\n  dst[0]  = 2 / (right - left);\n  dst[1]  = 0;\n  dst[2]  = 0;\n  dst[3]  = 0;\n\n  dst[4]  = 0;\n  dst[5]  = 2 / (top - bottom);\n  dst[6]  = 0;\n  dst[7]  = 0;\n\n  dst[8]  = 0;\n  dst[9]  = 0;\n  dst[10] = 2 / (near - far);\n  dst[11] = 0;\n\n  dst[12] = (right + left) / (left - right);\n  dst[13] = (top + bottom) / (bottom - top);\n  dst[14] = (far + near) / (near - far);\n  dst[15] = 1;\n\n  return dst;\n}\n\n/**\n * Computes a 4-by-4 perspective transformation matrix given the left, right,\n * top, bottom, near and far clipping planes. The arguments define a frustum\n * extending in the negative z direction. The arguments near and far are the\n * distances to the near and far clipping planes. Note that near and far are not\n * z coordinates, but rather they are distances along the negative z-axis. The\n * matrix generated sends the viewing frustum to the unit box. We assume a unit\n * box extending from -1 to 1 in the x and y dimensions and from 0 to 1 in the z\n * dimension.\n * @param {number} left The x coordinate of the left plane of the box.\n * @param {number} right The x coordinate of the right plane of the box.\n * @param {number} bottom The y coordinate of the bottom plane of the box.\n * @param {number} top The y coordinate of the right plane of the box.\n * @param {number} near The negative z coordinate of the near plane of the box.\n * @param {number} far The negative z coordinate of the far plane of the box.\n * @param {module:twgl/m4.Mat4} [dst] Output matrix. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The perspective projection matrix.\n * @memberOf module:twgl/m4\n */\nfunction frustum(left, right, bottom, top, near, far, dst) {\n  dst = dst || new MatType(16);\n\n  const dx = (right - left);\n  const dy = (top - bottom);\n  const dz = (near - far);\n\n  dst[ 0] = 2 * near / dx;\n  dst[ 1] = 0;\n  dst[ 2] = 0;\n  dst[ 3] = 0;\n  dst[ 4] = 0;\n  dst[ 5] = 2 * near / dy;\n  dst[ 6] = 0;\n  dst[ 7] = 0;\n  dst[ 8] = (left + right) / dx;\n  dst[ 9] = (top + bottom) / dy;\n  dst[10] = far / dz;\n  dst[11] = -1;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = near * far / dz;\n  dst[15] = 0;\n\n  return dst;\n}\n\nlet xAxis;\nlet yAxis;\nlet zAxis;\n\n/**\n * Computes a 4-by-4 look-at transformation.\n *\n * This is a matrix which positions the camera itself. If you want\n * a view matrix (a matrix which moves things in front of the camera)\n * take the inverse of this.\n *\n * @param {module:twgl/v3.Vec3} eye The position of the eye.\n * @param {module:twgl/v3.Vec3} target The position meant to be viewed.\n * @param {module:twgl/v3.Vec3} up A vector pointing up.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The look-at matrix.\n * @memberOf module:twgl/m4\n */\nfunction lookAt(eye, target, up, dst) {\n  dst = dst || new MatType(16);\n\n  xAxis = xAxis || create$1();\n  yAxis = yAxis || create$1();\n  zAxis = zAxis || create$1();\n\n  normalize(\n      subtract(eye, target, zAxis), zAxis);\n  normalize(cross(up, zAxis, xAxis), xAxis);\n  normalize(cross(zAxis, xAxis, yAxis), yAxis);\n\n  dst[ 0] = xAxis[0];\n  dst[ 1] = xAxis[1];\n  dst[ 2] = xAxis[2];\n  dst[ 3] = 0;\n  dst[ 4] = yAxis[0];\n  dst[ 5] = yAxis[1];\n  dst[ 6] = yAxis[2];\n  dst[ 7] = 0;\n  dst[ 8] = zAxis[0];\n  dst[ 9] = zAxis[1];\n  dst[10] = zAxis[2];\n  dst[11] = 0;\n  dst[12] = eye[0];\n  dst[13] = eye[1];\n  dst[14] = eye[2];\n  dst[15] = 1;\n\n  return dst;\n}\n\n/**\n * Creates a 4-by-4 matrix which translates by the given vector v.\n * @param {module:twgl/v3.Vec3} v The vector by\n *     which to translate.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The translation matrix.\n * @memberOf module:twgl/m4\n */\nfunction translation(v, dst) {\n  dst = dst || new MatType(16);\n\n  dst[ 0] = 1;\n  dst[ 1] = 0;\n  dst[ 2] = 0;\n  dst[ 3] = 0;\n  dst[ 4] = 0;\n  dst[ 5] = 1;\n  dst[ 6] = 0;\n  dst[ 7] = 0;\n  dst[ 8] = 0;\n  dst[ 9] = 0;\n  dst[10] = 1;\n  dst[11] = 0;\n  dst[12] = v[0];\n  dst[13] = v[1];\n  dst[14] = v[2];\n  dst[15] = 1;\n  return dst;\n}\n\n/**\n * Translates the given 4-by-4 matrix by the given vector v.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/v3.Vec3} v The vector by\n *     which to translate.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The translated matrix.\n * @memberOf module:twgl/m4\n */\nfunction translate(m, v, dst) {\n  dst = dst || new MatType(16);\n\n  const v0 = v[0];\n  const v1 = v[1];\n  const v2 = v[2];\n  const m00 = m[0];\n  const m01 = m[1];\n  const m02 = m[2];\n  const m03 = m[3];\n  const m10 = m[1 * 4 + 0];\n  const m11 = m[1 * 4 + 1];\n  const m12 = m[1 * 4 + 2];\n  const m13 = m[1 * 4 + 3];\n  const m20 = m[2 * 4 + 0];\n  const m21 = m[2 * 4 + 1];\n  const m22 = m[2 * 4 + 2];\n  const m23 = m[2 * 4 + 3];\n  const m30 = m[3 * 4 + 0];\n  const m31 = m[3 * 4 + 1];\n  const m32 = m[3 * 4 + 2];\n  const m33 = m[3 * 4 + 3];\n\n  if (m !== dst) {\n    dst[ 0] = m00;\n    dst[ 1] = m01;\n    dst[ 2] = m02;\n    dst[ 3] = m03;\n    dst[ 4] = m10;\n    dst[ 5] = m11;\n    dst[ 6] = m12;\n    dst[ 7] = m13;\n    dst[ 8] = m20;\n    dst[ 9] = m21;\n    dst[10] = m22;\n    dst[11] = m23;\n  }\n\n  dst[12] = m00 * v0 + m10 * v1 + m20 * v2 + m30;\n  dst[13] = m01 * v0 + m11 * v1 + m21 * v2 + m31;\n  dst[14] = m02 * v0 + m12 * v1 + m22 * v2 + m32;\n  dst[15] = m03 * v0 + m13 * v1 + m23 * v2 + m33;\n\n  return dst;\n}\n\n/**\n * Creates a 4-by-4 matrix which rotates around the x-axis by the given angle.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The rotation matrix.\n * @memberOf module:twgl/m4\n */\nfunction rotationX(angleInRadians, dst) {\n  dst = dst || new MatType(16);\n\n  const c = Math.cos(angleInRadians);\n  const s = Math.sin(angleInRadians);\n\n  dst[ 0] = 1;\n  dst[ 1] = 0;\n  dst[ 2] = 0;\n  dst[ 3] = 0;\n  dst[ 4] = 0;\n  dst[ 5] = c;\n  dst[ 6] = s;\n  dst[ 7] = 0;\n  dst[ 8] = 0;\n  dst[ 9] = -s;\n  dst[10] = c;\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n\n  return dst;\n}\n\n/**\n * Rotates the given 4-by-4 matrix around the x-axis by the given\n * angle.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The rotated matrix.\n * @memberOf module:twgl/m4\n */\nfunction rotateX(m, angleInRadians, dst) {\n  dst = dst || new MatType(16);\n\n  const m10 = m[4];\n  const m11 = m[5];\n  const m12 = m[6];\n  const m13 = m[7];\n  const m20 = m[8];\n  const m21 = m[9];\n  const m22 = m[10];\n  const m23 = m[11];\n  const c = Math.cos(angleInRadians);\n  const s = Math.sin(angleInRadians);\n\n  dst[4]  = c * m10 + s * m20;\n  dst[5]  = c * m11 + s * m21;\n  dst[6]  = c * m12 + s * m22;\n  dst[7]  = c * m13 + s * m23;\n  dst[8]  = c * m20 - s * m10;\n  dst[9]  = c * m21 - s * m11;\n  dst[10] = c * m22 - s * m12;\n  dst[11] = c * m23 - s * m13;\n\n  if (m !== dst) {\n    dst[ 0] = m[ 0];\n    dst[ 1] = m[ 1];\n    dst[ 2] = m[ 2];\n    dst[ 3] = m[ 3];\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n  }\n\n  return dst;\n}\n\n/**\n * Creates a 4-by-4 matrix which rotates around the y-axis by the given angle.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The rotation matrix.\n * @memberOf module:twgl/m4\n */\nfunction rotationY(angleInRadians, dst) {\n  dst = dst || new MatType(16);\n\n  const c = Math.cos(angleInRadians);\n  const s = Math.sin(angleInRadians);\n\n  dst[ 0] = c;\n  dst[ 1] = 0;\n  dst[ 2] = -s;\n  dst[ 3] = 0;\n  dst[ 4] = 0;\n  dst[ 5] = 1;\n  dst[ 6] = 0;\n  dst[ 7] = 0;\n  dst[ 8] = s;\n  dst[ 9] = 0;\n  dst[10] = c;\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n\n  return dst;\n}\n\n/**\n * Rotates the given 4-by-4 matrix around the y-axis by the given\n * angle.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The rotated matrix.\n * @memberOf module:twgl/m4\n */\nfunction rotateY(m, angleInRadians, dst) {\n  dst = dst || new MatType(16);\n\n  const m00 = m[0 * 4 + 0];\n  const m01 = m[0 * 4 + 1];\n  const m02 = m[0 * 4 + 2];\n  const m03 = m[0 * 4 + 3];\n  const m20 = m[2 * 4 + 0];\n  const m21 = m[2 * 4 + 1];\n  const m22 = m[2 * 4 + 2];\n  const m23 = m[2 * 4 + 3];\n  const c = Math.cos(angleInRadians);\n  const s = Math.sin(angleInRadians);\n\n  dst[ 0] = c * m00 - s * m20;\n  dst[ 1] = c * m01 - s * m21;\n  dst[ 2] = c * m02 - s * m22;\n  dst[ 3] = c * m03 - s * m23;\n  dst[ 8] = c * m20 + s * m00;\n  dst[ 9] = c * m21 + s * m01;\n  dst[10] = c * m22 + s * m02;\n  dst[11] = c * m23 + s * m03;\n\n  if (m !== dst) {\n    dst[ 4] = m[ 4];\n    dst[ 5] = m[ 5];\n    dst[ 6] = m[ 6];\n    dst[ 7] = m[ 7];\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n  }\n\n  return dst;\n}\n\n/**\n * Creates a 4-by-4 matrix which rotates around the z-axis by the given angle.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The rotation matrix.\n * @memberOf module:twgl/m4\n */\nfunction rotationZ(angleInRadians, dst) {\n  dst = dst || new MatType(16);\n\n  const c = Math.cos(angleInRadians);\n  const s = Math.sin(angleInRadians);\n\n  dst[ 0] = c;\n  dst[ 1] = s;\n  dst[ 2] = 0;\n  dst[ 3] = 0;\n  dst[ 4] = -s;\n  dst[ 5] = c;\n  dst[ 6] = 0;\n  dst[ 7] = 0;\n  dst[ 8] = 0;\n  dst[ 9] = 0;\n  dst[10] = 1;\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n\n  return dst;\n}\n\n/**\n * Rotates the given 4-by-4 matrix around the z-axis by the given\n * angle.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The rotated matrix.\n * @memberOf module:twgl/m4\n */\nfunction rotateZ(m, angleInRadians, dst) {\n  dst = dst || new MatType(16);\n\n  const m00 = m[0 * 4 + 0];\n  const m01 = m[0 * 4 + 1];\n  const m02 = m[0 * 4 + 2];\n  const m03 = m[0 * 4 + 3];\n  const m10 = m[1 * 4 + 0];\n  const m11 = m[1 * 4 + 1];\n  const m12 = m[1 * 4 + 2];\n  const m13 = m[1 * 4 + 3];\n  const c = Math.cos(angleInRadians);\n  const s = Math.sin(angleInRadians);\n\n  dst[ 0] = c * m00 + s * m10;\n  dst[ 1] = c * m01 + s * m11;\n  dst[ 2] = c * m02 + s * m12;\n  dst[ 3] = c * m03 + s * m13;\n  dst[ 4] = c * m10 - s * m00;\n  dst[ 5] = c * m11 - s * m01;\n  dst[ 6] = c * m12 - s * m02;\n  dst[ 7] = c * m13 - s * m03;\n\n  if (m !== dst) {\n    dst[ 8] = m[ 8];\n    dst[ 9] = m[ 9];\n    dst[10] = m[10];\n    dst[11] = m[11];\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n  }\n\n  return dst;\n}\n\n/**\n * Creates a 4-by-4 matrix which rotates around the given axis by the given\n * angle.\n * @param {module:twgl/v3.Vec3} axis The axis\n *     about which to rotate.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} A matrix which rotates angle radians\n *     around the axis.\n * @memberOf module:twgl/m4\n */\nfunction axisRotation(axis, angleInRadians, dst) {\n  dst = dst || new MatType(16);\n\n  let x = axis[0];\n  let y = axis[1];\n  let z = axis[2];\n  const n = Math.sqrt(x * x + y * y + z * z);\n  x /= n;\n  y /= n;\n  z /= n;\n  const xx = x * x;\n  const yy = y * y;\n  const zz = z * z;\n  const c = Math.cos(angleInRadians);\n  const s = Math.sin(angleInRadians);\n  const oneMinusCosine = 1 - c;\n\n  dst[ 0] = xx + (1 - xx) * c;\n  dst[ 1] = x * y * oneMinusCosine + z * s;\n  dst[ 2] = x * z * oneMinusCosine - y * s;\n  dst[ 3] = 0;\n  dst[ 4] = x * y * oneMinusCosine - z * s;\n  dst[ 5] = yy + (1 - yy) * c;\n  dst[ 6] = y * z * oneMinusCosine + x * s;\n  dst[ 7] = 0;\n  dst[ 8] = x * z * oneMinusCosine + y * s;\n  dst[ 9] = y * z * oneMinusCosine - x * s;\n  dst[10] = zz + (1 - zz) * c;\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n\n  return dst;\n}\n\n/**\n * Rotates the given 4-by-4 matrix around the given axis by the\n * given angle.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/v3.Vec3} axis The axis\n *     about which to rotate.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The rotated matrix.\n * @memberOf module:twgl/m4\n */\nfunction axisRotate(m, axis, angleInRadians, dst) {\n  dst = dst || new MatType(16);\n\n  let x = axis[0];\n  let y = axis[1];\n  let z = axis[2];\n  const n = Math.sqrt(x * x + y * y + z * z);\n  x /= n;\n  y /= n;\n  z /= n;\n  const xx = x * x;\n  const yy = y * y;\n  const zz = z * z;\n  const c = Math.cos(angleInRadians);\n  const s = Math.sin(angleInRadians);\n  const oneMinusCosine = 1 - c;\n\n  const r00 = xx + (1 - xx) * c;\n  const r01 = x * y * oneMinusCosine + z * s;\n  const r02 = x * z * oneMinusCosine - y * s;\n  const r10 = x * y * oneMinusCosine - z * s;\n  const r11 = yy + (1 - yy) * c;\n  const r12 = y * z * oneMinusCosine + x * s;\n  const r20 = x * z * oneMinusCosine + y * s;\n  const r21 = y * z * oneMinusCosine - x * s;\n  const r22 = zz + (1 - zz) * c;\n\n  const m00 = m[0];\n  const m01 = m[1];\n  const m02 = m[2];\n  const m03 = m[3];\n  const m10 = m[4];\n  const m11 = m[5];\n  const m12 = m[6];\n  const m13 = m[7];\n  const m20 = m[8];\n  const m21 = m[9];\n  const m22 = m[10];\n  const m23 = m[11];\n\n  dst[ 0] = r00 * m00 + r01 * m10 + r02 * m20;\n  dst[ 1] = r00 * m01 + r01 * m11 + r02 * m21;\n  dst[ 2] = r00 * m02 + r01 * m12 + r02 * m22;\n  dst[ 3] = r00 * m03 + r01 * m13 + r02 * m23;\n  dst[ 4] = r10 * m00 + r11 * m10 + r12 * m20;\n  dst[ 5] = r10 * m01 + r11 * m11 + r12 * m21;\n  dst[ 6] = r10 * m02 + r11 * m12 + r12 * m22;\n  dst[ 7] = r10 * m03 + r11 * m13 + r12 * m23;\n  dst[ 8] = r20 * m00 + r21 * m10 + r22 * m20;\n  dst[ 9] = r20 * m01 + r21 * m11 + r22 * m21;\n  dst[10] = r20 * m02 + r21 * m12 + r22 * m22;\n  dst[11] = r20 * m03 + r21 * m13 + r22 * m23;\n\n  if (m !== dst) {\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n  }\n\n  return dst;\n}\n\n/**\n * Creates a 4-by-4 matrix which scales in each dimension by an amount given by\n * the corresponding entry in the given vector; assumes the vector has three\n * entries.\n * @param {module:twgl/v3.Vec3} v A vector of\n *     three entries specifying the factor by which to scale in each dimension.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The scaling matrix.\n * @memberOf module:twgl/m4\n */\nfunction scaling(v, dst) {\n  dst = dst || new MatType(16);\n\n  dst[ 0] = v[0];\n  dst[ 1] = 0;\n  dst[ 2] = 0;\n  dst[ 3] = 0;\n  dst[ 4] = 0;\n  dst[ 5] = v[1];\n  dst[ 6] = 0;\n  dst[ 7] = 0;\n  dst[ 8] = 0;\n  dst[ 9] = 0;\n  dst[10] = v[2];\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n\n  return dst;\n}\n\n/**\n * Scales the given 4-by-4 matrix in each dimension by an amount\n * given by the corresponding entry in the given vector; assumes the vector has\n * three entries.\n * @param {module:twgl/m4.Mat4} m The matrix to be modified.\n * @param {module:twgl/v3.Vec3} v A vector of three entries specifying the\n *     factor by which to scale in each dimension.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The scaled matrix.\n * @memberOf module:twgl/m4\n */\nfunction scale(m, v, dst) {\n  dst = dst || new MatType(16);\n\n  const v0 = v[0];\n  const v1 = v[1];\n  const v2 = v[2];\n\n  dst[ 0] = v0 * m[0 * 4 + 0];\n  dst[ 1] = v0 * m[0 * 4 + 1];\n  dst[ 2] = v0 * m[0 * 4 + 2];\n  dst[ 3] = v0 * m[0 * 4 + 3];\n  dst[ 4] = v1 * m[1 * 4 + 0];\n  dst[ 5] = v1 * m[1 * 4 + 1];\n  dst[ 6] = v1 * m[1 * 4 + 2];\n  dst[ 7] = v1 * m[1 * 4 + 3];\n  dst[ 8] = v2 * m[2 * 4 + 0];\n  dst[ 9] = v2 * m[2 * 4 + 1];\n  dst[10] = v2 * m[2 * 4 + 2];\n  dst[11] = v2 * m[2 * 4 + 3];\n\n  if (m !== dst) {\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n  }\n\n  return dst;\n}\n\n/**\n * Takes a 4-by-4 matrix and a vector with 3 entries,\n * interprets the vector as a point, transforms that point by the matrix, and\n * returns the result as a vector with 3 entries.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/v3.Vec3} v The point.\n * @param {module:twgl/v3.Vec3} [dst] optional vec3 to store result. If not passed a new one is created.\n * @return {module:twgl/v3.Vec3} The transformed point.\n * @memberOf module:twgl/m4\n */\nfunction transformPoint(m, v, dst) {\n  dst = dst || create$1();\n  const v0 = v[0];\n  const v1 = v[1];\n  const v2 = v[2];\n  const d = v0 * m[0 * 4 + 3] + v1 * m[1 * 4 + 3] + v2 * m[2 * 4 + 3] + m[3 * 4 + 3];\n\n  dst[0] = (v0 * m[0 * 4 + 0] + v1 * m[1 * 4 + 0] + v2 * m[2 * 4 + 0] + m[3 * 4 + 0]) / d;\n  dst[1] = (v0 * m[0 * 4 + 1] + v1 * m[1 * 4 + 1] + v2 * m[2 * 4 + 1] + m[3 * 4 + 1]) / d;\n  dst[2] = (v0 * m[0 * 4 + 2] + v1 * m[1 * 4 + 2] + v2 * m[2 * 4 + 2] + m[3 * 4 + 2]) / d;\n\n  return dst;\n}\n\n/**\n * Takes a 4-by-4 matrix and a vector with 3 entries, interprets the vector as a\n * direction, transforms that direction by the matrix, and returns the result;\n * assumes the transformation of 3-dimensional space represented by the matrix\n * is parallel-preserving, i.e. any combination of rotation, scaling and\n * translation, but not a perspective distortion. Returns a vector with 3\n * entries.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/v3.Vec3} v The direction.\n * @param {module:twgl/v3.Vec3} [dst] optional Vec3 to store result. If not passed a new one is created.\n * @return {module:twgl/v3.Vec3} The transformed direction.\n * @memberOf module:twgl/m4\n */\nfunction transformDirection(m, v, dst) {\n  dst = dst || create$1();\n\n  const v0 = v[0];\n  const v1 = v[1];\n  const v2 = v[2];\n\n  dst[0] = v0 * m[0 * 4 + 0] + v1 * m[1 * 4 + 0] + v2 * m[2 * 4 + 0];\n  dst[1] = v0 * m[0 * 4 + 1] + v1 * m[1 * 4 + 1] + v2 * m[2 * 4 + 1];\n  dst[2] = v0 * m[0 * 4 + 2] + v1 * m[1 * 4 + 2] + v2 * m[2 * 4 + 2];\n\n  return dst;\n}\n\n/**\n * Takes a 4-by-4 matrix m and a vector v with 3 entries, interprets the vector\n * as a normal to a surface, and computes a vector which is normal upon\n * transforming that surface by the matrix. The effect of this function is the\n * same as transforming v (as a direction) by the inverse-transpose of m.  This\n * function assumes the transformation of 3-dimensional space represented by the\n * matrix is parallel-preserving, i.e. any combination of rotation, scaling and\n * translation, but not a perspective distortion.  Returns a vector with 3\n * entries.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/v3.Vec3} v The normal.\n * @param {module:twgl/v3.Vec3} [dst] The direction. If not passed a new one is created.\n * @return {module:twgl/v3.Vec3} The transformed normal.\n * @memberOf module:twgl/m4\n */\nfunction transformNormal$1(m, v, dst) {\n  dst = dst || create$1();\n  const mi = inverse(m);\n  const v0 = v[0];\n  const v1 = v[1];\n  const v2 = v[2];\n\n  dst[0] = v0 * mi[0 * 4 + 0] + v1 * mi[0 * 4 + 1] + v2 * mi[0 * 4 + 2];\n  dst[1] = v0 * mi[1 * 4 + 0] + v1 * mi[1 * 4 + 1] + v2 * mi[1 * 4 + 2];\n  dst[2] = v0 * mi[2 * 4 + 0] + v1 * mi[2 * 4 + 1] + v2 * mi[2 * 4 + 2];\n\n  return dst;\n}\n\nvar m4 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  axisRotate: axisRotate,\n  axisRotation: axisRotation,\n  copy: copy,\n  create: create,\n  frustum: frustum,\n  getAxis: getAxis,\n  getTranslation: getTranslation,\n  identity: identity,\n  inverse: inverse,\n  lookAt: lookAt,\n  multiply: multiply,\n  negate: negate,\n  ortho: ortho,\n  perspective: perspective,\n  rotateX: rotateX,\n  rotateY: rotateY,\n  rotateZ: rotateZ,\n  rotationX: rotationX,\n  rotationY: rotationY,\n  rotationZ: rotationZ,\n  scale: scale,\n  scaling: scaling,\n  setAxis: setAxis,\n  setDefaultType: setDefaultType,\n  setTranslation: setTranslation,\n  transformDirection: transformDirection,\n  transformNormal: transformNormal$1,\n  transformPoint: transformPoint,\n  translate: translate,\n  translation: translation,\n  transpose: transpose\n});\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/* DataType */\nconst BYTE$2                           = 0x1400;\nconst UNSIGNED_BYTE$3                  = 0x1401;\nconst SHORT$2                          = 0x1402;\nconst UNSIGNED_SHORT$3                 = 0x1403;\nconst INT$3                            = 0x1404;\nconst UNSIGNED_INT$3                   = 0x1405;\nconst FLOAT$3                          = 0x1406;\nconst UNSIGNED_SHORT_4_4_4_4$1       = 0x8033;\nconst UNSIGNED_SHORT_5_5_5_1$1       = 0x8034;\nconst UNSIGNED_SHORT_5_6_5$1         = 0x8363;\nconst HALF_FLOAT$1                   = 0x140B;\nconst UNSIGNED_INT_2_10_10_10_REV$1  = 0x8368;\nconst UNSIGNED_INT_10F_11F_11F_REV$1 = 0x8C3B;\nconst UNSIGNED_INT_5_9_9_9_REV$1     = 0x8C3E;\nconst FLOAT_32_UNSIGNED_INT_24_8_REV$1 = 0x8DAD;\nconst UNSIGNED_INT_24_8$1            = 0x84FA;\n\nconst glTypeToTypedArray = {};\n{\n  const tt = glTypeToTypedArray;\n  tt[BYTE$2]                           = Int8Array;\n  tt[UNSIGNED_BYTE$3]                  = Uint8Array;\n  tt[SHORT$2]                          = Int16Array;\n  tt[UNSIGNED_SHORT$3]                 = Uint16Array;\n  tt[INT$3]                            = Int32Array;\n  tt[UNSIGNED_INT$3]                   = Uint32Array;\n  tt[FLOAT$3]                          = Float32Array;\n  tt[UNSIGNED_SHORT_4_4_4_4$1]         = Uint16Array;\n  tt[UNSIGNED_SHORT_5_5_5_1$1]         = Uint16Array;\n  tt[UNSIGNED_SHORT_5_6_5$1]           = Uint16Array;\n  tt[HALF_FLOAT$1]                     = Uint16Array;\n  tt[UNSIGNED_INT_2_10_10_10_REV$1]    = Uint32Array;\n  tt[UNSIGNED_INT_10F_11F_11F_REV$1]   = Uint32Array;\n  tt[UNSIGNED_INT_5_9_9_9_REV$1]       = Uint32Array;\n  tt[FLOAT_32_UNSIGNED_INT_24_8_REV$1] = Uint32Array;\n  tt[UNSIGNED_INT_24_8$1]              = Uint32Array;\n}\n\n/**\n * Get the GL type for a typedArray\n * @param {ArrayBufferView} typedArray a typedArray\n * @return {number} the GL type for array. For example pass in an `Int8Array` and `gl.BYTE` will\n *   be returned. Pass in a `Uint32Array` and `gl.UNSIGNED_INT` will be returned\n * @memberOf module:twgl/typedArray\n */\nfunction getGLTypeForTypedArray(typedArray) {\n  if (typedArray instanceof Int8Array)         { return BYTE$2; }           // eslint-disable-line\n  if (typedArray instanceof Uint8Array)        { return UNSIGNED_BYTE$3; }  // eslint-disable-line\n  if (typedArray instanceof Uint8ClampedArray) { return UNSIGNED_BYTE$3; }  // eslint-disable-line\n  if (typedArray instanceof Int16Array)        { return SHORT$2; }          // eslint-disable-line\n  if (typedArray instanceof Uint16Array)       { return UNSIGNED_SHORT$3; } // eslint-disable-line\n  if (typedArray instanceof Int32Array)        { return INT$3; }            // eslint-disable-line\n  if (typedArray instanceof Uint32Array)       { return UNSIGNED_INT$3; }   // eslint-disable-line\n  if (typedArray instanceof Float32Array)      { return FLOAT$3; }          // eslint-disable-line\n  throw new Error('unsupported typed array type');\n}\n\n/**\n * Get the GL type for a typedArray type\n * @param {ArrayBufferView} typedArrayType a typedArray constructor\n * @return {number} the GL type for type. For example pass in `Int8Array` and `gl.BYTE` will\n *   be returned. Pass in `Uint32Array` and `gl.UNSIGNED_INT` will be returned\n * @memberOf module:twgl/typedArray\n */\nfunction getGLTypeForTypedArrayType(typedArrayType) {\n  if (typedArrayType === Int8Array)         { return BYTE$2; }           // eslint-disable-line\n  if (typedArrayType === Uint8Array)        { return UNSIGNED_BYTE$3; }  // eslint-disable-line\n  if (typedArrayType === Uint8ClampedArray) { return UNSIGNED_BYTE$3; }  // eslint-disable-line\n  if (typedArrayType === Int16Array)        { return SHORT$2; }          // eslint-disable-line\n  if (typedArrayType === Uint16Array)       { return UNSIGNED_SHORT$3; } // eslint-disable-line\n  if (typedArrayType === Int32Array)        { return INT$3; }            // eslint-disable-line\n  if (typedArrayType === Uint32Array)       { return UNSIGNED_INT$3; }   // eslint-disable-line\n  if (typedArrayType === Float32Array)      { return FLOAT$3; }          // eslint-disable-line\n  throw new Error('unsupported typed array type');\n}\n\n/**\n * Get the typed array constructor for a given GL type\n * @param {number} type the GL type. (eg: `gl.UNSIGNED_INT`)\n * @return {function} the constructor for a the corresponding typed array. (eg. `Uint32Array`).\n * @memberOf module:twgl/typedArray\n */\nfunction getTypedArrayTypeForGLType(type) {\n  const CTOR = glTypeToTypedArray[type];\n  if (!CTOR) {\n    throw new Error('unknown gl type');\n  }\n  return CTOR;\n}\n\nconst isArrayBuffer$1 = typeof SharedArrayBuffer !== 'undefined'\n  ? function isArrayBufferOrSharedArrayBuffer(a) {\n    return a && a.buffer && (a.buffer instanceof ArrayBuffer || a.buffer instanceof SharedArrayBuffer);\n  }\n  : function isArrayBuffer(a) {\n    return a && a.buffer && a.buffer instanceof ArrayBuffer;\n  };\n\nvar typedarrays = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  getGLTypeForTypedArray: getGLTypeForTypedArray,\n  getGLTypeForTypedArrayType: getGLTypeForTypedArrayType,\n  getTypedArrayTypeForGLType: getTypedArrayTypeForGLType,\n  isArrayBuffer: isArrayBuffer$1\n});\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/* eslint no-console: \"off\" */\n\n/**\n * Copy named properties\n *\n * @param {string[]} names names of properties to copy\n * @param {object} src object to copy properties from\n * @param {object} dst object to copy properties to\n * @private\n */\nfunction copyNamedProperties(names, src, dst) {\n  names.forEach(function(name) {\n    const value = src[name];\n    if (value !== undefined) {\n      dst[name] = value;\n    }\n  });\n}\n\n/**\n * Copies properties from source to dest only if a matching key is in dest\n *\n * @param {Object.<string, ?>} src the source\n * @param {Object.<string, ?>} dst the dest\n * @private\n */\nfunction copyExistingProperties(src, dst) {\n  Object.keys(dst).forEach(function(key) {\n    if (dst.hasOwnProperty(key) && src.hasOwnProperty(key)) {  /* eslint no-prototype-builtins: 0 */\n      dst[key] = src[key];\n    }\n  });\n}\n\nfunction error$1(...args) {\n  console.error(...args);\n}\n\nfunction warn$1(...args) {\n  console.warn(...args);\n}\n\nconst isTypeWeakMaps = new Map();\n\nfunction isType(object, type) {\n  if (!object || typeof object !== 'object') {\n    return false;\n  }\n  let weakMap = isTypeWeakMaps.get(type);\n  if (!weakMap) {\n    weakMap = new WeakMap();\n    isTypeWeakMaps.set(type, weakMap);\n  }\n  let isOfType = weakMap.get(object);\n  if (isOfType === undefined) {\n    const s = Object.prototype.toString.call(object);\n    isOfType = s.substring(8, s.length - 1) === type;\n    weakMap.set(object, isOfType);\n  }\n  return isOfType;\n}\n\nfunction isBuffer(gl, t) {\n  return typeof WebGLBuffer !== 'undefined' && isType(t, 'WebGLBuffer');\n}\n\nfunction isRenderbuffer(gl, t) {\n  return typeof WebGLRenderbuffer !== 'undefined' && isType(t, 'WebGLRenderbuffer');\n}\n\nfunction isTexture(gl, t) {\n  return typeof WebGLTexture !== 'undefined' && isType(t, 'WebGLTexture');\n}\n\nfunction isSampler(gl, t) {\n  return typeof WebGLSampler !== 'undefined' && isType(t, 'WebGLSampler');\n}\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\nconst STATIC_DRAW                  = 0x88e4;\nconst ARRAY_BUFFER$1                 = 0x8892;\nconst ELEMENT_ARRAY_BUFFER$2         = 0x8893;\nconst BUFFER_SIZE                  = 0x8764;\n\nconst BYTE$1                         = 0x1400;\nconst UNSIGNED_BYTE$2                = 0x1401;\nconst SHORT$1                        = 0x1402;\nconst UNSIGNED_SHORT$2               = 0x1403;\nconst INT$2                          = 0x1404;\nconst UNSIGNED_INT$2                 = 0x1405;\nconst FLOAT$2                        = 0x1406;\nconst defaults$2 = {\n  attribPrefix: \"\",\n};\n\n/**\n * Sets the default attrib prefix\n *\n * When writing shaders I prefer to name attributes with `a_`, uniforms with `u_` and varyings with `v_`\n * as it makes it clear where they came from. But, when building geometry I prefer using un-prefixed names.\n *\n * In other words I'll create arrays of geometry like this\n *\n *     var arrays = {\n *       position: ...\n *       normal: ...\n *       texcoord: ...\n *     };\n *\n * But need those mapped to attributes and my attributes start with `a_`.\n *\n * @deprecated see {@link module:twgl.setDefaults}\n * @param {string} prefix prefix for attribs\n * @memberOf module:twgl/attributes\n */\nfunction setAttributePrefix(prefix) {\n  defaults$2.attribPrefix = prefix;\n}\n\nfunction setDefaults$2(newDefaults) {\n  copyExistingProperties(newDefaults, defaults$2);\n}\n\nfunction setBufferFromTypedArray(gl, type, buffer, array, drawType) {\n  gl.bindBuffer(type, buffer);\n  gl.bufferData(type, array, drawType || STATIC_DRAW);\n}\n\n/**\n * Given typed array creates a WebGLBuffer and copies the typed array\n * into it.\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @param {ArrayBuffer|SharedArrayBuffer|ArrayBufferView|WebGLBuffer} typedArray the typed array. Note: If a WebGLBuffer is passed in it will just be returned. No action will be taken\n * @param {number} [type] the GL bind type for the buffer. Default = `gl.ARRAY_BUFFER`.\n * @param {number} [drawType] the GL draw type for the buffer. Default = 'gl.STATIC_DRAW`.\n * @return {WebGLBuffer} the created WebGLBuffer\n * @memberOf module:twgl/attributes\n */\nfunction createBufferFromTypedArray(gl, typedArray, type, drawType) {\n  if (isBuffer(gl, typedArray)) {\n    return typedArray;\n  }\n  type = type || ARRAY_BUFFER$1;\n  const buffer = gl.createBuffer();\n  setBufferFromTypedArray(gl, type, buffer, typedArray, drawType);\n  return buffer;\n}\n\nfunction isIndices(name) {\n  return name === \"indices\";\n}\n\n// This is really just a guess. Though I can't really imagine using\n// anything else? Maybe for some compression?\nfunction getNormalizationForTypedArrayType(typedArrayType) {\n  if (typedArrayType === Int8Array)    { return true; }  // eslint-disable-line\n  if (typedArrayType === Uint8Array)   { return true; }  // eslint-disable-line\n  return false;\n}\n\nfunction getArray$1(array) {\n  return array.length ? array : array.data;\n}\n\nconst texcoordRE = /coord|texture/i;\nconst colorRE = /color|colour/i;\n\nfunction guessNumComponentsFromName(name, length) {\n  let numComponents;\n  if (texcoordRE.test(name)) {\n    numComponents = 2;\n  } else if (colorRE.test(name)) {\n    numComponents = 4;\n  } else {\n    numComponents = 3;  // position, normals, indices ...\n  }\n\n  if (length % numComponents > 0) {\n    throw new Error(`Can not guess numComponents for attribute '${name}'. Tried ${numComponents} but ${length} values is not evenly divisible by ${numComponents}. You should specify it.`);\n  }\n\n  return numComponents;\n}\n\nfunction getNumComponents$1(array, arrayName, numValues) {\n  return array.numComponents || array.size || guessNumComponentsFromName(arrayName, numValues || getArray$1(array).length);\n}\n\nfunction makeTypedArray(array, name) {\n  if (isArrayBuffer$1(array)) {\n    return array;\n  }\n\n  if (isArrayBuffer$1(array.data)) {\n    return array.data;\n  }\n\n  if (Array.isArray(array)) {\n    array = {\n      data: array,\n    };\n  }\n\n  let Type = array.type ? typedArrayTypeFromGLTypeOrTypedArrayCtor(array.type) : undefined;\n  if (!Type) {\n    if (isIndices(name)) {\n      Type = Uint16Array;\n    } else {\n      Type = Float32Array;\n    }\n  }\n  return new Type(array.data);\n}\n\nfunction glTypeFromGLTypeOrTypedArrayType(glTypeOrTypedArrayCtor) {\n  return typeof glTypeOrTypedArrayCtor === 'number'\n      ? glTypeOrTypedArrayCtor\n      : glTypeOrTypedArrayCtor ? getGLTypeForTypedArrayType(glTypeOrTypedArrayCtor) : FLOAT$2;\n}\n\nfunction typedArrayTypeFromGLTypeOrTypedArrayCtor(glTypeOrTypedArrayCtor) {\n  return typeof glTypeOrTypedArrayCtor === 'number'\n      ? getTypedArrayTypeForGLType(glTypeOrTypedArrayCtor)\n      : glTypeOrTypedArrayCtor || Float32Array;\n}\n\nfunction attribBufferFromBuffer(gl, array/*, arrayName */) {\n  return {\n    buffer: array.buffer,\n    numValues: 2 * 3 * 4,  // safely divided by 2, 3, 4\n    type: glTypeFromGLTypeOrTypedArrayType(array.type),\n    arrayType: typedArrayTypeFromGLTypeOrTypedArrayCtor(array.type),\n  };\n}\n\nfunction attribBufferFromSize(gl, array/*, arrayName*/) {\n  const numValues = array.data || array;\n  const arrayType = typedArrayTypeFromGLTypeOrTypedArrayCtor(array.type);\n  const numBytes = numValues * arrayType.BYTES_PER_ELEMENT;\n  const buffer = gl.createBuffer();\n  gl.bindBuffer(ARRAY_BUFFER$1, buffer);\n  gl.bufferData(ARRAY_BUFFER$1, numBytes, array.drawType || STATIC_DRAW);\n  return {\n    buffer,\n    numValues,\n    type: getGLTypeForTypedArrayType(arrayType),\n    arrayType,\n  };\n}\n\nfunction attribBufferFromArrayLike(gl, array, arrayName) {\n  const typedArray = makeTypedArray(array, arrayName);\n  return {\n    arrayType: typedArray.constructor,\n    buffer: createBufferFromTypedArray(gl, typedArray, undefined, array.drawType),\n    type: getGLTypeForTypedArray(typedArray),\n    numValues: 0,\n  };\n}\n\n/**\n * The info for an attribute. This is effectively just the arguments to `gl.vertexAttribPointer` plus the WebGLBuffer\n * for the attribute.\n *\n * @typedef {Object} AttribInfo\n * @property {number[]|ArrayBufferView} [value] a constant value for the attribute. Note: if this is set the attribute will be\n *    disabled and set to this constant value and all other values will be ignored.\n * @property {number} [numComponents] the number of components for this attribute.\n * @property {number} [size] synonym for `numComponents`.\n * @property {number} [type] the type of the attribute (eg. `gl.FLOAT`, `gl.UNSIGNED_BYTE`, etc...) Default = `gl.FLOAT`\n * @property {boolean} [normalize] whether or not to normalize the data. Default = false\n * @property {number} [offset] offset into buffer in bytes. Default = 0\n * @property {number} [stride] the stride in bytes per element. Default = 0\n * @property {number} [divisor] the divisor in instances. Default = 0.\n *    Requires WebGL2 or the ANGLE_instanced_arrays extension.\n *    and, if you're using WebGL1 you must have called {@link module:twgl.addExtensionsToContext}\n * @property {WebGLBuffer} buffer the buffer that contains the data for this attribute\n * @property {number} [drawType] the draw type passed to gl.bufferData. Default = gl.STATIC_DRAW\n * @memberOf module:twgl\n */\n\n/**\n * @typedef {(Int8ArrayConstructor|Uint8ArrayConstructor|Int16ArrayConstructor|Uint16ArrayConstructor|Int32ArrayConstructor|Uint32ArrayConstructor|Float32ArrayConstructor)} TypedArrayConstructor\n */\n\n/**\n * Use this type of array spec when TWGL can't guess the type or number of components of an array\n * @typedef {Object} FullArraySpec\n * @property {number[]|ArrayBufferView} [value] a constant value for the attribute. Note: if this is set the attribute will be\n *    disabled and set to this constant value and all other values will be ignored.\n * @property {(number|number[]|ArrayBufferView)} [data] The data of the array. A number alone becomes the number of elements of type.\n * @property {number} [numComponents] number of components for `vertexAttribPointer`. Default is based on the name of the array.\n *    If `coord` is in the name assumes `numComponents = 2`.\n *    If `color` is in the name assumes `numComponents = 4`.\n *    otherwise assumes `numComponents = 3`\n * @property {number|TypedArrayConstructor} [type] type. This is used if `data` is a JavaScript array, or `buffer` is passed in, or `data` is a number.\n *   It can either be the constructor for a typedarray. (eg. `Uint8Array`) OR a WebGL type, (eg `gl.UNSIGNED_BYTE`).\n *   For example if you want colors in a `Uint8Array` you might have a `FullArraySpec` like `{ type: gl.UNSIGNED_BYTE, data: [255,0,255,255, ...], }`.\n * @property {number} [size] synonym for `numComponents`.\n * @property {boolean} [normalize] normalize for `vertexAttribPointer`. Default is true if type is `Int8Array` or `Uint8Array` otherwise false.\n * @property {number} [stride] stride for `vertexAttribPointer`. Default = 0\n * @property {number} [offset] offset for `vertexAttribPointer`. Default = 0\n * @property {number} [divisor] divisor for `vertexAttribDivisor`. Default = 0.\n *     Requires WebGL2 or the ANGLE_instanced_arrays extension.\n *     and, if you using WebGL1 you must have called {@link module:twgl.addExtensionsToContext}\n * @property {string} [attrib] name of attribute this array maps to. Defaults to same name as array prefixed by the default attribPrefix.\n * @property {string} [name] synonym for `attrib`.\n * @property {string} [attribName] synonym for `attrib`.\n * @property {WebGLBuffer} [buffer] Buffer to use for this attribute. This lets you use your own buffer\n *    but you will need to supply `numComponents` and `type`. You can effectively pass an `AttribInfo`\n *    to provide this. Example:\n *\n *         const bufferInfo1 = twgl.createBufferInfoFromArrays(gl, {\n *           position: [1, 2, 3, ... ],\n *         });\n *         const bufferInfo2 = twgl.createBufferInfoFromArrays(gl, {\n *           position: bufferInfo1.attribs.position,  // use the same buffer from bufferInfo1\n *         });\n *\n * @property {number} [drawType] the draw type passed to gl.bufferData. Default = gl.STATIC_DRAW\n * @memberOf module:twgl\n */\n\n/**\n * An individual array in {@link module:twgl.Arrays}\n *\n * When passed to {@link module:twgl.createBufferInfoFromArrays} if an ArraySpec is `number[]` or `ArrayBufferView`\n * the types will be guessed based on the name. `indices` will be `Uint16Array`, everything else will\n * be `Float32Array`. If an ArraySpec is a number it's the number of floats for an empty (zeroed) buffer.\n *\n * @typedef {(number|number[]|ArrayBufferView|module:twgl.FullArraySpec)} ArraySpec\n * @memberOf module:twgl\n */\n\n/**\n * This is a JavaScript object of arrays by name. The names should match your shader's attributes. If your\n * attributes have a common prefix you can specify it by calling {@link module:twgl.setAttributePrefix}.\n *\n *     Bare JavaScript Arrays\n *\n *         var arrays = {\n *            position: [-1, 1, 0],\n *            normal: [0, 1, 0],\n *            ...\n *         }\n *\n *     Bare TypedArrays\n *\n *         var arrays = {\n *            position: new Float32Array([-1, 1, 0]),\n *            color: new Uint8Array([255, 128, 64, 255]),\n *            ...\n *         }\n *\n * *   Will guess at `numComponents` if not specified based on name.\n *\n *     If `coord` is in the name assumes `numComponents = 2`\n *\n *     If `color` is in the name assumes `numComponents = 4`\n *\n *     otherwise assumes `numComponents = 3`\n *\n * Objects with various fields. See {@link module:twgl.FullArraySpec}.\n *\n *     var arrays = {\n *       position: { numComponents: 3, data: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0], },\n *       texcoord: { numComponents: 2, data: [0, 0, 0, 1, 1, 0, 1, 1],                 },\n *       normal:   { numComponents: 3, data: [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],     },\n *       indices:  { numComponents: 3, data: [0, 1, 2, 1, 2, 3],                       },\n *     };\n *\n * @typedef {Object.<string, module:twgl.ArraySpec>} Arrays\n * @memberOf module:twgl\n */\n\n\n/**\n * Creates a set of attribute data and WebGLBuffers from set of arrays\n *\n * Given\n *\n *      var arrays = {\n *        position: { numComponents: 3, data: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0], },\n *        texcoord: { numComponents: 2, data: [0, 0, 0, 1, 1, 0, 1, 1],                 },\n *        normal:   { numComponents: 3, data: [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],     },\n *        color:    { numComponents: 4, data: [255, 255, 255, 255, 255, 0, 0, 255, 0, 0, 255, 255], type: Uint8Array, },\n *        indices:  { numComponents: 3, data: [0, 1, 2, 1, 2, 3],                       },\n *      };\n *\n * returns something like\n *\n *      var attribs = {\n *        position: { numComponents: 3, type: gl.FLOAT,         normalize: false, buffer: WebGLBuffer, },\n *        texcoord: { numComponents: 2, type: gl.FLOAT,         normalize: false, buffer: WebGLBuffer, },\n *        normal:   { numComponents: 3, type: gl.FLOAT,         normalize: false, buffer: WebGLBuffer, },\n *        color:    { numComponents: 4, type: gl.UNSIGNED_BYTE, normalize: true,  buffer: WebGLBuffer, },\n *      };\n *\n * notes:\n *\n * *   Arrays can take various forms\n *\n *     Bare JavaScript Arrays\n *\n *         var arrays = {\n *            position: [-1, 1, 0],\n *            normal: [0, 1, 0],\n *            ...\n *         }\n *\n *     Bare TypedArrays\n *\n *         var arrays = {\n *            position: new Float32Array([-1, 1, 0]),\n *            color: new Uint8Array([255, 128, 64, 255]),\n *            ...\n *         }\n *\n * *   Will guess at `numComponents` if not specified based on name.\n *\n *     If `coord` is in the name assumes `numComponents = 2`\n *\n *     If `color` is in the name assumes `numComponents = 4`\n *\n *     otherwise assumes `numComponents = 3`\n *\n * @param {WebGLRenderingContext} gl The webgl rendering context.\n * @param {module:twgl.Arrays} arrays The arrays\n * @param {module:twgl.BufferInfo} [srcBufferInfo] a BufferInfo to copy from\n *   This lets you share buffers. Any arrays you supply will override\n *   the buffers from srcBufferInfo.\n * @return {Object.<string, module:twgl.AttribInfo>} the attribs\n * @memberOf module:twgl/attributes\n */\nfunction createAttribsFromArrays(gl, arrays) {\n  const attribs = {};\n  Object.keys(arrays).forEach(function(arrayName) {\n    if (!isIndices(arrayName)) {\n      const array = arrays[arrayName];\n      const attribName = array.attrib || array.name || array.attribName || (defaults$2.attribPrefix + arrayName);\n      if (array.value) {\n        if (!Array.isArray(array.value) && !isArrayBuffer$1(array.value)) {\n          throw new Error('array.value is not array or typedarray');\n        }\n        attribs[attribName] = {\n          value: array.value,\n        };\n      } else {\n        let fn;\n        if (array.buffer && array.buffer instanceof WebGLBuffer) {\n          fn = attribBufferFromBuffer;\n        } else if (typeof array === \"number\" || typeof array.data === \"number\") {\n          fn = attribBufferFromSize;\n        } else {\n          fn = attribBufferFromArrayLike;\n        }\n        const {buffer, type, numValues, arrayType} = fn(gl, array, arrayName);\n        const normalization = array.normalize !== undefined ? array.normalize : getNormalizationForTypedArrayType(arrayType);\n        const numComponents = getNumComponents$1(array, arrayName, numValues);\n        attribs[attribName] = {\n          buffer:        buffer,\n          numComponents: numComponents,\n          type:          type,\n          normalize:     normalization,\n          stride:        array.stride || 0,\n          offset:        array.offset || 0,\n          divisor:       array.divisor === undefined ? undefined : array.divisor,\n          drawType:      array.drawType,\n        };\n      }\n    }\n  });\n  gl.bindBuffer(ARRAY_BUFFER$1, null);\n  return attribs;\n}\n\n/**\n * Sets the contents of a buffer attached to an attribInfo\n *\n * This is helper function to dynamically update a buffer.\n *\n * Let's say you make a bufferInfo\n *\n *     var arrays = {\n *        position: new Float32Array([0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0]),\n *        texcoord: new Float32Array([0, 0, 0, 1, 1, 0, 1, 1]),\n *        normal:   new Float32Array([0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1]),\n *        indices:  new Uint16Array([0, 1, 2, 1, 2, 3]),\n *     };\n *     var bufferInfo = twgl.createBufferInfoFromArrays(gl, arrays);\n *\n *  And you want to dynamically update the positions. You could do this\n *\n *     // assuming arrays.position has already been updated with new data.\n *     twgl.setAttribInfoBufferFromArray(gl, bufferInfo.attribs.position, arrays.position);\n *\n * @param {WebGLRenderingContext} gl\n * @param {AttribInfo} attribInfo The attribInfo who's buffer contents to set. NOTE: If you have an attribute prefix\n *   the name of the attribute will include the prefix.\n * @param {ArraySpec} array Note: it is arguably inefficient to pass in anything but a typed array because anything\n *    else will have to be converted to a typed array before it can be used by WebGL. During init time that\n *    inefficiency is usually not important but if you're updating data dynamically best to be efficient.\n * @param {number} [offset] an optional offset into the buffer. This is only an offset into the WebGL buffer\n *    not the array. To pass in an offset into the array itself use a typed array and create an `ArrayBufferView`\n *    for the portion of the array you want to use.\n *\n *        var someArray = new Float32Array(1000); // an array with 1000 floats\n *        var someSubArray = new Float32Array(someArray.buffer, offsetInBytes, sizeInUnits); // a view into someArray\n *\n *    Now you can pass `someSubArray` into setAttribInfoBufferFromArray`\n * @memberOf module:twgl/attributes\n */\nfunction setAttribInfoBufferFromArray(gl, attribInfo, array, offset) {\n  array = makeTypedArray(array);\n  if (offset !== undefined) {\n    gl.bindBuffer(ARRAY_BUFFER$1, attribInfo.buffer);\n    gl.bufferSubData(ARRAY_BUFFER$1, offset, array);\n  } else {\n    setBufferFromTypedArray(gl, ARRAY_BUFFER$1, attribInfo.buffer, array, attribInfo.drawType);\n  }\n}\n\nfunction getBytesPerValueForGLType(gl, type) {\n  if (type === BYTE$1)           return 1;  // eslint-disable-line\n  if (type === UNSIGNED_BYTE$2)  return 1;  // eslint-disable-line\n  if (type === SHORT$1)          return 2;  // eslint-disable-line\n  if (type === UNSIGNED_SHORT$2) return 2;  // eslint-disable-line\n  if (type === INT$2)            return 4;  // eslint-disable-line\n  if (type === UNSIGNED_INT$2)   return 4;  // eslint-disable-line\n  if (type === FLOAT$2)          return 4;  // eslint-disable-line\n  return 0;\n}\n\n// Tries to get the number of elements from a set of arrays.\nconst positionKeys = ['position', 'positions', 'a_position'];\nfunction getNumElementsFromNonIndexedArrays(arrays) {\n  let key;\n  let ii;\n  for (ii = 0; ii < positionKeys.length; ++ii) {\n    key = positionKeys[ii];\n    if (key in arrays) {\n      break;\n    }\n  }\n  if (ii === positionKeys.length) {\n    key = Object.keys(arrays)[0];\n  }\n  const array = arrays[key];\n  const length = getArray$1(array).length;\n  if (length === undefined) {\n    return 1;   // There's no arrays\n  }\n  const numComponents = getNumComponents$1(array, key);\n  const numElements = length / numComponents;\n  if (length % numComponents > 0) {\n    throw new Error(`numComponents ${numComponents} not correct for length ${length}`);\n  }\n  return numElements;\n}\n\nfunction getNumElementsFromAttributes(gl, attribs) {\n  let key;\n  let ii;\n  for (ii = 0; ii < positionKeys.length; ++ii) {\n    key = positionKeys[ii];\n    if (key in attribs) {\n      break;\n    }\n    key = defaults$2.attribPrefix + key;\n    if (key in attribs) {\n      break;\n    }\n  }\n  if (ii === positionKeys.length) {\n    key = Object.keys(attribs)[0];\n  }\n  const attrib = attribs[key];\n  if (!attrib.buffer) {\n    return 1; // There's no buffer\n  }\n  gl.bindBuffer(ARRAY_BUFFER$1, attrib.buffer);\n  const numBytes = gl.getBufferParameter(ARRAY_BUFFER$1, BUFFER_SIZE);\n  gl.bindBuffer(ARRAY_BUFFER$1, null);\n\n  const bytesPerValue = getBytesPerValueForGLType(gl, attrib.type);\n  const totalElements = numBytes / bytesPerValue;\n  const numComponents = attrib.numComponents || attrib.size;\n  // TODO: check stride\n  const numElements = totalElements / numComponents;\n  if (numElements % 1 !== 0) {\n    throw new Error(`numComponents ${numComponents} not correct for length ${length}`);\n  }\n  return numElements;\n}\n\n/**\n * @typedef {Object} BufferInfo\n * @property {number} numElements The number of elements to pass to `gl.drawArrays` or `gl.drawElements`.\n * @property {number} [elementType] The type of indices `UNSIGNED_BYTE`, `UNSIGNED_SHORT` etc..\n * @property {WebGLBuffer} [indices] The indices `ELEMENT_ARRAY_BUFFER` if any indices exist.\n * @property {Object.<string, module:twgl.AttribInfo>} [attribs] The attribs appropriate to call `setAttributes`\n * @memberOf module:twgl\n */\n\n/**\n * Creates a BufferInfo from an object of arrays.\n *\n * This can be passed to {@link module:twgl.setBuffersAndAttributes} and to\n * {@link module:twgl:drawBufferInfo}.\n *\n * Given an object like\n *\n *     var arrays = {\n *       position: { numComponents: 3, data: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0], },\n *       texcoord: { numComponents: 2, data: [0, 0, 0, 1, 1, 0, 1, 1],                 },\n *       normal:   { numComponents: 3, data: [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],     },\n *       indices:  { numComponents: 3, data: [0, 1, 2, 1, 2, 3],                       },\n *     };\n *\n *  Creates an BufferInfo like this\n *\n *     bufferInfo = {\n *       numElements: 4,        // or whatever the number of elements is\n *       indices: WebGLBuffer,  // this property will not exist if there are no indices\n *       attribs: {\n *         position: { buffer: WebGLBuffer, numComponents: 3, },\n *         normal:   { buffer: WebGLBuffer, numComponents: 3, },\n *         texcoord: { buffer: WebGLBuffer, numComponents: 2, },\n *       },\n *     };\n *\n *  The properties of arrays can be JavaScript arrays in which case the number of components\n *  will be guessed.\n *\n *     var arrays = {\n *        position: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0],\n *        texcoord: [0, 0, 0, 1, 1, 0, 1, 1],\n *        normal:   [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],\n *        indices:  [0, 1, 2, 1, 2, 3],\n *     };\n *\n *  They can also be TypedArrays\n *\n *     var arrays = {\n *        position: new Float32Array([0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0]),\n *        texcoord: new Float32Array([0, 0, 0, 1, 1, 0, 1, 1]),\n *        normal:   new Float32Array([0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1]),\n *        indices:  new Uint16Array([0, 1, 2, 1, 2, 3]),\n *     };\n *\n *  Or AugmentedTypedArrays\n *\n *     var positions = createAugmentedTypedArray(3, 4);\n *     var texcoords = createAugmentedTypedArray(2, 4);\n *     var normals   = createAugmentedTypedArray(3, 4);\n *     var indices   = createAugmentedTypedArray(3, 2, Uint16Array);\n *\n *     positions.push([0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0]);\n *     texcoords.push([0, 0, 0, 1, 1, 0, 1, 1]);\n *     normals.push([0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1]);\n *     indices.push([0, 1, 2, 1, 2, 3]);\n *\n *     var arrays = {\n *        position: positions,\n *        texcoord: texcoords,\n *        normal:   normals,\n *        indices:  indices,\n *     };\n *\n * For the last example it is equivalent to\n *\n *     var bufferInfo = {\n *       attribs: {\n *         position: { numComponents: 3, buffer: gl.createBuffer(), },\n *         texcoord: { numComponents: 2, buffer: gl.createBuffer(), },\n *         normal: { numComponents: 3, buffer: gl.createBuffer(), },\n *       },\n *       indices: gl.createBuffer(),\n *       numElements: 6,\n *     };\n *\n *     gl.bindBuffer(gl.ARRAY_BUFFER, bufferInfo.attribs.position.buffer);\n *     gl.bufferData(gl.ARRAY_BUFFER, arrays.position, gl.STATIC_DRAW);\n *     gl.bindBuffer(gl.ARRAY_BUFFER, bufferInfo.attribs.texcoord.buffer);\n *     gl.bufferData(gl.ARRAY_BUFFER, arrays.texcoord, gl.STATIC_DRAW);\n *     gl.bindBuffer(gl.ARRAY_BUFFER, bufferInfo.attribs.normal.buffer);\n *     gl.bufferData(gl.ARRAY_BUFFER, arrays.normal, gl.STATIC_DRAW);\n *     gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, bufferInfo.indices);\n *     gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, arrays.indices, gl.STATIC_DRAW);\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @param {module:twgl.Arrays} arrays Your data\n * @param {module:twgl.BufferInfo} [srcBufferInfo] An existing\n *        buffer info to start from. WebGLBuffers etc specified\n *        in the srcBufferInfo will be used in a new BufferInfo\n *        with any arrays specified overriding the ones in\n *        srcBufferInfo.\n * @return {module:twgl.BufferInfo} A BufferInfo\n * @memberOf module:twgl/attributes\n */\nfunction createBufferInfoFromArrays(gl, arrays, srcBufferInfo) {\n  const newAttribs = createAttribsFromArrays(gl, arrays);\n  const bufferInfo = Object.assign({}, srcBufferInfo ? srcBufferInfo : {});\n  bufferInfo.attribs = Object.assign({}, srcBufferInfo ? srcBufferInfo.attribs : {}, newAttribs);\n  const indices = arrays.indices;\n  if (indices) {\n    const newIndices = makeTypedArray(indices, \"indices\");\n    bufferInfo.indices = createBufferFromTypedArray(gl, newIndices, ELEMENT_ARRAY_BUFFER$2);\n    bufferInfo.numElements = newIndices.length;\n    bufferInfo.elementType = getGLTypeForTypedArray(newIndices);\n  } else if (!bufferInfo.numElements) {\n    bufferInfo.numElements = getNumElementsFromAttributes(gl, bufferInfo.attribs);\n  }\n\n  return bufferInfo;\n}\n\n/**\n * Creates a buffer from an array, typed array, or array spec\n *\n * Given something like this\n *\n *     [1, 2, 3],\n *\n * or\n *\n *     new Uint16Array([1,2,3]);\n *\n * or\n *\n *     {\n *        data: [1, 2, 3],\n *        type: Uint8Array,\n *     }\n *\n * returns a WebGLBuffer that contains the given data.\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext.\n * @param {module:twgl.ArraySpec} array an array, typed array, or array spec.\n * @param {string} arrayName name of array. Used to guess the type if type can not be derived otherwise.\n * @return {WebGLBuffer} a WebGLBuffer containing the data in array.\n * @memberOf module:twgl/attributes\n */\nfunction createBufferFromArray(gl, array, arrayName) {\n  const type = arrayName === \"indices\" ? ELEMENT_ARRAY_BUFFER$2 : ARRAY_BUFFER$1;\n  const typedArray = makeTypedArray(array, arrayName);\n  return createBufferFromTypedArray(gl, typedArray, type);\n}\n\n/**\n * Creates buffers from arrays or typed arrays\n *\n * Given something like this\n *\n *     var arrays = {\n *        positions: [1, 2, 3],\n *        normals: [0, 0, 1],\n *     }\n *\n * returns something like\n *\n *     buffers = {\n *       positions: WebGLBuffer,\n *       normals: WebGLBuffer,\n *     }\n *\n * If the buffer is named 'indices' it will be made an ELEMENT_ARRAY_BUFFER.\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext.\n * @param {module:twgl.Arrays} arrays\n * @return {Object<string, WebGLBuffer>} returns an object with one WebGLBuffer per array\n * @memberOf module:twgl/attributes\n */\nfunction createBuffersFromArrays(gl, arrays) {\n  const buffers = { };\n  Object.keys(arrays).forEach(function(key) {\n    buffers[key] = createBufferFromArray(gl, arrays[key], key);\n  });\n\n  // Ugh!\n  if (arrays.indices) {\n    buffers.numElements = arrays.indices.length;\n    buffers.elementType = getGLTypeForTypedArray(makeTypedArray(arrays.indices));\n  } else {\n    buffers.numElements = getNumElementsFromNonIndexedArrays(arrays);\n  }\n\n  return buffers;\n}\n\nvar attributes = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  createAttribsFromArrays: createAttribsFromArrays,\n  createBuffersFromArrays: createBuffersFromArrays,\n  createBufferFromArray: createBufferFromArray,\n  createBufferFromTypedArray: createBufferFromTypedArray,\n  createBufferInfoFromArrays: createBufferInfoFromArrays,\n  setAttribInfoBufferFromArray: setAttribInfoBufferFromArray,\n  setAttributePrefix: setAttributePrefix,\n  setAttributeDefaults_: setDefaults$2,\n  getNumComponents_: getNumComponents$1,\n  getArray_: getArray$1\n});\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\nconst getArray = getArray$1;  // eslint-disable-line\nconst getNumComponents = getNumComponents$1;  // eslint-disable-line\n\n/**\n * @typedef {(Int8Array|Uint8Array|Int16Array|Uint16Array|Int32Array|Uint32Array|Float32Array)} TypedArray\n */\n\n/**\n * Add `push` to a typed array. It just keeps a 'cursor'\n * and allows use to `push` values into the array so we\n * don't have to manually compute offsets\n * @param {TypedArray} typedArray TypedArray to augment\n * @param {number} numComponents number of components.\n * @private\n */\nfunction augmentTypedArray(typedArray, numComponents) {\n  let cursor = 0;\n  typedArray.push = function() {\n    for (let ii = 0; ii < arguments.length; ++ii) {\n      const value = arguments[ii];\n      if (value instanceof Array || isArrayBuffer$1(value)) {\n        for (let jj = 0; jj < value.length; ++jj) {\n          typedArray[cursor++] = value[jj];\n        }\n      } else {\n        typedArray[cursor++] = value;\n      }\n    }\n  };\n  typedArray.reset = function(opt_index) {\n    cursor = opt_index || 0;\n  };\n  typedArray.numComponents = numComponents;\n  Object.defineProperty(typedArray, 'numElements', {\n    get: function() {\n      return this.length / this.numComponents | 0;\n    },\n  });\n  return typedArray;\n}\n\n/**\n * creates a typed array with a `push` function attached\n * so that you can easily *push* values.\n *\n * `push` can take multiple arguments. If an argument is an array each element\n * of the array will be added to the typed array.\n *\n * Example:\n *\n *     const array = createAugmentedTypedArray(3, 2);  // creates a Float32Array with 6 values\n *     array.push(1, 2, 3);\n *     array.push([4, 5, 6]);\n *     // array now contains [1, 2, 3, 4, 5, 6]\n *\n * Also has `numComponents` and `numElements` properties.\n *\n * @param {number} numComponents number of components\n * @param {number} numElements number of elements. The total size of the array will be `numComponents * numElements`.\n * @param {constructor} opt_type A constructor for the type. Default = `Float32Array`.\n * @return {ArrayBufferView} A typed array.\n * @memberOf module:twgl/primitives\n */\nfunction createAugmentedTypedArray(numComponents, numElements, opt_type) {\n  const Type = opt_type || Float32Array;\n  return augmentTypedArray(new Type(numComponents * numElements), numComponents);\n}\n\nfunction allButIndices(name) {\n  return name !== \"indices\";\n}\n\n/**\n * Given indexed vertices creates a new set of vertices un-indexed by expanding the indexed vertices.\n * @param {Object.<string, TypedArray>} vertices The indexed vertices to deindex\n * @return {Object.<string, TypedArray>} The deindexed vertices\n * @memberOf module:twgl/primitives\n */\nfunction deindexVertices(vertices) {\n  const indices = vertices.indices;\n  const newVertices = {};\n  const numElements = indices.length;\n\n  function expandToUnindexed(channel) {\n    const srcBuffer = vertices[channel];\n    const numComponents = srcBuffer.numComponents;\n    const dstBuffer = createAugmentedTypedArray(numComponents, numElements, srcBuffer.constructor);\n    for (let ii = 0; ii < numElements; ++ii) {\n      const ndx = indices[ii];\n      const offset = ndx * numComponents;\n      for (let jj = 0; jj < numComponents; ++jj) {\n        dstBuffer.push(srcBuffer[offset + jj]);\n      }\n    }\n    newVertices[channel] = dstBuffer;\n  }\n\n  Object.keys(vertices).filter(allButIndices).forEach(expandToUnindexed);\n\n  return newVertices;\n}\n\n/**\n * flattens the normals of deindexed vertices in place.\n * @param {Object.<string, TypedArray>} vertices The deindexed vertices who's normals to flatten\n * @return {Object.<string, TypedArray>} The flattened vertices (same as was passed in)\n * @memberOf module:twgl/primitives\n */\nfunction flattenNormals(vertices) {\n  if (vertices.indices) {\n    throw new Error('can not flatten normals of indexed vertices. deindex them first');\n  }\n\n  const normals = vertices.normal;\n  const numNormals = normals.length;\n  for (let ii = 0; ii < numNormals; ii += 9) {\n    // pull out the 3 normals for this triangle\n    const nax = normals[ii + 0];\n    const nay = normals[ii + 1];\n    const naz = normals[ii + 2];\n\n    const nbx = normals[ii + 3];\n    const nby = normals[ii + 4];\n    const nbz = normals[ii + 5];\n\n    const ncx = normals[ii + 6];\n    const ncy = normals[ii + 7];\n    const ncz = normals[ii + 8];\n\n    // add them\n    let nx = nax + nbx + ncx;\n    let ny = nay + nby + ncy;\n    let nz = naz + nbz + ncz;\n\n    // normalize them\n    const length = Math.sqrt(nx * nx + ny * ny + nz * nz);\n\n    nx /= length;\n    ny /= length;\n    nz /= length;\n\n    // copy them back in\n    normals[ii + 0] = nx;\n    normals[ii + 1] = ny;\n    normals[ii + 2] = nz;\n\n    normals[ii + 3] = nx;\n    normals[ii + 4] = ny;\n    normals[ii + 5] = nz;\n\n    normals[ii + 6] = nx;\n    normals[ii + 7] = ny;\n    normals[ii + 8] = nz;\n  }\n\n  return vertices;\n}\n\nfunction applyFuncToV3Array(array, matrix, fn) {\n  const len = array.length;\n  const tmp = new Float32Array(3);\n  for (let ii = 0; ii < len; ii += 3) {\n    fn(matrix, [array[ii], array[ii + 1], array[ii + 2]], tmp);\n    array[ii    ] = tmp[0];\n    array[ii + 1] = tmp[1];\n    array[ii + 2] = tmp[2];\n  }\n}\n\nfunction transformNormal(mi, v, dst) {\n  dst = dst || create$1();\n  const v0 = v[0];\n  const v1 = v[1];\n  const v2 = v[2];\n\n  dst[0] = v0 * mi[0 * 4 + 0] + v1 * mi[0 * 4 + 1] + v2 * mi[0 * 4 + 2];\n  dst[1] = v0 * mi[1 * 4 + 0] + v1 * mi[1 * 4 + 1] + v2 * mi[1 * 4 + 2];\n  dst[2] = v0 * mi[2 * 4 + 0] + v1 * mi[2 * 4 + 1] + v2 * mi[2 * 4 + 2];\n\n  return dst;\n}\n\n/**\n * Reorients directions by the given matrix..\n * @param {(number[]|TypedArray)} array The array. Assumes value floats per element.\n * @param {module:twgl/m4.Mat4} matrix A matrix to multiply by.\n * @return {(number[]|TypedArray)} the same array that was passed in\n * @memberOf module:twgl/primitives\n */\nfunction reorientDirections(array, matrix) {\n  applyFuncToV3Array(array, matrix, transformDirection);\n  return array;\n}\n\n/**\n * Reorients normals by the inverse-transpose of the given\n * matrix..\n * @param {(number[]|TypedArray)} array The array. Assumes value floats per element.\n * @param {module:twgl/m4.Mat4} matrix A matrix to multiply by.\n * @return {(number[]|TypedArray)} the same array that was passed in\n * @memberOf module:twgl/primitives\n */\nfunction reorientNormals(array, matrix) {\n  applyFuncToV3Array(array, inverse(matrix), transformNormal);\n  return array;\n}\n\n/**\n * Reorients positions by the given matrix. In other words, it\n * multiplies each vertex by the given matrix.\n * @param {(number[]|TypedArray)} array The array. Assumes value floats per element.\n * @param {module:twgl/m4.Mat4} matrix A matrix to multiply by.\n * @return {(number[]|TypedArray)} the same array that was passed in\n * @memberOf module:twgl/primitives\n */\nfunction reorientPositions(array, matrix) {\n  applyFuncToV3Array(array, matrix, transformPoint);\n  return array;\n}\n\n/**\n * @typedef {(number[]|TypedArray)} NativeArrayOrTypedArray\n */\n\n/**\n * Reorients arrays by the given matrix. Assumes arrays have\n * names that contains 'pos' could be reoriented as positions,\n * 'binorm' or 'tan' as directions, and 'norm' as normals.\n *\n * @param {Object.<string, NativeArrayOrTypedArray>} arrays The vertices to reorient\n * @param {module:twgl/m4.Mat4} matrix matrix to reorient by.\n * @return {Object.<string, NativeArrayOrTypedArray>} same arrays that were passed in.\n * @memberOf module:twgl/primitives\n */\nfunction reorientVertices(arrays, matrix) {\n  Object.keys(arrays).forEach(function(name) {\n    const array = arrays[name];\n    if (name.indexOf(\"pos\") >= 0) {\n      reorientPositions(array, matrix);\n    } else if (name.indexOf(\"tan\") >= 0 || name.indexOf(\"binorm\") >= 0) {\n      reorientDirections(array, matrix);\n    } else if (name.indexOf(\"norm\") >= 0) {\n      reorientNormals(array, matrix);\n    }\n  });\n  return arrays;\n}\n\n/**\n * Creates XY quad BufferInfo\n *\n * The default with no parameters will return a 2x2 quad with values from -1 to +1.\n * If you want a unit quad with that goes from 0 to 1 you'd call it with\n *\n *     twgl.primitives.createXYQuadBufferInfo(gl, 1, 0.5, 0.5);\n *\n * If you want a unit quad centered above 0,0 you'd call it with\n *\n *     twgl.primitives.createXYQuadBufferInfo(gl, 1, 0, 0.5);\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} [size] the size across the quad. Defaults to 2 which means vertices will go from -1 to +1\n * @param {number} [xOffset] the amount to offset the quad in X\n * @param {number} [yOffset] the amount to offset the quad in Y\n * @return {Object.<string, WebGLBuffer>} the created XY Quad BufferInfo\n * @memberOf module:twgl/primitives\n * @function createXYQuadBuffers\n */\n\n/**\n * Creates XY quad Buffers\n *\n * The default with no parameters will return a 2x2 quad with values from -1 to +1.\n * If you want a unit quad with that goes from 0 to 1 you'd call it with\n *\n *     twgl.primitives.createXYQuadBufferInfo(gl, 1, 0.5, 0.5);\n *\n * If you want a unit quad centered above 0,0 you'd call it with\n *\n *     twgl.primitives.createXYQuadBufferInfo(gl, 1, 0, 0.5);\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} [size] the size across the quad. Defaults to 2 which means vertices will go from -1 to +1\n * @param {number} [xOffset] the amount to offset the quad in X\n * @param {number} [yOffset] the amount to offset the quad in Y\n * @return {module:twgl.BufferInfo} the created XY Quad buffers\n * @memberOf module:twgl/primitives\n * @function createXYQuadBufferInfo\n */\n\n/**\n * Creates XY quad vertices\n *\n * The default with no parameters will return a 2x2 quad with values from -1 to +1.\n * If you want a unit quad with that goes from 0 to 1 you'd call it with\n *\n *     twgl.primitives.createXYQuadVertices(1, 0.5, 0.5);\n *\n * If you want a unit quad centered above 0,0 you'd call it with\n *\n *     twgl.primitives.createXYQuadVertices(1, 0, 0.5);\n *\n * @param {number} [size] the size across the quad. Defaults to 2 which means vertices will go from -1 to +1\n * @param {number} [xOffset] the amount to offset the quad in X\n * @param {number} [yOffset] the amount to offset the quad in Y\n * @return {Object.<string, TypedArray>} the created XY Quad vertices\n * @memberOf module:twgl/primitives\n */\nfunction createXYQuadVertices(size, xOffset, yOffset) {\n  size = size || 2;\n  xOffset = xOffset || 0;\n  yOffset = yOffset || 0;\n  size *= 0.5;\n  return {\n    position: {\n      numComponents: 2,\n      data: [\n        xOffset + -1 * size, yOffset + -1 * size,\n        xOffset +  1 * size, yOffset + -1 * size,\n        xOffset + -1 * size, yOffset +  1 * size,\n        xOffset +  1 * size, yOffset +  1 * size,\n      ],\n    },\n    normal: [\n      0, 0, 1,\n      0, 0, 1,\n      0, 0, 1,\n      0, 0, 1,\n    ],\n    texcoord: [\n      0, 0,\n      1, 0,\n      0, 1,\n      1, 1,\n    ],\n    indices: [ 0, 1, 2, 2, 1, 3 ],\n  };\n}\n\n/**\n * Creates XZ plane BufferInfo.\n *\n * The created plane has position, normal, and texcoord data\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} [width] Width of the plane. Default = 1\n * @param {number} [depth] Depth of the plane. Default = 1\n * @param {number} [subdivisionsWidth] Number of steps across the plane. Default = 1\n * @param {number} [subdivisionsDepth] Number of steps down the plane. Default = 1\n * @param {module:twgl/m4.Mat4} [matrix] A matrix by which to multiply all the vertices.\n * @return {module:twgl.BufferInfo} The created plane BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createPlaneBufferInfo\n */\n\n/**\n * Creates XZ plane buffers.\n *\n * The created plane has position, normal, and texcoord data\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} [width] Width of the plane. Default = 1\n * @param {number} [depth] Depth of the plane. Default = 1\n * @param {number} [subdivisionsWidth] Number of steps across the plane. Default = 1\n * @param {number} [subdivisionsDepth] Number of steps down the plane. Default = 1\n * @param {module:twgl/m4.Mat4} [matrix] A matrix by which to multiply all the vertices.\n * @return {Object.<string, WebGLBuffer>} The created plane buffers.\n * @memberOf module:twgl/primitives\n * @function createPlaneBuffers\n */\n\n/**\n * Creates XZ plane vertices.\n *\n * The created plane has position, normal, and texcoord data\n *\n * @param {number} [width] Width of the plane. Default = 1\n * @param {number} [depth] Depth of the plane. Default = 1\n * @param {number} [subdivisionsWidth] Number of steps across the plane. Default = 1\n * @param {number} [subdivisionsDepth] Number of steps down the plane. Default = 1\n * @param {module:twgl/m4.Mat4} [matrix] A matrix by which to multiply all the vertices.\n * @return {Object.<string, TypedArray>} The created plane vertices.\n * @memberOf module:twgl/primitives\n */\nfunction createPlaneVertices(\n    width,\n    depth,\n    subdivisionsWidth,\n    subdivisionsDepth,\n    matrix) {\n  width = width || 1;\n  depth = depth || 1;\n  subdivisionsWidth = subdivisionsWidth || 1;\n  subdivisionsDepth = subdivisionsDepth || 1;\n  matrix = matrix || identity();\n\n  const numVertices = (subdivisionsWidth + 1) * (subdivisionsDepth + 1);\n  const positions = createAugmentedTypedArray(3, numVertices);\n  const normals = createAugmentedTypedArray(3, numVertices);\n  const texcoords = createAugmentedTypedArray(2, numVertices);\n\n  for (let z = 0; z <= subdivisionsDepth; z++) {\n    for (let x = 0; x <= subdivisionsWidth; x++) {\n      const u = x / subdivisionsWidth;\n      const v = z / subdivisionsDepth;\n      positions.push(\n          width * u - width * 0.5,\n          0,\n          depth * v - depth * 0.5);\n      normals.push(0, 1, 0);\n      texcoords.push(u, v);\n    }\n  }\n\n  const numVertsAcross = subdivisionsWidth + 1;\n  const indices = createAugmentedTypedArray(\n      3, subdivisionsWidth * subdivisionsDepth * 2, Uint16Array);\n\n  for (let z = 0; z < subdivisionsDepth; z++) {  // eslint-disable-line\n    for (let x = 0; x < subdivisionsWidth; x++) {  // eslint-disable-line\n      // Make triangle 1 of quad.\n      indices.push(\n          (z + 0) * numVertsAcross + x,\n          (z + 1) * numVertsAcross + x,\n          (z + 0) * numVertsAcross + x + 1);\n\n      // Make triangle 2 of quad.\n      indices.push(\n          (z + 1) * numVertsAcross + x,\n          (z + 1) * numVertsAcross + x + 1,\n          (z + 0) * numVertsAcross + x + 1);\n    }\n  }\n\n  const arrays = reorientVertices({\n    position: positions,\n    normal: normals,\n    texcoord: texcoords,\n    indices: indices,\n  }, matrix);\n  return arrays;\n}\n\n/**\n * Creates sphere BufferInfo.\n *\n * The created sphere has position, normal, and texcoord data\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius radius of the sphere.\n * @param {number} subdivisionsAxis number of steps around the sphere.\n * @param {number} subdivisionsHeight number of vertically on the sphere.\n * @param {number} [opt_startLatitudeInRadians] where to start the\n *     top of the sphere. Default = 0.\n * @param {number} [opt_endLatitudeInRadians] Where to end the\n *     bottom of the sphere. Default = Math.PI.\n * @param {number} [opt_startLongitudeInRadians] where to start\n *     wrapping the sphere. Default = 0.\n * @param {number} [opt_endLongitudeInRadians] where to end\n *     wrapping the sphere. Default = 2 * Math.PI.\n * @return {module:twgl.BufferInfo} The created sphere BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createSphereBufferInfo\n */\n\n/**\n * Creates sphere buffers.\n *\n * The created sphere has position, normal, and texcoord data\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius radius of the sphere.\n * @param {number} subdivisionsAxis number of steps around the sphere.\n * @param {number} subdivisionsHeight number of vertically on the sphere.\n * @param {number} [opt_startLatitudeInRadians] where to start the\n *     top of the sphere. Default = 0.\n * @param {number} [opt_endLatitudeInRadians] Where to end the\n *     bottom of the sphere. Default = Math.PI.\n * @param {number} [opt_startLongitudeInRadians] where to start\n *     wrapping the sphere. Default = 0.\n * @param {number} [opt_endLongitudeInRadians] where to end\n *     wrapping the sphere. Default = 2 * Math.PI.\n * @return {Object.<string, WebGLBuffer>} The created sphere buffers.\n * @memberOf module:twgl/primitives\n * @function createSphereBuffers\n */\n\n/**\n * Creates sphere vertices.\n *\n * The created sphere has position, normal, and texcoord data\n *\n * @param {number} radius radius of the sphere.\n * @param {number} subdivisionsAxis number of steps around the sphere.\n * @param {number} subdivisionsHeight number of vertically on the sphere.\n * @param {number} [opt_startLatitudeInRadians] where to start the\n *     top of the sphere. Default = 0.\n * @param {number} [opt_endLatitudeInRadians] Where to end the\n *     bottom of the sphere. Default = Math.PI.\n * @param {number} [opt_startLongitudeInRadians] where to start\n *     wrapping the sphere. Default = 0.\n * @param {number} [opt_endLongitudeInRadians] where to end\n *     wrapping the sphere. Default = 2 * Math.PI.\n * @return {Object.<string, TypedArray>} The created sphere vertices.\n * @memberOf module:twgl/primitives\n */\nfunction createSphereVertices(\n    radius,\n    subdivisionsAxis,\n    subdivisionsHeight,\n    opt_startLatitudeInRadians,\n    opt_endLatitudeInRadians,\n    opt_startLongitudeInRadians,\n    opt_endLongitudeInRadians) {\n  if (subdivisionsAxis <= 0 || subdivisionsHeight <= 0) {\n    throw new Error('subdivisionAxis and subdivisionHeight must be > 0');\n  }\n\n  opt_startLatitudeInRadians = opt_startLatitudeInRadians || 0;\n  opt_endLatitudeInRadians = opt_endLatitudeInRadians || Math.PI;\n  opt_startLongitudeInRadians = opt_startLongitudeInRadians || 0;\n  opt_endLongitudeInRadians = opt_endLongitudeInRadians || (Math.PI * 2);\n\n  const latRange = opt_endLatitudeInRadians - opt_startLatitudeInRadians;\n  const longRange = opt_endLongitudeInRadians - opt_startLongitudeInRadians;\n\n  // We are going to generate our sphere by iterating through its\n  // spherical coordinates and generating 2 triangles for each quad on a\n  // ring of the sphere.\n  const numVertices = (subdivisionsAxis + 1) * (subdivisionsHeight + 1);\n  const positions = createAugmentedTypedArray(3, numVertices);\n  const normals   = createAugmentedTypedArray(3, numVertices);\n  const texcoords = createAugmentedTypedArray(2, numVertices);\n\n  // Generate the individual vertices in our vertex buffer.\n  for (let y = 0; y <= subdivisionsHeight; y++) {\n    for (let x = 0; x <= subdivisionsAxis; x++) {\n      // Generate a vertex based on its spherical coordinates\n      const u = x / subdivisionsAxis;\n      const v = y / subdivisionsHeight;\n      const theta = longRange * u + opt_startLongitudeInRadians;\n      const phi = latRange * v + opt_startLatitudeInRadians;\n      const sinTheta = Math.sin(theta);\n      const cosTheta = Math.cos(theta);\n      const sinPhi = Math.sin(phi);\n      const cosPhi = Math.cos(phi);\n      const ux = cosTheta * sinPhi;\n      const uy = cosPhi;\n      const uz = sinTheta * sinPhi;\n      positions.push(radius * ux, radius * uy, radius * uz);\n      normals.push(ux, uy, uz);\n      texcoords.push(1 - u, v);\n    }\n  }\n\n  const numVertsAround = subdivisionsAxis + 1;\n  const indices = createAugmentedTypedArray(3, subdivisionsAxis * subdivisionsHeight * 2, Uint16Array);\n  for (let x = 0; x < subdivisionsAxis; x++) {  // eslint-disable-line\n    for (let y = 0; y < subdivisionsHeight; y++) {  // eslint-disable-line\n      // Make triangle 1 of quad.\n      indices.push(\n          (y + 0) * numVertsAround + x,\n          (y + 0) * numVertsAround + x + 1,\n          (y + 1) * numVertsAround + x);\n\n      // Make triangle 2 of quad.\n      indices.push(\n          (y + 1) * numVertsAround + x,\n          (y + 0) * numVertsAround + x + 1,\n          (y + 1) * numVertsAround + x + 1);\n    }\n  }\n\n  return {\n    position: positions,\n    normal: normals,\n    texcoord: texcoords,\n    indices: indices,\n  };\n}\n\n/**\n * Array of the indices of corners of each face of a cube.\n * @type {Array.<number[]>}\n * @private\n */\nconst CUBE_FACE_INDICES = [\n  [3, 7, 5, 1],  // right\n  [6, 2, 0, 4],  // left\n  [6, 7, 3, 2],  // ??\n  [0, 1, 5, 4],  // ??\n  [7, 6, 4, 5],  // front\n  [2, 3, 1, 0],  // back\n];\n\n/**\n * Creates a BufferInfo for a cube.\n *\n * The cube is created around the origin. (-size / 2, size / 2).\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} [size] width, height and depth of the cube.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createCubeBufferInfo\n */\n\n/**\n * Creates the buffers and indices for a cube.\n *\n * The cube is created around the origin. (-size / 2, size / 2).\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} [size] width, height and depth of the cube.\n * @return {Object.<string, WebGLBuffer>} The created buffers.\n * @memberOf module:twgl/primitives\n * @function createCubeBuffers\n */\n\n/**\n * Creates the vertices and indices for a cube.\n *\n * The cube is created around the origin. (-size / 2, size / 2).\n *\n * @param {number} [size] width, height and depth of the cube.\n * @return {Object.<string, TypedArray>} The created vertices.\n * @memberOf module:twgl/primitives\n */\nfunction createCubeVertices(size) {\n  size = size || 1;\n  const k = size / 2;\n\n  const cornerVertices = [\n    [-k, -k, -k],\n    [+k, -k, -k],\n    [-k, +k, -k],\n    [+k, +k, -k],\n    [-k, -k, +k],\n    [+k, -k, +k],\n    [-k, +k, +k],\n    [+k, +k, +k],\n  ];\n\n  const faceNormals = [\n    [+1, +0, +0],\n    [-1, +0, +0],\n    [+0, +1, +0],\n    [+0, -1, +0],\n    [+0, +0, +1],\n    [+0, +0, -1],\n  ];\n\n  const uvCoords = [\n    [1, 0],\n    [0, 0],\n    [0, 1],\n    [1, 1],\n  ];\n\n  const numVertices = 6 * 4;\n  const positions = createAugmentedTypedArray(3, numVertices);\n  const normals   = createAugmentedTypedArray(3, numVertices);\n  const texcoords = createAugmentedTypedArray(2 , numVertices);\n  const indices   = createAugmentedTypedArray(3, 6 * 2, Uint16Array);\n\n  for (let f = 0; f < 6; ++f) {\n    const faceIndices = CUBE_FACE_INDICES[f];\n    for (let v = 0; v < 4; ++v) {\n      const position = cornerVertices[faceIndices[v]];\n      const normal = faceNormals[f];\n      const uv = uvCoords[v];\n\n      // Each face needs all four vertices because the normals and texture\n      // coordinates are not all the same.\n      positions.push(position);\n      normals.push(normal);\n      texcoords.push(uv);\n\n    }\n    // Two triangles make a square face.\n    const offset = 4 * f;\n    indices.push(offset + 0, offset + 1, offset + 2);\n    indices.push(offset + 0, offset + 2, offset + 3);\n  }\n\n  return {\n    position: positions,\n    normal: normals,\n    texcoord: texcoords,\n    indices: indices,\n  };\n}\n\n/**\n * Creates a BufferInfo for a truncated cone, which is like a cylinder\n * except that it has different top and bottom radii. A truncated cone\n * can also be used to create cylinders and regular cones. The\n * truncated cone will be created centered about the origin, with the\n * y axis as its vertical axis.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} bottomRadius Bottom radius of truncated cone.\n * @param {number} topRadius Top radius of truncated cone.\n * @param {number} height Height of truncated cone.\n * @param {number} radialSubdivisions The number of subdivisions around the\n *     truncated cone.\n * @param {number} verticalSubdivisions The number of subdivisions down the\n *     truncated cone.\n * @param {boolean} [opt_topCap] Create top cap. Default = true.\n * @param {boolean} [opt_bottomCap] Create bottom cap. Default = true.\n * @return {module:twgl.BufferInfo} The created cone BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createTruncatedConeBufferInfo\n */\n\n/**\n * Creates buffers for a truncated cone, which is like a cylinder\n * except that it has different top and bottom radii. A truncated cone\n * can also be used to create cylinders and regular cones. The\n * truncated cone will be created centered about the origin, with the\n * y axis as its vertical axis.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} bottomRadius Bottom radius of truncated cone.\n * @param {number} topRadius Top radius of truncated cone.\n * @param {number} height Height of truncated cone.\n * @param {number} radialSubdivisions The number of subdivisions around the\n *     truncated cone.\n * @param {number} verticalSubdivisions The number of subdivisions down the\n *     truncated cone.\n * @param {boolean} [opt_topCap] Create top cap. Default = true.\n * @param {boolean} [opt_bottomCap] Create bottom cap. Default = true.\n * @return {Object.<string, WebGLBuffer>} The created cone buffers.\n * @memberOf module:twgl/primitives\n * @function createTruncatedConeBuffers\n */\n\n/**\n * Creates vertices for a truncated cone, which is like a cylinder\n * except that it has different top and bottom radii. A truncated cone\n * can also be used to create cylinders and regular cones. The\n * truncated cone will be created centered about the origin, with the\n * y axis as its vertical axis. .\n *\n * @param {number} bottomRadius Bottom radius of truncated cone.\n * @param {number} topRadius Top radius of truncated cone.\n * @param {number} height Height of truncated cone.\n * @param {number} radialSubdivisions The number of subdivisions around the\n *     truncated cone.\n * @param {number} verticalSubdivisions The number of subdivisions down the\n *     truncated cone.\n * @param {boolean} [opt_topCap] Create top cap. Default = true.\n * @param {boolean} [opt_bottomCap] Create bottom cap. Default = true.\n * @return {Object.<string, TypedArray>} The created cone vertices.\n * @memberOf module:twgl/primitives\n */\nfunction createTruncatedConeVertices(\n    bottomRadius,\n    topRadius,\n    height,\n    radialSubdivisions,\n    verticalSubdivisions,\n    opt_topCap,\n    opt_bottomCap) {\n  if (radialSubdivisions < 3) {\n    throw new Error('radialSubdivisions must be 3 or greater');\n  }\n\n  if (verticalSubdivisions < 1) {\n    throw new Error('verticalSubdivisions must be 1 or greater');\n  }\n\n  const topCap = (opt_topCap === undefined) ? true : opt_topCap;\n  const bottomCap = (opt_bottomCap === undefined) ? true : opt_bottomCap;\n\n  const extra = (topCap ? 2 : 0) + (bottomCap ? 2 : 0);\n\n  const numVertices = (radialSubdivisions + 1) * (verticalSubdivisions + 1 + extra);\n  const positions = createAugmentedTypedArray(3, numVertices);\n  const normals   = createAugmentedTypedArray(3, numVertices);\n  const texcoords = createAugmentedTypedArray(2, numVertices);\n  const indices   = createAugmentedTypedArray(3, radialSubdivisions * (verticalSubdivisions + extra / 2) * 2, Uint16Array);\n\n  const vertsAroundEdge = radialSubdivisions + 1;\n\n  // The slant of the cone is constant across its surface\n  const slant = Math.atan2(bottomRadius - topRadius, height);\n  const cosSlant = Math.cos(slant);\n  const sinSlant = Math.sin(slant);\n\n  const start = topCap ? -2 : 0;\n  const end = verticalSubdivisions + (bottomCap ? 2 : 0);\n\n  for (let yy = start; yy <= end; ++yy) {\n    let v = yy / verticalSubdivisions;\n    let y = height * v;\n    let ringRadius;\n    if (yy < 0) {\n      y = 0;\n      v = 1;\n      ringRadius = bottomRadius;\n    } else if (yy > verticalSubdivisions) {\n      y = height;\n      v = 1;\n      ringRadius = topRadius;\n    } else {\n      ringRadius = bottomRadius +\n        (topRadius - bottomRadius) * (yy / verticalSubdivisions);\n    }\n    if (yy === -2 || yy === verticalSubdivisions + 2) {\n      ringRadius = 0;\n      v = 0;\n    }\n    y -= height / 2;\n    for (let ii = 0; ii < vertsAroundEdge; ++ii) {\n      const sin = Math.sin(ii * Math.PI * 2 / radialSubdivisions);\n      const cos = Math.cos(ii * Math.PI * 2 / radialSubdivisions);\n      positions.push(sin * ringRadius, y, cos * ringRadius);\n      if (yy < 0) {\n        normals.push(0, -1, 0);\n      } else if (yy > verticalSubdivisions) {\n        normals.push(0, 1, 0);\n      } else if (ringRadius === 0.0) {\n        normals.push(0, 0, 0);\n      } else {\n        normals.push(sin * cosSlant, sinSlant, cos * cosSlant);\n      }\n      texcoords.push((ii / radialSubdivisions), 1 - v);\n    }\n  }\n\n  for (let yy = 0; yy < verticalSubdivisions + extra; ++yy) {  // eslint-disable-line\n    if (yy === 1 && topCap || yy === verticalSubdivisions + extra - 2 && bottomCap) {\n      continue;\n    }\n    for (let ii = 0; ii < radialSubdivisions; ++ii) {  // eslint-disable-line\n      indices.push(vertsAroundEdge * (yy + 0) + 0 + ii,\n                   vertsAroundEdge * (yy + 0) + 1 + ii,\n                   vertsAroundEdge * (yy + 1) + 1 + ii);\n      indices.push(vertsAroundEdge * (yy + 0) + 0 + ii,\n                   vertsAroundEdge * (yy + 1) + 1 + ii,\n                   vertsAroundEdge * (yy + 1) + 0 + ii);\n    }\n  }\n\n  return {\n    position: positions,\n    normal: normals,\n    texcoord: texcoords,\n    indices: indices,\n  };\n}\n\n/**\n * Expands RLE data\n * @param {number[]} rleData data in format of run-length, x, y, z, run-length, x, y, z\n * @param {number[]} [padding] value to add each entry with.\n * @return {number[]} the expanded rleData\n * @private\n */\nfunction expandRLEData(rleData, padding) {\n  padding = padding || [];\n  const data = [];\n  for (let ii = 0; ii < rleData.length; ii += 4) {\n    const runLength = rleData[ii];\n    const element = rleData.slice(ii + 1, ii + 4);\n    element.push.apply(element, padding);\n    for (let jj = 0; jj < runLength; ++jj) {\n      data.push.apply(data, element);\n    }\n  }\n  return data;\n}\n\n/**\n * Creates 3D 'F' BufferInfo.\n * An 'F' is useful because you can easily tell which way it is oriented.\n * The created 'F' has position, normal, texcoord, and color buffers.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function create3DFBufferInfo\n */\n\n/**\n * Creates 3D 'F' buffers.\n * An 'F' is useful because you can easily tell which way it is oriented.\n * The created 'F' has position, normal, texcoord, and color buffers.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @return {Object.<string, WebGLBuffer>} The created buffers.\n * @memberOf module:twgl/primitives\n * @function create3DFBuffers\n */\n\n/**\n * Creates 3D 'F' vertices.\n * An 'F' is useful because you can easily tell which way it is oriented.\n * The created 'F' has position, normal, texcoord, and color arrays.\n *\n * @return {Object.<string, TypedArray>} The created vertices.\n * @memberOf module:twgl/primitives\n */\nfunction create3DFVertices() {\n\n  const positions = [\n    // left column front\n    0,   0,  0,\n    0, 150,  0,\n    30,   0,  0,\n    0, 150,  0,\n    30, 150,  0,\n    30,   0,  0,\n\n    // top rung front\n    30,   0,  0,\n    30,  30,  0,\n    100,   0,  0,\n    30,  30,  0,\n    100,  30,  0,\n    100,   0,  0,\n\n    // middle rung front\n    30,  60,  0,\n    30,  90,  0,\n    67,  60,  0,\n    30,  90,  0,\n    67,  90,  0,\n    67,  60,  0,\n\n    // left column back\n      0,   0,  30,\n     30,   0,  30,\n      0, 150,  30,\n      0, 150,  30,\n     30,   0,  30,\n     30, 150,  30,\n\n    // top rung back\n     30,   0,  30,\n    100,   0,  30,\n     30,  30,  30,\n     30,  30,  30,\n    100,   0,  30,\n    100,  30,  30,\n\n    // middle rung back\n     30,  60,  30,\n     67,  60,  30,\n     30,  90,  30,\n     30,  90,  30,\n     67,  60,  30,\n     67,  90,  30,\n\n    // top\n      0,   0,   0,\n    100,   0,   0,\n    100,   0,  30,\n      0,   0,   0,\n    100,   0,  30,\n      0,   0,  30,\n\n    // top rung front\n    100,   0,   0,\n    100,  30,   0,\n    100,  30,  30,\n    100,   0,   0,\n    100,  30,  30,\n    100,   0,  30,\n\n    // under top rung\n    30,   30,   0,\n    30,   30,  30,\n    100,  30,  30,\n    30,   30,   0,\n    100,  30,  30,\n    100,  30,   0,\n\n    // between top rung and middle\n    30,   30,   0,\n    30,   60,  30,\n    30,   30,  30,\n    30,   30,   0,\n    30,   60,   0,\n    30,   60,  30,\n\n    // top of middle rung\n    30,   60,   0,\n    67,   60,  30,\n    30,   60,  30,\n    30,   60,   0,\n    67,   60,   0,\n    67,   60,  30,\n\n    // front of middle rung\n    67,   60,   0,\n    67,   90,  30,\n    67,   60,  30,\n    67,   60,   0,\n    67,   90,   0,\n    67,   90,  30,\n\n    // bottom of middle rung.\n    30,   90,   0,\n    30,   90,  30,\n    67,   90,  30,\n    30,   90,   0,\n    67,   90,  30,\n    67,   90,   0,\n\n    // front of bottom\n    30,   90,   0,\n    30,  150,  30,\n    30,   90,  30,\n    30,   90,   0,\n    30,  150,   0,\n    30,  150,  30,\n\n    // bottom\n    0,   150,   0,\n    0,   150,  30,\n    30,  150,  30,\n    0,   150,   0,\n    30,  150,  30,\n    30,  150,   0,\n\n    // left side\n    0,   0,   0,\n    0,   0,  30,\n    0, 150,  30,\n    0,   0,   0,\n    0, 150,  30,\n    0, 150,   0,\n  ];\n\n  const texcoords = [\n    // left column front\n    0.22, 0.19,\n    0.22, 0.79,\n    0.34, 0.19,\n    0.22, 0.79,\n    0.34, 0.79,\n    0.34, 0.19,\n\n    // top rung front\n    0.34, 0.19,\n    0.34, 0.31,\n    0.62, 0.19,\n    0.34, 0.31,\n    0.62, 0.31,\n    0.62, 0.19,\n\n    // middle rung front\n    0.34, 0.43,\n    0.34, 0.55,\n    0.49, 0.43,\n    0.34, 0.55,\n    0.49, 0.55,\n    0.49, 0.43,\n\n    // left column back\n    0, 0,\n    1, 0,\n    0, 1,\n    0, 1,\n    1, 0,\n    1, 1,\n\n    // top rung back\n    0, 0,\n    1, 0,\n    0, 1,\n    0, 1,\n    1, 0,\n    1, 1,\n\n    // middle rung back\n    0, 0,\n    1, 0,\n    0, 1,\n    0, 1,\n    1, 0,\n    1, 1,\n\n    // top\n    0, 0,\n    1, 0,\n    1, 1,\n    0, 0,\n    1, 1,\n    0, 1,\n\n    // top rung front\n    0, 0,\n    1, 0,\n    1, 1,\n    0, 0,\n    1, 1,\n    0, 1,\n\n    // under top rung\n    0, 0,\n    0, 1,\n    1, 1,\n    0, 0,\n    1, 1,\n    1, 0,\n\n    // between top rung and middle\n    0, 0,\n    1, 1,\n    0, 1,\n    0, 0,\n    1, 0,\n    1, 1,\n\n    // top of middle rung\n    0, 0,\n    1, 1,\n    0, 1,\n    0, 0,\n    1, 0,\n    1, 1,\n\n    // front of middle rung\n    0, 0,\n    1, 1,\n    0, 1,\n    0, 0,\n    1, 0,\n    1, 1,\n\n    // bottom of middle rung.\n    0, 0,\n    0, 1,\n    1, 1,\n    0, 0,\n    1, 1,\n    1, 0,\n\n    // front of bottom\n    0, 0,\n    1, 1,\n    0, 1,\n    0, 0,\n    1, 0,\n    1, 1,\n\n    // bottom\n    0, 0,\n    0, 1,\n    1, 1,\n    0, 0,\n    1, 1,\n    1, 0,\n\n    // left side\n    0, 0,\n    0, 1,\n    1, 1,\n    0, 0,\n    1, 1,\n    1, 0,\n  ];\n\n  const normals = expandRLEData([\n    // left column front\n    // top rung front\n    // middle rung front\n    18, 0, 0, 1,\n\n    // left column back\n    // top rung back\n    // middle rung back\n    18, 0, 0, -1,\n\n    // top\n    6, 0, 1, 0,\n\n    // top rung front\n    6, 1, 0, 0,\n\n    // under top rung\n    6, 0, -1, 0,\n\n    // between top rung and middle\n    6, 1, 0, 0,\n\n    // top of middle rung\n    6, 0, 1, 0,\n\n    // front of middle rung\n    6, 1, 0, 0,\n\n    // bottom of middle rung.\n    6, 0, -1, 0,\n\n    // front of bottom\n    6, 1, 0, 0,\n\n    // bottom\n    6, 0, -1, 0,\n\n    // left side\n    6, -1, 0, 0,\n  ]);\n\n  const colors = expandRLEData([\n        // left column front\n        // top rung front\n        // middle rung front\n      18, 200,  70, 120,\n\n        // left column back\n        // top rung back\n        // middle rung back\n      18, 80, 70, 200,\n\n        // top\n      6, 70, 200, 210,\n\n        // top rung front\n      6, 200, 200, 70,\n\n        // under top rung\n      6, 210, 100, 70,\n\n        // between top rung and middle\n      6, 210, 160, 70,\n\n        // top of middle rung\n      6, 70, 180, 210,\n\n        // front of middle rung\n      6, 100, 70, 210,\n\n        // bottom of middle rung.\n      6, 76, 210, 100,\n\n        // front of bottom\n      6, 140, 210, 80,\n\n        // bottom\n      6, 90, 130, 110,\n\n        // left side\n      6, 160, 160, 220,\n  ], [255]);\n\n  const numVerts = positions.length / 3;\n\n  const arrays = {\n    position: createAugmentedTypedArray(3, numVerts),\n    texcoord: createAugmentedTypedArray(2,  numVerts),\n    normal: createAugmentedTypedArray(3, numVerts),\n    color: createAugmentedTypedArray(4, numVerts, Uint8Array),\n    indices: createAugmentedTypedArray(3, numVerts / 3, Uint16Array),\n  };\n\n  arrays.position.push(positions);\n  arrays.texcoord.push(texcoords);\n  arrays.normal.push(normals);\n  arrays.color.push(colors);\n\n  for (let ii = 0; ii < numVerts; ++ii) {\n    arrays.indices.push(ii);\n  }\n\n  return arrays;\n}\n\n/**\n * Creates crescent BufferInfo.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} verticalRadius The vertical radius of the crescent.\n * @param {number} outerRadius The outer radius of the crescent.\n * @param {number} innerRadius The inner radius of the crescent.\n * @param {number} thickness The thickness of the crescent.\n * @param {number} subdivisionsDown number of steps around the crescent.\n * @param {number} [startOffset] Where to start arc. Default 0.\n * @param {number} [endOffset] Where to end arg. Default 1.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createCresentBufferInfo\n */\n\n/**\n * Creates crescent buffers.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} verticalRadius The vertical radius of the crescent.\n * @param {number} outerRadius The outer radius of the crescent.\n * @param {number} innerRadius The inner radius of the crescent.\n * @param {number} thickness The thickness of the crescent.\n * @param {number} subdivisionsDown number of steps around the crescent.\n * @param {number} [startOffset] Where to start arc. Default 0.\n * @param {number} [endOffset] Where to end arg. Default 1.\n * @return {Object.<string, WebGLBuffer>} The created buffers.\n * @memberOf module:twgl/primitives\n * @function createCresentBuffers\n */\n\n/**\n * Creates crescent vertices.\n *\n * @param {number} verticalRadius The vertical radius of the crescent.\n * @param {number} outerRadius The outer radius of the crescent.\n * @param {number} innerRadius The inner radius of the crescent.\n * @param {number} thickness The thickness of the crescent.\n * @param {number} subdivisionsDown number of steps around the crescent.\n * @param {number} [startOffset] Where to start arc. Default 0.\n * @param {number} [endOffset] Where to end arg. Default 1.\n * @return {Object.<string, TypedArray>} The created vertices.\n * @memberOf module:twgl/primitives\n * @function createCresentBuffers\n */\n\n/**\n * Creates crescent BufferInfo.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} verticalRadius The vertical radius of the crescent.\n * @param {number} outerRadius The outer radius of the crescent.\n * @param {number} innerRadius The inner radius of the crescent.\n * @param {number} thickness The thickness of the crescent.\n * @param {number} subdivisionsDown number of steps around the crescent.\n * @param {number} [startOffset] Where to start arc. Default 0.\n * @param {number} [endOffset] Where to end arg. Default 1.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createCrescentBufferInfo\n */\n\n/**\n * Creates crescent buffers.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} verticalRadius The vertical radius of the crescent.\n * @param {number} outerRadius The outer radius of the crescent.\n * @param {number} innerRadius The inner radius of the crescent.\n * @param {number} thickness The thickness of the crescent.\n * @param {number} subdivisionsDown number of steps around the crescent.\n * @param {number} [startOffset] Where to start arc. Default 0.\n * @param {number} [endOffset] Where to end arg. Default 1.\n * @return {Object.<string, WebGLBuffer>} The created buffers.\n * @memberOf module:twgl/primitives\n * @function createCrescentBuffers\n */\n\n/**\n * Creates crescent vertices.\n *\n * @param {number} verticalRadius The vertical radius of the crescent.\n * @param {number} outerRadius The outer radius of the crescent.\n * @param {number} innerRadius The inner radius of the crescent.\n * @param {number} thickness The thickness of the crescent.\n * @param {number} subdivisionsDown number of steps around the crescent.\n * @param {number} [startOffset] Where to start arc. Default 0.\n * @param {number} [endOffset] Where to end arg. Default 1.\n * @return {Object.<string, TypedArray>} The created vertices.\n * @memberOf module:twgl/primitives\n */\n function createCrescentVertices(\n    verticalRadius,\n    outerRadius,\n    innerRadius,\n    thickness,\n    subdivisionsDown,\n    startOffset,\n    endOffset) {\n  if (subdivisionsDown <= 0) {\n    throw new Error('subdivisionDown must be > 0');\n  }\n\n  startOffset = startOffset || 0;\n  endOffset   = endOffset || 1;\n\n  const subdivisionsThick = 2;\n\n  const offsetRange = endOffset - startOffset;\n  const numVertices = (subdivisionsDown + 1) * 2 * (2 + subdivisionsThick);\n  const positions   = createAugmentedTypedArray(3, numVertices);\n  const normals     = createAugmentedTypedArray(3, numVertices);\n  const texcoords   = createAugmentedTypedArray(2, numVertices);\n\n  function lerp(a, b, s) {\n    return a + (b - a) * s;\n  }\n\n  function createArc(arcRadius, x, normalMult, normalAdd, uMult, uAdd) {\n    for (let z = 0; z <= subdivisionsDown; z++) {\n      const uBack = x / (subdivisionsThick - 1);\n      const v = z / subdivisionsDown;\n      const xBack = (uBack - 0.5) * 2;\n      const angle = (startOffset + (v * offsetRange)) * Math.PI;\n      const s = Math.sin(angle);\n      const c = Math.cos(angle);\n      const radius = lerp(verticalRadius, arcRadius, s);\n      const px = xBack * thickness;\n      const py = c * verticalRadius;\n      const pz = s * radius;\n      positions.push(px, py, pz);\n      const n = add(multiply$1([0, s, c], normalMult), normalAdd);\n      normals.push(n);\n      texcoords.push(uBack * uMult + uAdd, v);\n    }\n  }\n\n  // Generate the individual vertices in our vertex buffer.\n  for (let x = 0; x < subdivisionsThick; x++) {\n    const uBack = (x / (subdivisionsThick - 1) - 0.5) * 2;\n    createArc(outerRadius, x, [1, 1, 1], [0,     0, 0], 1, 0);\n    createArc(outerRadius, x, [0, 0, 0], [uBack, 0, 0], 0, 0);\n    createArc(innerRadius, x, [1, 1, 1], [0,     0, 0], 1, 0);\n    createArc(innerRadius, x, [0, 0, 0], [uBack, 0, 0], 0, 1);\n  }\n\n  // Do outer surface.\n  const indices = createAugmentedTypedArray(3, (subdivisionsDown * 2) * (2 + subdivisionsThick), Uint16Array);\n\n  function createSurface(leftArcOffset, rightArcOffset) {\n    for (let z = 0; z < subdivisionsDown; ++z) {\n      // Make triangle 1 of quad.\n      indices.push(\n          leftArcOffset + z + 0,\n          leftArcOffset + z + 1,\n          rightArcOffset + z + 0);\n\n      // Make triangle 2 of quad.\n      indices.push(\n          leftArcOffset + z + 1,\n          rightArcOffset + z + 1,\n          rightArcOffset + z + 0);\n    }\n  }\n\n  const numVerticesDown = subdivisionsDown + 1;\n  // front\n  createSurface(numVerticesDown * 0, numVerticesDown * 4);\n  // right\n  createSurface(numVerticesDown * 5, numVerticesDown * 7);\n  // back\n  createSurface(numVerticesDown * 6, numVerticesDown * 2);\n  // left\n  createSurface(numVerticesDown * 3, numVerticesDown * 1);\n\n  return {\n    position: positions,\n    normal:   normals,\n    texcoord: texcoords,\n    indices:  indices,\n  };\n}\n\n/**\n * Creates cylinder BufferInfo. The cylinder will be created around the origin\n * along the y-axis.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius Radius of cylinder.\n * @param {number} height Height of cylinder.\n * @param {number} radialSubdivisions The number of subdivisions around the cylinder.\n * @param {number} verticalSubdivisions The number of subdivisions down the cylinder.\n * @param {boolean} [topCap] Create top cap. Default = true.\n * @param {boolean} [bottomCap] Create bottom cap. Default = true.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createCylinderBufferInfo\n */\n\n /**\n  * Creates cylinder buffers. The cylinder will be created around the origin\n  * along the y-axis.\n  *\n  * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n  * @param {number} radius Radius of cylinder.\n  * @param {number} height Height of cylinder.\n  * @param {number} radialSubdivisions The number of subdivisions around the cylinder.\n  * @param {number} verticalSubdivisions The number of subdivisions down the cylinder.\n  * @param {boolean} [topCap] Create top cap. Default = true.\n  * @param {boolean} [bottomCap] Create bottom cap. Default = true.\n  * @return {Object.<string, WebGLBuffer>} The created buffers.\n  * @memberOf module:twgl/primitives\n  * @function createCylinderBuffers\n  */\n\n /**\n  * Creates cylinder vertices. The cylinder will be created around the origin\n  * along the y-axis.\n  *\n  * @param {number} radius Radius of cylinder.\n  * @param {number} height Height of cylinder.\n  * @param {number} radialSubdivisions The number of subdivisions around the cylinder.\n  * @param {number} verticalSubdivisions The number of subdivisions down the cylinder.\n  * @param {boolean} [topCap] Create top cap. Default = true.\n  * @param {boolean} [bottomCap] Create bottom cap. Default = true.\n  * @return {Object.<string, TypedArray>} The created vertices.\n  * @memberOf module:twgl/primitives\n  */\nfunction createCylinderVertices(\n    radius,\n    height,\n    radialSubdivisions,\n    verticalSubdivisions,\n    topCap,\n    bottomCap) {\n  return createTruncatedConeVertices(\n      radius,\n      radius,\n      height,\n      radialSubdivisions,\n      verticalSubdivisions,\n      topCap,\n      bottomCap);\n}\n\n/**\n * Creates BufferInfo for a torus\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius radius of center of torus circle.\n * @param {number} thickness radius of torus ring.\n * @param {number} radialSubdivisions The number of subdivisions around the torus.\n * @param {number} bodySubdivisions The number of subdivisions around the body torus.\n * @param {boolean} [startAngle] start angle in radians. Default = 0.\n * @param {boolean} [endAngle] end angle in radians. Default = Math.PI * 2.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createTorusBufferInfo\n */\n\n/**\n * Creates buffers for a torus\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius radius of center of torus circle.\n * @param {number} thickness radius of torus ring.\n * @param {number} radialSubdivisions The number of subdivisions around the torus.\n * @param {number} bodySubdivisions The number of subdivisions around the body torus.\n * @param {boolean} [startAngle] start angle in radians. Default = 0.\n * @param {boolean} [endAngle] end angle in radians. Default = Math.PI * 2.\n * @return {Object.<string, WebGLBuffer>} The created buffers.\n * @memberOf module:twgl/primitives\n * @function createTorusBuffers\n */\n\n/**\n * Creates vertices for a torus\n *\n * @param {number} radius radius of center of torus circle.\n * @param {number} thickness radius of torus ring.\n * @param {number} radialSubdivisions The number of subdivisions around the torus.\n * @param {number} bodySubdivisions The number of subdivisions around the body torus.\n * @param {boolean} [startAngle] start angle in radians. Default = 0.\n * @param {boolean} [endAngle] end angle in radians. Default = Math.PI * 2.\n * @return {Object.<string, TypedArray>} The created vertices.\n * @memberOf module:twgl/primitives\n */\nfunction createTorusVertices(\n    radius,\n    thickness,\n    radialSubdivisions,\n    bodySubdivisions,\n    startAngle,\n    endAngle) {\n  if (radialSubdivisions < 3) {\n    throw new Error('radialSubdivisions must be 3 or greater');\n  }\n\n  if (bodySubdivisions < 3) {\n    throw new Error('verticalSubdivisions must be 3 or greater');\n  }\n\n  startAngle = startAngle || 0;\n  endAngle = endAngle || Math.PI * 2;\n  const range = endAngle - startAngle;\n\n  const radialParts = radialSubdivisions + 1;\n  const bodyParts   = bodySubdivisions + 1;\n  const numVertices = radialParts * bodyParts;\n  const positions   = createAugmentedTypedArray(3, numVertices);\n  const normals     = createAugmentedTypedArray(3, numVertices);\n  const texcoords   = createAugmentedTypedArray(2, numVertices);\n  const indices     = createAugmentedTypedArray(3, (radialSubdivisions) * (bodySubdivisions) * 2, Uint16Array);\n\n  for (let slice = 0; slice < bodyParts; ++slice) {\n    const v = slice / bodySubdivisions;\n    const sliceAngle = v * Math.PI * 2;\n    const sliceSin = Math.sin(sliceAngle);\n    const ringRadius = radius + sliceSin * thickness;\n    const ny = Math.cos(sliceAngle);\n    const y = ny * thickness;\n    for (let ring = 0; ring < radialParts; ++ring) {\n      const u = ring / radialSubdivisions;\n      const ringAngle = startAngle + u * range;\n      const xSin = Math.sin(ringAngle);\n      const zCos = Math.cos(ringAngle);\n      const x = xSin * ringRadius;\n      const z = zCos * ringRadius;\n      const nx = xSin * sliceSin;\n      const nz = zCos * sliceSin;\n      positions.push(x, y, z);\n      normals.push(nx, ny, nz);\n      texcoords.push(u, 1 - v);\n    }\n  }\n\n  for (let slice = 0; slice < bodySubdivisions; ++slice) {  // eslint-disable-line\n    for (let ring = 0; ring < radialSubdivisions; ++ring) {  // eslint-disable-line\n      const nextRingIndex  = 1 + ring;\n      const nextSliceIndex = 1 + slice;\n      indices.push(radialParts * slice          + ring,\n                   radialParts * nextSliceIndex + ring,\n                   radialParts * slice          + nextRingIndex);\n      indices.push(radialParts * nextSliceIndex + ring,\n                   radialParts * nextSliceIndex + nextRingIndex,\n                   radialParts * slice          + nextRingIndex);\n    }\n  }\n\n  return {\n    position: positions,\n    normal:   normals,\n    texcoord: texcoords,\n    indices:  indices,\n  };\n}\n\n\n/**\n * Creates a disc BufferInfo. The disc will be in the xz plane, centered at\n * the origin. When creating, at least 3 divisions, or pie\n * pieces, need to be specified, otherwise the triangles making\n * up the disc will be degenerate. You can also specify the\n * number of radial pieces `stacks`. A value of 1 for\n * stacks will give you a simple disc of pie pieces.  If you\n * want to create an annulus you can set `innerRadius` to a\n * value > 0. Finally, `stackPower` allows you to have the widths\n * increase or decrease as you move away from the center. This\n * is particularly useful when using the disc as a ground plane\n * with a fixed camera such that you don't need the resolution\n * of small triangles near the perimeter. For example, a value\n * of 2 will produce stacks whose outside radius increases with\n * the square of the stack index. A value of 1 will give uniform\n * stacks.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius Radius of the ground plane.\n * @param {number} divisions Number of triangles in the ground plane (at least 3).\n * @param {number} [stacks] Number of radial divisions (default=1).\n * @param {number} [innerRadius] Default 0.\n * @param {number} [stackPower] Power to raise stack size to for decreasing width.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createDiscBufferInfo\n */\n\n/**\n * Creates disc buffers. The disc will be in the xz plane, centered at\n * the origin. When creating, at least 3 divisions, or pie\n * pieces, need to be specified, otherwise the triangles making\n * up the disc will be degenerate. You can also specify the\n * number of radial pieces `stacks`. A value of 1 for\n * stacks will give you a simple disc of pie pieces.  If you\n * want to create an annulus you can set `innerRadius` to a\n * value > 0. Finally, `stackPower` allows you to have the widths\n * increase or decrease as you move away from the center. This\n * is particularly useful when using the disc as a ground plane\n * with a fixed camera such that you don't need the resolution\n * of small triangles near the perimeter. For example, a value\n * of 2 will produce stacks whose outside radius increases with\n * the square of the stack index. A value of 1 will give uniform\n * stacks.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius Radius of the ground plane.\n * @param {number} divisions Number of triangles in the ground plane (at least 3).\n * @param {number} [stacks] Number of radial divisions (default=1).\n * @param {number} [innerRadius] Default 0.\n * @param {number} [stackPower] Power to raise stack size to for decreasing width.\n * @return {Object.<string, WebGLBuffer>} The created buffers.\n * @memberOf module:twgl/primitives\n * @function createDiscBuffers\n */\n\n/**\n * Creates disc vertices. The disc will be in the xz plane, centered at\n * the origin. When creating, at least 3 divisions, or pie\n * pieces, need to be specified, otherwise the triangles making\n * up the disc will be degenerate. You can also specify the\n * number of radial pieces `stacks`. A value of 1 for\n * stacks will give you a simple disc of pie pieces.  If you\n * want to create an annulus you can set `innerRadius` to a\n * value > 0. Finally, `stackPower` allows you to have the widths\n * increase or decrease as you move away from the center. This\n * is particularly useful when using the disc as a ground plane\n * with a fixed camera such that you don't need the resolution\n * of small triangles near the perimeter. For example, a value\n * of 2 will produce stacks whose outside radius increases with\n * the square of the stack index. A value of 1 will give uniform\n * stacks.\n *\n * @param {number} radius Radius of the ground plane.\n * @param {number} divisions Number of triangles in the ground plane (at least 3).\n * @param {number} [stacks] Number of radial divisions (default=1).\n * @param {number} [innerRadius] Default 0.\n * @param {number} [stackPower] Power to raise stack size to for decreasing width.\n * @return {Object.<string, TypedArray>} The created vertices.\n * @memberOf module:twgl/primitives\n */\nfunction createDiscVertices(\n    radius,\n    divisions,\n    stacks,\n    innerRadius,\n    stackPower) {\n  if (divisions < 3) {\n    throw new Error('divisions must be at least 3');\n  }\n\n  stacks = stacks ? stacks : 1;\n  stackPower = stackPower ? stackPower : 1;\n  innerRadius = innerRadius ? innerRadius : 0;\n\n  // Note: We don't share the center vertex because that would\n  // mess up texture coordinates.\n  const numVertices = (divisions + 1) * (stacks + 1);\n\n  const positions = createAugmentedTypedArray(3, numVertices);\n  const normals   = createAugmentedTypedArray(3, numVertices);\n  const texcoords = createAugmentedTypedArray(2, numVertices);\n  const indices   = createAugmentedTypedArray(3, stacks * divisions * 2, Uint16Array);\n\n  let firstIndex = 0;\n  const radiusSpan = radius - innerRadius;\n  const pointsPerStack = divisions + 1;\n\n  // Build the disk one stack at a time.\n  for (let stack = 0; stack <= stacks; ++stack) {\n    const stackRadius = innerRadius + radiusSpan * Math.pow(stack / stacks, stackPower);\n\n    for (let i = 0; i <= divisions; ++i) {\n      const theta = 2.0 * Math.PI * i / divisions;\n      const x = stackRadius * Math.cos(theta);\n      const z = stackRadius * Math.sin(theta);\n\n      positions.push(x, 0, z);\n      normals.push(0, 1, 0);\n      texcoords.push(1 - (i / divisions), stack / stacks);\n      if (stack > 0 && i !== divisions) {\n        // a, b, c and d are the indices of the vertices of a quad.  unless\n        // the current stack is the one closest to the center, in which case\n        // the vertices a and b connect to the center vertex.\n        const a = firstIndex + (i + 1);\n        const b = firstIndex + i;\n        const c = firstIndex + i - pointsPerStack;\n        const d = firstIndex + (i + 1) - pointsPerStack;\n\n        // Make a quad of the vertices a, b, c, d.\n        indices.push(a, b, c);\n        indices.push(a, c, d);\n      }\n    }\n\n    firstIndex += divisions + 1;\n  }\n\n  return {\n    position: positions,\n    normal: normals,\n    texcoord: texcoords,\n    indices: indices,\n  };\n}\n\n/**\n * creates a random integer between 0 and range - 1 inclusive.\n * @param {number} range\n * @return {number} random value between 0 and range - 1 inclusive.\n * @private\n */\nfunction randInt(range) {\n  return Math.random() * range | 0;\n}\n\n/**\n * Used to supply random colors\n * @callback RandomColorFunc\n * @param {number} ndx index of triangle/quad if unindexed or index of vertex if indexed\n * @param {number} channel 0 = red, 1 = green, 2 = blue, 3 = alpha\n * @return {number} a number from 0 to 255\n * @memberOf module:twgl/primitives\n */\n\n/**\n * @typedef {Object} RandomVerticesOptions\n * @property {number} [vertsPerColor] Defaults to 3 for non-indexed vertices\n * @property {module:twgl/primitives.RandomColorFunc} [rand] A function to generate random numbers\n * @memberOf module:twgl/primitives\n */\n\n/**\n * Creates an augmentedTypedArray of random vertex colors.\n * If the vertices are indexed (have an indices array) then will\n * just make random colors. Otherwise assumes they are triangles\n * and makes one random color for every 3 vertices.\n * @param {Object.<string, AugmentedTypedArray>} vertices Vertices as returned from one of the createXXXVertices functions.\n * @param {module:twgl/primitives.RandomVerticesOptions} [options] options.\n * @return {Object.<string, AugmentedTypedArray>} same vertices as passed in with `color` added.\n * @memberOf module:twgl/primitives\n */\nfunction makeRandomVertexColors(vertices, options) {\n  options = options || {};\n  const numElements = vertices.position.numElements;\n  const vColors = createAugmentedTypedArray(4, numElements, Uint8Array);\n  const rand = options.rand || function(ndx, channel) {\n    return channel < 3 ? randInt(256) : 255;\n  };\n  vertices.color = vColors;\n  if (vertices.indices) {\n    // just make random colors if index\n    for (let ii = 0; ii < numElements; ++ii) {\n      vColors.push(rand(ii, 0), rand(ii, 1), rand(ii, 2), rand(ii, 3));\n    }\n  } else {\n    // make random colors per triangle\n    const numVertsPerColor = options.vertsPerColor || 3;\n    const numSets = numElements / numVertsPerColor;\n    for (let ii = 0; ii < numSets; ++ii) {  // eslint-disable-line\n      const color = [rand(ii, 0), rand(ii, 1), rand(ii, 2), rand(ii, 3)];\n      for (let jj = 0; jj < numVertsPerColor; ++jj) {\n        vColors.push(color);\n      }\n    }\n  }\n  return vertices;\n}\n\n/**\n * creates a function that calls fn to create vertices and then\n * creates a buffers for them\n * @private\n */\nfunction createBufferFunc(fn) {\n  return function(gl) {\n    const arrays = fn.apply(this, Array.prototype.slice.call(arguments, 1));\n    return createBuffersFromArrays(gl, arrays);\n  };\n}\n\n/**\n * creates a function that calls fn to create vertices and then\n * creates a bufferInfo object for them\n * @private\n */\nfunction createBufferInfoFunc(fn) {\n  return function(gl) {\n    const arrays = fn.apply(null,  Array.prototype.slice.call(arguments, 1));\n    return createBufferInfoFromArrays(gl, arrays);\n  };\n}\n\nconst arraySpecPropertyNames = [\n  \"numComponents\",\n  \"size\",\n  \"type\",\n  \"normalize\",\n  \"stride\",\n  \"offset\",\n  \"attrib\",\n  \"name\",\n  \"attribName\",\n];\n\n/**\n * Copy elements from one array to another\n *\n * @param {Array|TypedArray} src source array\n * @param {Array|TypedArray} dst dest array\n * @param {number} dstNdx index in dest to copy src\n * @param {number} [offset] offset to add to copied values\n * @private\n */\nfunction copyElements(src, dst, dstNdx, offset) {\n  offset = offset || 0;\n  const length = src.length;\n  for (let ii = 0; ii < length; ++ii) {\n    dst[dstNdx + ii] = src[ii] + offset;\n  }\n}\n\n/**\n * Creates an array of the same time\n *\n * @param {(number[]|ArrayBufferView|module:twgl.FullArraySpec)} srcArray array who's type to copy\n * @param {number} length size of new array\n * @return {(number[]|ArrayBufferView|module:twgl.FullArraySpec)} array with same type as srcArray\n * @private\n */\nfunction createArrayOfSameType(srcArray, length) {\n  const arraySrc = getArray(srcArray);\n  const newArray = new arraySrc.constructor(length);\n  let newArraySpec = newArray;\n  // If it appears to have been augmented make new one augmented\n  if (arraySrc.numComponents && arraySrc.numElements) {\n    augmentTypedArray(newArray, arraySrc.numComponents);\n  }\n  // If it was a full spec make new one a full spec\n  if (srcArray.data) {\n    newArraySpec = {\n      data: newArray,\n    };\n    copyNamedProperties(arraySpecPropertyNames, srcArray, newArraySpec);\n  }\n  return newArraySpec;\n}\n\n/**\n * Concatenates sets of vertices\n *\n * Assumes the vertices match in composition. For example\n * if one set of vertices has positions, normals, and indices\n * all sets of vertices must have positions, normals, and indices\n * and of the same type.\n *\n * Example:\n *\n *      const cubeVertices = twgl.primitives.createCubeVertices(2);\n *      const sphereVertices = twgl.primitives.createSphereVertices(1, 10, 10);\n *      // move the sphere 2 units up\n *      twgl.primitives.reorientVertices(\n *          sphereVertices, twgl.m4.translation([0, 2, 0]));\n *      // merge the sphere with the cube\n *      const cubeSphereVertices = twgl.primitives.concatVertices(\n *          [cubeVertices, sphereVertices]);\n *      // turn them into WebGL buffers and attrib data\n *      const bufferInfo = twgl.createBufferInfoFromArrays(gl, cubeSphereVertices);\n *\n * @param {module:twgl.Arrays[]} arrays Array of arrays of vertices\n * @return {module:twgl.Arrays} The concatenated vertices.\n * @memberOf module:twgl/primitives\n */\nfunction concatVertices(arrayOfArrays) {\n  const names = {};\n  let baseName;\n  // get names of all arrays.\n  // and numElements for each set of vertices\n  for (let ii = 0; ii < arrayOfArrays.length; ++ii) {\n    const arrays = arrayOfArrays[ii];\n    Object.keys(arrays).forEach(function(name) {  // eslint-disable-line\n      if (!names[name]) {\n        names[name] = [];\n      }\n      if (!baseName && name !== 'indices') {\n        baseName = name;\n      }\n      const arrayInfo = arrays[name];\n      const numComponents = getNumComponents(arrayInfo, name);\n      const array = getArray(arrayInfo);\n      const numElements = array.length / numComponents;\n      names[name].push(numElements);\n    });\n  }\n\n  // compute length of combined array\n  // and return one for reference\n  function getLengthOfCombinedArrays(name) {\n    let length = 0;\n    let arraySpec;\n    for (let ii = 0; ii < arrayOfArrays.length; ++ii) {\n      const arrays = arrayOfArrays[ii];\n      const arrayInfo = arrays[name];\n      const array = getArray(arrayInfo);\n      length += array.length;\n      if (!arraySpec || arrayInfo.data) {\n        arraySpec = arrayInfo;\n      }\n    }\n    return {\n      length: length,\n      spec: arraySpec,\n    };\n  }\n\n  function copyArraysToNewArray(name, base, newArray) {\n    let baseIndex = 0;\n    let offset = 0;\n    for (let ii = 0; ii < arrayOfArrays.length; ++ii) {\n      const arrays = arrayOfArrays[ii];\n      const arrayInfo = arrays[name];\n      const array = getArray(arrayInfo);\n      if (name === 'indices') {\n        copyElements(array, newArray, offset, baseIndex);\n        baseIndex += base[ii];\n      } else {\n        copyElements(array, newArray, offset);\n      }\n      offset += array.length;\n    }\n  }\n\n  const base = names[baseName];\n\n  const newArrays = {};\n  Object.keys(names).forEach(function(name) {\n    const info = getLengthOfCombinedArrays(name);\n    const newArraySpec = createArrayOfSameType(info.spec, info.length);\n    copyArraysToNewArray(name, base, getArray(newArraySpec));\n    newArrays[name] = newArraySpec;\n  });\n  return newArrays;\n}\n\n/**\n * Creates a duplicate set of vertices\n *\n * This is useful for calling reorientVertices when you\n * also want to keep the original available\n *\n * @param {module:twgl.Arrays} arrays of vertices\n * @return {module:twgl.Arrays} The duplicated vertices.\n * @memberOf module:twgl/primitives\n */\nfunction duplicateVertices(arrays) {\n  const newArrays = {};\n  Object.keys(arrays).forEach(function(name) {\n    const arraySpec = arrays[name];\n    const srcArray = getArray(arraySpec);\n    const newArraySpec = createArrayOfSameType(arraySpec, srcArray.length);\n    copyElements(srcArray, getArray(newArraySpec), 0);\n    newArrays[name] = newArraySpec;\n  });\n  return newArrays;\n}\n\nconst create3DFBufferInfo = createBufferInfoFunc(create3DFVertices);\nconst create3DFBuffers = createBufferFunc(create3DFVertices);\nconst createCubeBufferInfo = createBufferInfoFunc(createCubeVertices);\nconst createCubeBuffers = createBufferFunc(createCubeVertices);\nconst createPlaneBufferInfo = createBufferInfoFunc(createPlaneVertices);\nconst createPlaneBuffers = createBufferFunc(createPlaneVertices);\nconst createSphereBufferInfo = createBufferInfoFunc(createSphereVertices);\nconst createSphereBuffers = createBufferFunc(createSphereVertices);\nconst createTruncatedConeBufferInfo = createBufferInfoFunc(createTruncatedConeVertices);\nconst createTruncatedConeBuffers = createBufferFunc(createTruncatedConeVertices);\nconst createXYQuadBufferInfo = createBufferInfoFunc(createXYQuadVertices);\nconst createXYQuadBuffers = createBufferFunc(createXYQuadVertices);\nconst createCrescentBufferInfo = createBufferInfoFunc(createCrescentVertices);\nconst createCrescentBuffers = createBufferFunc(createCrescentVertices);\nconst createCylinderBufferInfo = createBufferInfoFunc(createCylinderVertices);\nconst createCylinderBuffers = createBufferFunc(createCylinderVertices);\nconst createTorusBufferInfo = createBufferInfoFunc(createTorusVertices);\nconst createTorusBuffers = createBufferFunc(createTorusVertices);\nconst createDiscBufferInfo = createBufferInfoFunc(createDiscVertices);\nconst createDiscBuffers = createBufferFunc(createDiscVertices);\n\n// these were mis-spelled until 4.12\nconst createCresentBufferInfo = createCrescentBufferInfo;\nconst createCresentBuffers = createCrescentBuffers;\nconst createCresentVertices = createCrescentVertices;\n\nvar primitives = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  create3DFBufferInfo: create3DFBufferInfo,\n  create3DFBuffers: create3DFBuffers,\n  create3DFVertices: create3DFVertices,\n  createAugmentedTypedArray: createAugmentedTypedArray,\n  createCubeBufferInfo: createCubeBufferInfo,\n  createCubeBuffers: createCubeBuffers,\n  createCubeVertices: createCubeVertices,\n  createPlaneBufferInfo: createPlaneBufferInfo,\n  createPlaneBuffers: createPlaneBuffers,\n  createPlaneVertices: createPlaneVertices,\n  createSphereBufferInfo: createSphereBufferInfo,\n  createSphereBuffers: createSphereBuffers,\n  createSphereVertices: createSphereVertices,\n  createTruncatedConeBufferInfo: createTruncatedConeBufferInfo,\n  createTruncatedConeBuffers: createTruncatedConeBuffers,\n  createTruncatedConeVertices: createTruncatedConeVertices,\n  createXYQuadBufferInfo: createXYQuadBufferInfo,\n  createXYQuadBuffers: createXYQuadBuffers,\n  createXYQuadVertices: createXYQuadVertices,\n  createCresentBufferInfo: createCresentBufferInfo,\n  createCresentBuffers: createCresentBuffers,\n  createCresentVertices: createCresentVertices,\n  createCrescentBufferInfo: createCrescentBufferInfo,\n  createCrescentBuffers: createCrescentBuffers,\n  createCrescentVertices: createCrescentVertices,\n  createCylinderBufferInfo: createCylinderBufferInfo,\n  createCylinderBuffers: createCylinderBuffers,\n  createCylinderVertices: createCylinderVertices,\n  createTorusBufferInfo: createTorusBufferInfo,\n  createTorusBuffers: createTorusBuffers,\n  createTorusVertices: createTorusVertices,\n  createDiscBufferInfo: createDiscBufferInfo,\n  createDiscBuffers: createDiscBuffers,\n  createDiscVertices: createDiscVertices,\n  deindexVertices: deindexVertices,\n  flattenNormals: flattenNormals,\n  makeRandomVertexColors: makeRandomVertexColors,\n  reorientDirections: reorientDirections,\n  reorientNormals: reorientNormals,\n  reorientPositions: reorientPositions,\n  reorientVertices: reorientVertices,\n  concatVertices: concatVertices,\n  duplicateVertices: duplicateVertices\n});\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Gets the gl version as a number\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @return {number} version of gl\n * @private\n */\n//function getVersionAsNumber(gl) {\n//  return parseFloat(gl.getParameter(gl.VERSION).substr(6));\n//}\n\n/**\n * Check if context is WebGL 2.0\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @return {bool} true if it's WebGL 2.0\n * @memberOf module:twgl\n */\nfunction isWebGL2(gl) {\n  // This is the correct check but it's slow\n  //  return gl.getParameter(gl.VERSION).indexOf(\"WebGL 2.0\") === 0;\n  // This might also be the correct check but I'm assuming it's slow-ish\n  // return gl instanceof WebGL2RenderingContext;\n  return !!gl.texStorage2D;\n}\n\n/**\n * Check if context is WebGL 1.0\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @return {bool} true if it's WebGL 1.0\n * @memberOf module:twgl\n */\nfunction isWebGL1(gl) {\n  // This is the correct check but it's slow\n  // const version = getVersionAsNumber(gl);\n  // return version <= 1.0 && version > 0.0;  // because as of 2016/5 Edge returns 0.96\n  // This might also be the correct check but I'm assuming it's slow-ish\n  // return gl instanceof WebGLRenderingContext;\n  return !gl.texStorage2D;\n}\n\n/**\n * Gets a string for WebGL enum\n *\n * Note: Several enums are the same. Without more\n * context (which function) it's impossible to always\n * give the correct enum. As it is, for matching values\n * it gives all enums. Checking the WebGL2RenderingContext\n * that means\n *\n *      0     = ZERO | POINT | NONE | NO_ERROR\n *      1     = ONE | LINES | SYNC_FLUSH_COMMANDS_BIT\n *      32777 = BLEND_EQUATION_RGB | BLEND_EQUATION_RGB\n *      36662 = COPY_READ_BUFFER | COPY_READ_BUFFER_BINDING\n *      36663 = COPY_WRITE_BUFFER | COPY_WRITE_BUFFER_BINDING\n *      36006 = FRAMEBUFFER_BINDING | DRAW_FRAMEBUFFER_BINDING\n *\n * It's also not useful for bits really unless you pass in individual bits.\n * In other words\n *\n *     const bits = gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT;\n *     twgl.glEnumToString(gl, bits);  // not going to work\n *\n * Note that some enums only exist on extensions. If you\n * want them to show up you need to pass the extension at least\n * once. For example\n *\n *     const ext = gl.getExtension('WEBGL_compressed_texture_s3tc');\n *     if (ext) {\n *        twgl.glEnumToString(ext, 0);  // just prime the function\n *\n *        ..later..\n *\n *        const internalFormat = ext.COMPRESSED_RGB_S3TC_DXT1_EXT;\n *        console.log(twgl.glEnumToString(gl, internalFormat));\n *\n * Notice I didn't have to pass the extension the second time. This means\n * you can have place that generically gets an enum for texture formats for example.\n * and as long as you primed the function with the extensions\n *\n * If you're using `twgl.addExtensionsToContext` to enable your extensions\n * then twgl will automatically get the extension's enums.\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext or any extension object\n * @param {number} value the value of the enum you want to look up.\n * @return {string} enum string or hex value\n * @memberOf module:twgl\n * @function glEnumToString\n */\nconst glEnumToString = (function() {\n  const haveEnumsForType = {};\n  const enums = {};\n\n  function addEnums(gl) {\n    const type = gl.constructor.name;\n    if (!haveEnumsForType[type]) {\n      for (const key in gl) {\n        if (typeof gl[key] === 'number') {\n          const existing = enums[gl[key]];\n          enums[gl[key]] = existing ? `${existing} | ${key}` : key;\n        }\n      }\n      haveEnumsForType[type] = true;\n    }\n  }\n\n  return function glEnumToString(gl, value) {\n    addEnums(gl);\n    return enums[value] || (typeof value === 'number' ? `0x${value.toString(16)}` : value);\n  };\n}());\n\nvar utils = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  glEnumToString: glEnumToString,\n  isWebGL1: isWebGL1,\n  isWebGL2: isWebGL2\n});\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\nconst defaults$1 = {\n  textureColor: new Uint8Array([128, 192, 255, 255]),\n  textureOptions: {},\n  crossOrigin: undefined,\n};\nconst isArrayBuffer = isArrayBuffer$1;\n\n// Should we make this on demand?\nconst getShared2DContext = function() {\n  let s_ctx;\n  return function getShared2DContext() {\n    s_ctx = s_ctx ||\n        ((typeof document !== 'undefined' && document.createElement)\n          ? document.createElement(\"canvas\").getContext(\"2d\")\n          : null);\n    return s_ctx;\n  };\n}();\n\n// NOTE: Chrome supports 2D canvas in a Worker (behind flag as of v64 but\n//       not only does Firefox NOT support it but Firefox freezes immediately\n//       if you try to create one instead of just returning null and continuing.\n//  : (global.OffscreenCanvas && (new global.OffscreenCanvas(1, 1)).getContext(\"2d\"));  // OffscreenCanvas may not support 2d\n\n// NOTE: We can maybe remove some of the need for the 2d canvas. In WebGL2\n// we can use the various unpack settings. Otherwise we could try using\n// the ability of an ImageBitmap to be cut. Unfortunately cutting an ImageBitmap\n// is async and the current TWGL code expects a non-Async result though that\n// might not be a problem. ImageBitmap though is not available in Edge or Safari\n// as of 2018-01-02\n\n/* PixelFormat */\nconst ALPHA                          = 0x1906;\nconst RGB                            = 0x1907;\nconst RGBA$1                           = 0x1908;\nconst LUMINANCE                      = 0x1909;\nconst LUMINANCE_ALPHA                = 0x190A;\nconst DEPTH_COMPONENT$1                = 0x1902;\nconst DEPTH_STENCIL$1                  = 0x84F9;\n\n/* TextureWrapMode */\n// const REPEAT                         = 0x2901;\n// const MIRRORED_REPEAT                = 0x8370;\nconst CLAMP_TO_EDGE$1                  = 0x812f;\n\n/* TextureMagFilter */\nconst NEAREST                        = 0x2600;\nconst LINEAR$1                         = 0x2601;\n\n/* TextureMinFilter */\n// const NEAREST_MIPMAP_NEAREST         = 0x2700;\n// const LINEAR_MIPMAP_NEAREST          = 0x2701;\n// const NEAREST_MIPMAP_LINEAR          = 0x2702;\n// const LINEAR_MIPMAP_LINEAR           = 0x2703;\n\n/* Texture Target */\nconst TEXTURE_2D$2                     = 0x0de1;\nconst TEXTURE_CUBE_MAP$1               = 0x8513;\nconst TEXTURE_3D$1                     = 0x806f;\nconst TEXTURE_2D_ARRAY$1               = 0x8c1a;\n\n/* Cubemap Targets */\nconst TEXTURE_CUBE_MAP_POSITIVE_X    = 0x8515;\nconst TEXTURE_CUBE_MAP_NEGATIVE_X    = 0x8516;\nconst TEXTURE_CUBE_MAP_POSITIVE_Y    = 0x8517;\nconst TEXTURE_CUBE_MAP_NEGATIVE_Y    = 0x8518;\nconst TEXTURE_CUBE_MAP_POSITIVE_Z    = 0x8519;\nconst TEXTURE_CUBE_MAP_NEGATIVE_Z    = 0x851a;\n\n/* Texture Parameters */\nconst TEXTURE_MIN_FILTER             = 0x2801;\nconst TEXTURE_MAG_FILTER             = 0x2800;\nconst TEXTURE_WRAP_S                 = 0x2802;\nconst TEXTURE_WRAP_T                 = 0x2803;\nconst TEXTURE_WRAP_R                 = 0x8072;\nconst TEXTURE_MIN_LOD                = 0x813a;\nconst TEXTURE_MAX_LOD                = 0x813b;\nconst TEXTURE_BASE_LEVEL             = 0x813c;\nconst TEXTURE_MAX_LEVEL              = 0x813d;\nconst TEXTURE_COMPARE_MODE           = 0x884C;\nconst TEXTURE_COMPARE_FUNC           = 0x884D;\n\n/* Pixel store */\nconst UNPACK_ALIGNMENT                   = 0x0cf5;\nconst UNPACK_ROW_LENGTH                  = 0x0cf2;\nconst UNPACK_IMAGE_HEIGHT                = 0x806e;\nconst UNPACK_SKIP_PIXELS                 = 0x0cf4;\nconst UNPACK_SKIP_ROWS                   = 0x0cf3;\nconst UNPACK_SKIP_IMAGES                 = 0x806d;\nconst UNPACK_COLORSPACE_CONVERSION_WEBGL = 0x9243;\nconst UNPACK_PREMULTIPLY_ALPHA_WEBGL     = 0x9241;\nconst UNPACK_FLIP_Y_WEBGL                = 0x9240;\n\nconst R8                           = 0x8229;\nconst R8_SNORM                     = 0x8F94;\nconst R16F                         = 0x822D;\nconst R32F                         = 0x822E;\nconst R8UI                         = 0x8232;\nconst R8I                          = 0x8231;\nconst RG16UI                       = 0x823A;\nconst RG16I                        = 0x8239;\nconst RG32UI                       = 0x823C;\nconst RG32I                        = 0x823B;\nconst RG8                          = 0x822B;\nconst RG8_SNORM                    = 0x8F95;\nconst RG16F                        = 0x822F;\nconst RG32F                        = 0x8230;\nconst RG8UI                        = 0x8238;\nconst RG8I                         = 0x8237;\nconst R16UI                        = 0x8234;\nconst R16I                         = 0x8233;\nconst R32UI                        = 0x8236;\nconst R32I                         = 0x8235;\nconst RGB8                         = 0x8051;\nconst SRGB8                        = 0x8C41;\nconst RGB565$1                       = 0x8D62;\nconst RGB8_SNORM                   = 0x8F96;\nconst R11F_G11F_B10F               = 0x8C3A;\nconst RGB9_E5                      = 0x8C3D;\nconst RGB16F                       = 0x881B;\nconst RGB32F                       = 0x8815;\nconst RGB8UI                       = 0x8D7D;\nconst RGB8I                        = 0x8D8F;\nconst RGB16UI                      = 0x8D77;\nconst RGB16I                       = 0x8D89;\nconst RGB32UI                      = 0x8D71;\nconst RGB32I                       = 0x8D83;\nconst RGBA8                        = 0x8058;\nconst SRGB8_ALPHA8                 = 0x8C43;\nconst RGBA8_SNORM                  = 0x8F97;\nconst RGB5_A1$1                      = 0x8057;\nconst RGBA4$1                        = 0x8056;\nconst RGB10_A2                     = 0x8059;\nconst RGBA16F                      = 0x881A;\nconst RGBA32F                      = 0x8814;\nconst RGBA8UI                      = 0x8D7C;\nconst RGBA8I                       = 0x8D8E;\nconst RGB10_A2UI                   = 0x906F;\nconst RGBA16UI                     = 0x8D76;\nconst RGBA16I                      = 0x8D88;\nconst RGBA32I                      = 0x8D82;\nconst RGBA32UI                     = 0x8D70;\n\nconst DEPTH_COMPONENT16$1            = 0x81A5;\nconst DEPTH_COMPONENT24$1            = 0x81A6;\nconst DEPTH_COMPONENT32F$1           = 0x8CAC;\nconst DEPTH32F_STENCIL8$1            = 0x8CAD;\nconst DEPTH24_STENCIL8$1             = 0x88F0;\n\n/* DataType */\nconst BYTE                         = 0x1400;\nconst UNSIGNED_BYTE$1                = 0x1401;\nconst SHORT                        = 0x1402;\nconst UNSIGNED_SHORT$1               = 0x1403;\nconst INT$1                          = 0x1404;\nconst UNSIGNED_INT$1                 = 0x1405;\nconst FLOAT$1                        = 0x1406;\nconst UNSIGNED_SHORT_4_4_4_4       = 0x8033;\nconst UNSIGNED_SHORT_5_5_5_1       = 0x8034;\nconst UNSIGNED_SHORT_5_6_5         = 0x8363;\nconst HALF_FLOAT                   = 0x140B;\nconst HALF_FLOAT_OES               = 0x8D61;  // Thanks Khronos for making this different >:(\nconst UNSIGNED_INT_2_10_10_10_REV  = 0x8368;\nconst UNSIGNED_INT_10F_11F_11F_REV = 0x8C3B;\nconst UNSIGNED_INT_5_9_9_9_REV     = 0x8C3E;\nconst FLOAT_32_UNSIGNED_INT_24_8_REV = 0x8DAD;\nconst UNSIGNED_INT_24_8            = 0x84FA;\n\nconst RG                           = 0x8227;\nconst RG_INTEGER                   = 0x8228;\nconst RED                          = 0x1903;\nconst RED_INTEGER                  = 0x8D94;\nconst RGB_INTEGER                  = 0x8D98;\nconst RGBA_INTEGER                 = 0x8D99;\n\nconst formatInfo = {};\n{\n  // NOTE: this is named `numColorComponents` vs `numComponents` so we can let Uglify mangle\n  // the name.\n  const f = formatInfo;\n  f[ALPHA]           = { numColorComponents: 1, };\n  f[LUMINANCE]       = { numColorComponents: 1, };\n  f[LUMINANCE_ALPHA] = { numColorComponents: 2, };\n  f[RGB]             = { numColorComponents: 3, };\n  f[RGBA$1]            = { numColorComponents: 4, };\n  f[RED]             = { numColorComponents: 1, };\n  f[RED_INTEGER]     = { numColorComponents: 1, };\n  f[RG]              = { numColorComponents: 2, };\n  f[RG_INTEGER]      = { numColorComponents: 2, };\n  f[RGB]             = { numColorComponents: 3, };\n  f[RGB_INTEGER]     = { numColorComponents: 3, };\n  f[RGBA$1]            = { numColorComponents: 4, };\n  f[RGBA_INTEGER]    = { numColorComponents: 4, };\n  f[DEPTH_COMPONENT$1] = { numColorComponents: 1, };\n  f[DEPTH_STENCIL$1]   = { numColorComponents: 2, };\n}\n\n/**\n * @typedef {Object} TextureFormatDetails\n * @property {number} textureFormat format to pass texImage2D and similar functions.\n * @property {boolean} colorRenderable true if you can render to this format of texture.\n * @property {boolean} textureFilterable true if you can filter the texture, false if you can ony use `NEAREST`.\n * @property {number[]} type Array of possible types you can pass to texImage2D and similar function\n * @property {Object.<number,number>} bytesPerElementMap A map of types to bytes per element\n * @private\n */\n\nlet s_textureInternalFormatInfo;\nfunction getTextureInternalFormatInfo(internalFormat) {\n  if (!s_textureInternalFormatInfo) {\n    // NOTE: these properties need unique names so we can let Uglify mangle the name.\n    const t = {};\n    // unsized formats\n    t[ALPHA]              = { textureFormat: ALPHA,           colorRenderable: true,  textureFilterable: true,  bytesPerElement: [1, 2, 2, 4],        type: [UNSIGNED_BYTE$1, HALF_FLOAT, HALF_FLOAT_OES, FLOAT$1], };\n    t[LUMINANCE]          = { textureFormat: LUMINANCE,       colorRenderable: true,  textureFilterable: true,  bytesPerElement: [1, 2, 2, 4],        type: [UNSIGNED_BYTE$1, HALF_FLOAT, HALF_FLOAT_OES, FLOAT$1], };\n    t[LUMINANCE_ALPHA]    = { textureFormat: LUMINANCE_ALPHA, colorRenderable: true,  textureFilterable: true,  bytesPerElement: [2, 4, 4, 8],        type: [UNSIGNED_BYTE$1, HALF_FLOAT, HALF_FLOAT_OES, FLOAT$1], };\n    t[RGB]                = { textureFormat: RGB,             colorRenderable: true,  textureFilterable: true,  bytesPerElement: [3, 6, 6, 12, 2],    type: [UNSIGNED_BYTE$1, HALF_FLOAT, HALF_FLOAT_OES, FLOAT$1, UNSIGNED_SHORT_5_6_5], };\n    t[RGBA$1]               = { textureFormat: RGBA$1,            colorRenderable: true,  textureFilterable: true,  bytesPerElement: [4, 8, 8, 16, 2, 2], type: [UNSIGNED_BYTE$1, HALF_FLOAT, HALF_FLOAT_OES, FLOAT$1, UNSIGNED_SHORT_4_4_4_4, UNSIGNED_SHORT_5_5_5_1], };\n    t[DEPTH_COMPONENT$1]    = { textureFormat: DEPTH_COMPONENT$1, colorRenderable: true,  textureFilterable: false, bytesPerElement: [2, 4],              type: [UNSIGNED_INT$1, UNSIGNED_SHORT$1], };\n\n    // sized formats\n    t[R8]                 = { textureFormat: RED,             colorRenderable: true,  textureFilterable: true,  bytesPerElement: [1],        type: [UNSIGNED_BYTE$1], };\n    t[R8_SNORM]           = { textureFormat: RED,             colorRenderable: false, textureFilterable: true,  bytesPerElement: [1],        type: [BYTE], };\n    t[R16F]               = { textureFormat: RED,             colorRenderable: false, textureFilterable: true,  bytesPerElement: [4, 2],     type: [FLOAT$1, HALF_FLOAT], };\n    t[R32F]               = { textureFormat: RED,             colorRenderable: false, textureFilterable: false, bytesPerElement: [4],        type: [FLOAT$1], };\n    t[R8UI]               = { textureFormat: RED_INTEGER,     colorRenderable: true,  textureFilterable: false, bytesPerElement: [1],        type: [UNSIGNED_BYTE$1], };\n    t[R8I]                = { textureFormat: RED_INTEGER,     colorRenderable: true,  textureFilterable: false, bytesPerElement: [1],        type: [BYTE], };\n    t[R16UI]              = { textureFormat: RED_INTEGER,     colorRenderable: true,  textureFilterable: false, bytesPerElement: [2],        type: [UNSIGNED_SHORT$1], };\n    t[R16I]               = { textureFormat: RED_INTEGER,     colorRenderable: true,  textureFilterable: false, bytesPerElement: [2],        type: [SHORT], };\n    t[R32UI]              = { textureFormat: RED_INTEGER,     colorRenderable: true,  textureFilterable: false, bytesPerElement: [4],        type: [UNSIGNED_INT$1], };\n    t[R32I]               = { textureFormat: RED_INTEGER,     colorRenderable: true,  textureFilterable: false, bytesPerElement: [4],        type: [INT$1], };\n    t[RG8]                = { textureFormat: RG,              colorRenderable: true,  textureFilterable: true,  bytesPerElement: [2],        type: [UNSIGNED_BYTE$1], };\n    t[RG8_SNORM]          = { textureFormat: RG,              colorRenderable: false, textureFilterable: true,  bytesPerElement: [2],        type: [BYTE], };\n    t[RG16F]              = { textureFormat: RG,              colorRenderable: false, textureFilterable: true,  bytesPerElement: [8, 4],     type: [FLOAT$1, HALF_FLOAT], };\n    t[RG32F]              = { textureFormat: RG,              colorRenderable: false, textureFilterable: false, bytesPerElement: [8],        type: [FLOAT$1], };\n    t[RG8UI]              = { textureFormat: RG_INTEGER,      colorRenderable: true,  textureFilterable: false, bytesPerElement: [2],        type: [UNSIGNED_BYTE$1], };\n    t[RG8I]               = { textureFormat: RG_INTEGER,      colorRenderable: true,  textureFilterable: false, bytesPerElement: [2],        type: [BYTE], };\n    t[RG16UI]             = { textureFormat: RG_INTEGER,      colorRenderable: true,  textureFilterable: false, bytesPerElement: [4],        type: [UNSIGNED_SHORT$1], };\n    t[RG16I]              = { textureFormat: RG_INTEGER,      colorRenderable: true,  textureFilterable: false, bytesPerElement: [4],        type: [SHORT], };\n    t[RG32UI]             = { textureFormat: RG_INTEGER,      colorRenderable: true,  textureFilterable: false, bytesPerElement: [8],        type: [UNSIGNED_INT$1], };\n    t[RG32I]              = { textureFormat: RG_INTEGER,      colorRenderable: true,  textureFilterable: false, bytesPerElement: [8],        type: [INT$1], };\n    t[RGB8]               = { textureFormat: RGB,             colorRenderable: true,  textureFilterable: true,  bytesPerElement: [3],        type: [UNSIGNED_BYTE$1], };\n    t[SRGB8]              = { textureFormat: RGB,             colorRenderable: false, textureFilterable: true,  bytesPerElement: [3],        type: [UNSIGNED_BYTE$1], };\n    t[RGB565$1]             = { textureFormat: RGB,             colorRenderable: true,  textureFilterable: true,  bytesPerElement: [3, 2],     type: [UNSIGNED_BYTE$1, UNSIGNED_SHORT_5_6_5], };\n    t[RGB8_SNORM]         = { textureFormat: RGB,             colorRenderable: false, textureFilterable: true,  bytesPerElement: [3],        type: [BYTE], };\n    t[R11F_G11F_B10F]     = { textureFormat: RGB,             colorRenderable: false, textureFilterable: true,  bytesPerElement: [12, 6, 4], type: [FLOAT$1, HALF_FLOAT, UNSIGNED_INT_10F_11F_11F_REV], };\n    t[RGB9_E5]            = { textureFormat: RGB,             colorRenderable: false, textureFilterable: true,  bytesPerElement: [12, 6, 4], type: [FLOAT$1, HALF_FLOAT, UNSIGNED_INT_5_9_9_9_REV], };\n    t[RGB16F]             = { textureFormat: RGB,             colorRenderable: false, textureFilterable: true,  bytesPerElement: [12, 6],    type: [FLOAT$1, HALF_FLOAT], };\n    t[RGB32F]             = { textureFormat: RGB,             colorRenderable: false, textureFilterable: false, bytesPerElement: [12],       type: [FLOAT$1], };\n    t[RGB8UI]             = { textureFormat: RGB_INTEGER,     colorRenderable: false, textureFilterable: false, bytesPerElement: [3],        type: [UNSIGNED_BYTE$1], };\n    t[RGB8I]              = { textureFormat: RGB_INTEGER,     colorRenderable: false, textureFilterable: false, bytesPerElement: [3],        type: [BYTE], };\n    t[RGB16UI]            = { textureFormat: RGB_INTEGER,     colorRenderable: false, textureFilterable: false, bytesPerElement: [6],        type: [UNSIGNED_SHORT$1], };\n    t[RGB16I]             = { textureFormat: RGB_INTEGER,     colorRenderable: false, textureFilterable: false, bytesPerElement: [6],        type: [SHORT], };\n    t[RGB32UI]            = { textureFormat: RGB_INTEGER,     colorRenderable: false, textureFilterable: false, bytesPerElement: [12],       type: [UNSIGNED_INT$1], };\n    t[RGB32I]             = { textureFormat: RGB_INTEGER,     colorRenderable: false, textureFilterable: false, bytesPerElement: [12],       type: [INT$1], };\n    t[RGBA8]              = { textureFormat: RGBA$1,            colorRenderable: true,  textureFilterable: true,  bytesPerElement: [4],        type: [UNSIGNED_BYTE$1], };\n    t[SRGB8_ALPHA8]       = { textureFormat: RGBA$1,            colorRenderable: true,  textureFilterable: true,  bytesPerElement: [4],        type: [UNSIGNED_BYTE$1], };\n    t[RGBA8_SNORM]        = { textureFormat: RGBA$1,            colorRenderable: false, textureFilterable: true,  bytesPerElement: [4],        type: [BYTE], };\n    t[RGB5_A1$1]            = { textureFormat: RGBA$1,            colorRenderable: true,  textureFilterable: true,  bytesPerElement: [4, 2, 4],  type: [UNSIGNED_BYTE$1, UNSIGNED_SHORT_5_5_5_1, UNSIGNED_INT_2_10_10_10_REV], };\n    t[RGBA4$1]              = { textureFormat: RGBA$1,            colorRenderable: true,  textureFilterable: true,  bytesPerElement: [4, 2],     type: [UNSIGNED_BYTE$1, UNSIGNED_SHORT_4_4_4_4], };\n    t[RGB10_A2]           = { textureFormat: RGBA$1,            colorRenderable: true,  textureFilterable: true,  bytesPerElement: [4],        type: [UNSIGNED_INT_2_10_10_10_REV], };\n    t[RGBA16F]            = { textureFormat: RGBA$1,            colorRenderable: false, textureFilterable: true,  bytesPerElement: [16, 8],    type: [FLOAT$1, HALF_FLOAT], };\n    t[RGBA32F]            = { textureFormat: RGBA$1,            colorRenderable: false, textureFilterable: false, bytesPerElement: [16],       type: [FLOAT$1], };\n    t[RGBA8UI]            = { textureFormat: RGBA_INTEGER,    colorRenderable: true,  textureFilterable: false, bytesPerElement: [4],        type: [UNSIGNED_BYTE$1], };\n    t[RGBA8I]             = { textureFormat: RGBA_INTEGER,    colorRenderable: true,  textureFilterable: false, bytesPerElement: [4],        type: [BYTE], };\n    t[RGB10_A2UI]         = { textureFormat: RGBA_INTEGER,    colorRenderable: true,  textureFilterable: false, bytesPerElement: [4],        type: [UNSIGNED_INT_2_10_10_10_REV], };\n    t[RGBA16UI]           = { textureFormat: RGBA_INTEGER,    colorRenderable: true,  textureFilterable: false, bytesPerElement: [8],        type: [UNSIGNED_SHORT$1], };\n    t[RGBA16I]            = { textureFormat: RGBA_INTEGER,    colorRenderable: true,  textureFilterable: false, bytesPerElement: [8],        type: [SHORT], };\n    t[RGBA32I]            = { textureFormat: RGBA_INTEGER,    colorRenderable: true,  textureFilterable: false, bytesPerElement: [16],       type: [INT$1], };\n    t[RGBA32UI]           = { textureFormat: RGBA_INTEGER,    colorRenderable: true,  textureFilterable: false, bytesPerElement: [16],       type: [UNSIGNED_INT$1], };\n    // Sized Internal\n    t[DEPTH_COMPONENT16$1]  = { textureFormat: DEPTH_COMPONENT$1, colorRenderable: true,  textureFilterable: false, bytesPerElement: [2, 4],     type: [UNSIGNED_SHORT$1, UNSIGNED_INT$1], };\n    t[DEPTH_COMPONENT24$1]  = { textureFormat: DEPTH_COMPONENT$1, colorRenderable: true,  textureFilterable: false, bytesPerElement: [4],        type: [UNSIGNED_INT$1], };\n    t[DEPTH_COMPONENT32F$1] = { textureFormat: DEPTH_COMPONENT$1, colorRenderable: true,  textureFilterable: false, bytesPerElement: [4],        type: [FLOAT$1], };\n    t[DEPTH24_STENCIL8$1]   = { textureFormat: DEPTH_STENCIL$1,   colorRenderable: true,  textureFilterable: false, bytesPerElement: [4],        type: [UNSIGNED_INT_24_8], };\n    t[DEPTH32F_STENCIL8$1]  = { textureFormat: DEPTH_STENCIL$1,   colorRenderable: true,  textureFilterable: false, bytesPerElement: [4],        type: [FLOAT_32_UNSIGNED_INT_24_8_REV], };\n\n    Object.keys(t).forEach(function(internalFormat) {\n      const info = t[internalFormat];\n      info.bytesPerElementMap = {};\n      info.bytesPerElement.forEach(function(bytesPerElement, ndx) {\n        const type = info.type[ndx];\n        info.bytesPerElementMap[type] = bytesPerElement;\n      });\n    });\n    s_textureInternalFormatInfo = t;\n  }\n  return s_textureInternalFormatInfo[internalFormat];\n}\n\n/**\n * Gets the number of bytes per element for a given internalFormat / type\n * @param {number} internalFormat The internalFormat parameter from texImage2D etc..\n * @param {number} type The type parameter for texImage2D etc..\n * @return {number} the number of bytes per element for the given internalFormat, type combo\n * @memberOf module:twgl/textures\n */\nfunction getBytesPerElementForInternalFormat(internalFormat, type) {\n  const info = getTextureInternalFormatInfo(internalFormat);\n  if (!info) {\n    throw \"unknown internal format\";\n  }\n  const bytesPerElement = info.bytesPerElementMap[type];\n  if (bytesPerElement === undefined) {\n    throw \"unknown internal format\";\n  }\n  return bytesPerElement;\n}\n\n/**\n * Info related to a specific texture internalFormat as returned\n * from {@link module:twgl/textures.getFormatAndTypeForInternalFormat}.\n *\n * @typedef {Object} TextureFormatInfo\n * @property {number} format Format to pass to texImage2D and related functions\n * @property {number} type Type to pass to texImage2D and related functions\n * @memberOf module:twgl/textures\n */\n\n/**\n * Gets the format and type for a given internalFormat\n *\n * @param {number} internalFormat The internal format\n * @return {module:twgl/textures.TextureFormatInfo} the corresponding format and type,\n * @memberOf module:twgl/textures\n */\nfunction getFormatAndTypeForInternalFormat(internalFormat) {\n  const info = getTextureInternalFormatInfo(internalFormat);\n  if (!info) {\n    throw \"unknown internal format\";\n  }\n  return {\n    format: info.textureFormat,\n    type: info.type[0],\n  };\n}\n\n/**\n * Returns true if value is power of 2\n * @param {number} value number to check.\n * @return true if value is power of 2\n * @private\n */\nfunction isPowerOf2(value) {\n  return (value & (value - 1)) === 0;\n}\n\n/**\n * Gets whether or not we can generate mips for the given\n * internal format.\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {number} width The width parameter from texImage2D etc..\n * @param {number} height The height parameter from texImage2D etc..\n * @param {number} internalFormat The internalFormat parameter from texImage2D etc..\n * @return {boolean} true if we can generate mips\n * @memberOf module:twgl/textures\n */\nfunction canGenerateMipmap(gl, width, height, internalFormat) {\n  if (!isWebGL2(gl)) {\n    return isPowerOf2(width) && isPowerOf2(height);\n  }\n  const info = getTextureInternalFormatInfo(internalFormat);\n  if (!info) {\n    throw \"unknown internal format\";\n  }\n  return info.colorRenderable && info.textureFilterable;\n}\n\n/**\n * Gets whether or not we can generate mips for the given format\n * @param {number} internalFormat The internalFormat parameter from texImage2D etc..\n * @return {boolean} true if we can generate mips\n * @memberOf module:twgl/textures\n */\nfunction canFilter(internalFormat) {\n  const info = getTextureInternalFormatInfo(internalFormat);\n  if (!info) {\n    throw \"unknown internal format\";\n  }\n  return info.textureFilterable;\n}\n\n/**\n * Gets the number of components for a given image format.\n * @param {number} format the format.\n * @return {number} the number of components for the format.\n * @memberOf module:twgl/textures\n */\nfunction getNumComponentsForFormat(format) {\n  const info = formatInfo[format];\n  if (!info) {\n    throw \"unknown format: \" + format;\n  }\n  return info.numColorComponents;\n}\n\n/**\n * Gets the texture type for a given array type.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @return {number} the gl texture type\n * @private\n */\nfunction getTextureTypeForArrayType(gl, src, defaultType) {\n  if (isArrayBuffer(src)) {\n    return getGLTypeForTypedArray(src);\n  }\n  return defaultType || UNSIGNED_BYTE$1;\n}\n\nfunction guessDimensions(gl, target, width, height, numElements) {\n  if (numElements % 1 !== 0) {\n    throw \"can't guess dimensions\";\n  }\n  if (!width && !height) {\n    const size = Math.sqrt(numElements / (target === TEXTURE_CUBE_MAP$1 ? 6 : 1));\n    if (size % 1 === 0) {\n      width = size;\n      height = size;\n    } else {\n      width = numElements;\n      height = 1;\n    }\n  } else if (!height) {\n    height = numElements / width;\n    if (height % 1) {\n      throw \"can't guess dimensions\";\n    }\n  } else if (!width) {\n    width = numElements / height;\n    if (width % 1) {\n      throw \"can't guess dimensions\";\n    }\n  }\n  return {\n    width: width,\n    height: height,\n  };\n}\n\n/**\n * Sets the default texture color.\n *\n * The default texture color is used when loading textures from\n * urls. Because the URL will be loaded async we'd like to be\n * able to use the texture immediately. By putting a 1x1 pixel\n * color in the texture we can start using the texture before\n * the URL has loaded.\n *\n * @param {number[]} color Array of 4 values in the range 0 to 1\n * @deprecated see {@link module:twgl.setDefaults}\n * @memberOf module:twgl/textures\n */\nfunction setDefaultTextureColor(color) {\n  defaults$1.textureColor = new Uint8Array([color[0] * 255, color[1] * 255, color[2] * 255, color[3] * 255]);\n}\n\nfunction setDefaults$1(newDefaults) {\n  copyExistingProperties(newDefaults, defaults$1);\n  if (newDefaults.textureColor) {\n    setDefaultTextureColor(newDefaults.textureColor);\n  }\n}\n\n/**\n * A function to generate the source for a texture.\n * @callback TextureFunc\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @param {module:twgl.TextureOptions} options the texture options\n * @return {*} Returns any of the things documented for `src` for {@link module:twgl.TextureOptions}.\n * @memberOf module:twgl\n */\n\n/**\n * Texture options passed to most texture functions. Each function will use whatever options\n * are appropriate for its needs. This lets you pass the same options to all functions.\n *\n * Note: A `TexImageSource` is defined in the WebGL spec as a `HTMLImageElement`, `HTMLVideoElement`,\n * `HTMLCanvasElement`, `ImageBitmap`, or `ImageData`.\n *\n * @typedef {Object} TextureOptions\n * @property {number} [target] the type of texture `gl.TEXTURE_2D` or `gl.TEXTURE_CUBE_MAP`. Defaults to `gl.TEXTURE_2D`.\n * @property {number} [level] the mip level to affect. Defaults to 0. Note, if set auto will be considered false unless explicitly set to true.\n * @property {number} [width] the width of the texture. Only used if src is an array or typed array or null.\n * @property {number} [height] the height of a texture. Only used if src is an array or typed array or null.\n * @property {number} [depth] the depth of a texture. Only used if src is an array or type array or null and target is `TEXTURE_3D` .\n * @property {number} [min] the min filter setting (eg. `gl.LINEAR`). Defaults to `gl.NEAREST_MIPMAP_LINEAR`\n *     or if texture is not a power of 2 on both dimensions then defaults to `gl.LINEAR`.\n * @property {number} [mag] the mag filter setting (eg. `gl.LINEAR`). Defaults to `gl.LINEAR`\n * @property {number} [minMag] both the min and mag filter settings.\n * @property {number} [internalFormat] internal format for texture. Defaults to `gl.RGBA`\n * @property {number} [format] format for texture. Defaults to `gl.RGBA`.\n * @property {number} [type] type for texture. Defaults to `gl.UNSIGNED_BYTE` unless `src` is ArrayBufferView. If `src`\n *     is ArrayBufferView defaults to type that matches ArrayBufferView type.\n * @property {number} [wrap] Texture wrapping for both S and T (and R if TEXTURE_3D or WebGLSampler). Defaults to `gl.REPEAT` for 2D unless src is WebGL1 and src not npot and `gl.CLAMP_TO_EDGE` for cube\n * @property {number} [wrapS] Texture wrapping for S. Defaults to `gl.REPEAT` and `gl.CLAMP_TO_EDGE` for cube. If set takes precedence over `wrap`.\n * @property {number} [wrapT] Texture wrapping for T. Defaults to `gl.REPEAT` and `gl.CLAMP_TO_EDGE` for cube. If set takes precedence over `wrap`.\n * @property {number} [wrapR] Texture wrapping for R. Defaults to `gl.REPEAT` and `gl.CLAMP_TO_EDGE` for cube. If set takes precedence over `wrap`.\n * @property {number} [minLod] TEXTURE_MIN_LOD setting\n * @property {number} [maxLod] TEXTURE_MAX_LOD setting\n * @property {number} [baseLevel] TEXTURE_BASE_LEVEL setting\n * @property {number} [maxLevel] TEXTURE_MAX_LEVEL setting\n * @property {number} [compareFunc] TEXTURE_COMPARE_FUNC setting\n * @property {number} [compareMode] TEXTURE_COMPARE_MODE setting\n * @property {number} [unpackAlignment] The `gl.UNPACK_ALIGNMENT` used when uploading an array. Defaults to 1.\n * @property {number[]|ArrayBufferView} [color] Color to initialize this texture with if loading an image asynchronously.\n *     The default use a blue 1x1 pixel texture. You can set another default by calling `twgl.setDefaults`\n *     or you can set an individual texture's initial color by setting this property. Example: `[1, .5, .5, 1]` = pink\n * @property {number} [premultiplyAlpha] Whether or not to premultiply alpha. Defaults to whatever the current setting is.\n *     This lets you set it once before calling `twgl.createTexture` or `twgl.createTextures` and only override\n *     the current setting for specific textures.\n * @property {number} [flipY] Whether or not to flip the texture vertically on upload. Defaults to whatever the current setting is.\n *     This lets you set it once before calling `twgl.createTexture` or `twgl.createTextures` and only override\n *     the current setting for specific textures.\n * @property {number} [colorspaceConversion] Whether or not to let the browser do colorspace conversion of the texture on upload. Defaults to whatever the current setting is.\n *     This lets you set it once before calling `twgl.createTexture` or `twgl.createTextures` and only override\n *     the current setting for specific textures.\n * @property {boolean} [auto] If `undefined` or `true`, in WebGL1, texture filtering is set automatically for non-power of 2 images and\n *    mips are generated for power of 2 images. In WebGL2 mips are generated if they can be. Note: if `level` is set above\n *    then then `auto` is assumed to be `false` unless explicity set to `true`.\n * @property {number[]} [cubeFaceOrder] The order that cube faces are pulled out of an img or set of images. The default is\n *\n *     [gl.TEXTURE_CUBE_MAP_POSITIVE_X,\n *      gl.TEXTURE_CUBE_MAP_NEGATIVE_X,\n *      gl.TEXTURE_CUBE_MAP_POSITIVE_Y,\n *      gl.TEXTURE_CUBE_MAP_NEGATIVE_Y,\n *      gl.TEXTURE_CUBE_MAP_POSITIVE_Z,\n *      gl.TEXTURE_CUBE_MAP_NEGATIVE_Z]\n *\n * @property {(number[]|ArrayBufferView|TexImageSource|TexImageSource[]|string|string[]|module:twgl.TextureFunc)} [src] source for texture\n *\n *    If `string` then it's assumed to be a URL to an image. The image will be downloaded async. A usable\n *    1x1 pixel texture will be returned immediately. The texture will be updated once the image has downloaded.\n *    If `target` is `gl.TEXTURE_CUBE_MAP` will attempt to divide image into 6 square pieces. 1x6, 6x1, 3x2, 2x3.\n *    The pieces will be uploaded in `cubeFaceOrder`\n *\n *    If `string[]` or `TexImageSource[]` and target is `gl.TEXTURE_CUBE_MAP` then it must have 6 entries, one for each face of a cube map.\n *\n *    If `string[]` or `TexImageSource[]` and target is `gl.TEXTURE_2D_ARRAY` then each entry is a slice of the a 2d array texture\n *    and will be scaled to the specified width and height OR to the size of the first image that loads.\n *\n *    If `TexImageSource` then it wil be used immediately to create the contents of the texture. Examples `HTMLImageElement`,\n *    `HTMLCanvasElement`, `HTMLVideoElement`.\n *\n *    If `number[]` or `ArrayBufferView` it's assumed to be data for a texture. If `width` or `height` is\n *    not specified it is guessed as follows. First the number of elements is computed by `src.length / numComponents`\n *    where `numComponents` is derived from `format`. If `target` is `gl.TEXTURE_CUBE_MAP` then `numElements` is divided\n *    by 6. Then\n *\n *    *   If neither `width` nor `height` are specified and `sqrt(numElements)` is an integer then width and height\n *        are set to `sqrt(numElements)`. Otherwise `width = numElements` and `height = 1`.\n *\n *    *   If only one of `width` or `height` is specified then the other equals `numElements / specifiedDimension`.\n *\n * If `number[]` will be converted to `type`.\n *\n * If `src` is a function it will be called with a `WebGLRenderingContext` and these options.\n * Whatever it returns is subject to these rules. So it can return a string url, an `HTMLElement`\n * an array etc...\n *\n * If `src` is undefined then an empty texture will be created of size `width` by `height`.\n *\n * @property {string} [crossOrigin] What to set the crossOrigin property of images when they are downloaded.\n *    default: undefined. Also see {@link module:twgl.setDefaults}.\n *\n * @memberOf module:twgl\n */\n\n/**\n * Sets any packing state that will be set based on the options.\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @private\n */\nfunction setPackState(gl, options) {\n  if (options.colorspaceConversion !== undefined) {\n    gl.pixelStorei(UNPACK_COLORSPACE_CONVERSION_WEBGL, options.colorspaceConversion);\n  }\n  if (options.premultiplyAlpha !== undefined) {\n    gl.pixelStorei(UNPACK_PREMULTIPLY_ALPHA_WEBGL, options.premultiplyAlpha);\n  }\n  if (options.flipY !== undefined) {\n    gl.pixelStorei(UNPACK_FLIP_Y_WEBGL, options.flipY);\n  }\n}\n\n/**\n * Set skip state to defaults\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @private\n */\nfunction setSkipStateToDefault(gl) {\n  gl.pixelStorei(UNPACK_ALIGNMENT, 4);\n  if (isWebGL2(gl)) {\n    gl.pixelStorei(UNPACK_ROW_LENGTH, 0);\n    gl.pixelStorei(UNPACK_IMAGE_HEIGHT, 0);\n    gl.pixelStorei(UNPACK_SKIP_PIXELS, 0);\n    gl.pixelStorei(UNPACK_SKIP_ROWS, 0);\n    gl.pixelStorei(UNPACK_SKIP_IMAGES, 0);\n  }\n}\n\n/**\n * Sets the parameters of a texture or sampler\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {number|WebGLSampler} target texture target or sampler\n * @param {function()} parameteriFn texParameteri or samplerParameteri fn\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @private\n */\nfunction setTextureSamplerParameters(gl, target, parameteriFn, options) {\n  if (options.minMag) {\n    parameteriFn.call(gl, target, TEXTURE_MIN_FILTER, options.minMag);\n    parameteriFn.call(gl, target, TEXTURE_MAG_FILTER, options.minMag);\n  }\n  if (options.min) {\n    parameteriFn.call(gl, target, TEXTURE_MIN_FILTER, options.min);\n  }\n  if (options.mag) {\n    parameteriFn.call(gl, target, TEXTURE_MAG_FILTER, options.mag);\n  }\n  if (options.wrap) {\n    parameteriFn.call(gl, target, TEXTURE_WRAP_S, options.wrap);\n    parameteriFn.call(gl, target, TEXTURE_WRAP_T, options.wrap);\n    if (target === TEXTURE_3D$1 || isSampler(gl, target)) {\n      parameteriFn.call(gl, target, TEXTURE_WRAP_R, options.wrap);\n    }\n  }\n  if (options.wrapR) {\n    parameteriFn.call(gl, target, TEXTURE_WRAP_R, options.wrapR);\n  }\n  if (options.wrapS) {\n    parameteriFn.call(gl, target, TEXTURE_WRAP_S, options.wrapS);\n  }\n  if (options.wrapT) {\n    parameteriFn.call(gl, target, TEXTURE_WRAP_T, options.wrapT);\n  }\n  if (options.minLod !== undefined) {\n    parameteriFn.call(gl, target, TEXTURE_MIN_LOD, options.minLod);\n  }\n  if (options.maxLod !== undefined) {\n    parameteriFn.call(gl, target, TEXTURE_MAX_LOD, options.maxLod);\n  }\n  if (options.baseLevel !== undefined) {\n    parameteriFn.call(gl, target, TEXTURE_BASE_LEVEL, options.baseLevel);\n  }\n  if (options.maxLevel !== undefined) {\n    parameteriFn.call(gl, target, TEXTURE_MAX_LEVEL, options.maxLevel);\n  }\n  if (options.compareFunc !== undefined) {\n    parameteriFn.call(gl, target, TEXTURE_COMPARE_FUNC, options.compareFunc);\n  }\n  if (options.compareMode !== undefined) {\n    parameteriFn.call(gl, target, TEXTURE_COMPARE_MODE, options.compareMode);\n  }\n}\n\n/**\n * Sets the texture parameters of a texture.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @memberOf module:twgl/textures\n */\nfunction setTextureParameters(gl, tex, options) {\n  const target = options.target || TEXTURE_2D$2;\n  gl.bindTexture(target, tex);\n  setTextureSamplerParameters(gl, target, gl.texParameteri, options);\n}\n\n/**\n * Sets the sampler parameters of a sampler.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLSampler} sampler the WebGLSampler to set parameters for\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @memberOf module:twgl/textures\n */\nfunction setSamplerParameters(gl, sampler, options) {\n  setTextureSamplerParameters(gl, sampler, gl.samplerParameteri, options);\n}\n\n/**\n * Creates a new sampler object and sets parameters.\n *\n * Example:\n *\n *      const sampler = twgl.createSampler(gl, {\n *        minMag: gl.NEAREST,         // sets both TEXTURE_MIN_FILTER and TEXTURE_MAG_FILTER\n *        wrap: gl.CLAMP_TO_NEAREST,  // sets both TEXTURE_WRAP_S and TEXTURE_WRAP_T and TEXTURE_WRAP_R\n *      });\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {Object.<string,module:twgl.TextureOptions>} options A object of TextureOptions one per sampler.\n * @return {Object.<string,WebGLSampler>} the created samplers by name\n * @private\n */\nfunction createSampler(gl, options) {\n  const sampler = gl.createSampler();\n  setSamplerParameters(gl, sampler, options);\n  return sampler;\n}\n\n/**\n * Creates a multiple sampler objects and sets parameters on each.\n *\n * Example:\n *\n *      const samplers = twgl.createSamplers(gl, {\n *        nearest: {\n *          minMag: gl.NEAREST,\n *        },\n *        nearestClampS: {\n *          minMag: gl.NEAREST,\n *          wrapS: gl.CLAMP_TO_NEAREST,\n *        },\n *        linear: {\n *          minMag: gl.LINEAR,\n *        },\n *        nearestClamp: {\n *          minMag: gl.NEAREST,\n *          wrap: gl.CLAMP_TO_EDGE,\n *        },\n *        linearClamp: {\n *          minMag: gl.LINEAR,\n *          wrap: gl.CLAMP_TO_EDGE,\n *        },\n *        linearClampT: {\n *          minMag: gl.LINEAR,\n *          wrapT: gl.CLAMP_TO_EDGE,\n *        },\n *      });\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set on the sampler\n * @private\n */\nfunction createSamplers(gl, samplerOptions) {\n  const samplers = {};\n  Object.keys(samplerOptions).forEach(function(name) {\n    samplers[name] = createSampler(gl, samplerOptions[name]);\n  });\n  return samplers;\n}\n\n/**\n * Makes a 1x1 pixel\n * If no color is passed in uses the default color which can be set by calling `setDefaultTextureColor`.\n * @param {(number[]|ArrayBufferView)} [color] The color using 0-1 values\n * @return {Uint8Array} Unit8Array with color.\n * @private\n */\nfunction make1Pixel(color) {\n  color = color || defaults$1.textureColor;\n  if (isArrayBuffer(color)) {\n    return color;\n  }\n  return new Uint8Array([color[0] * 255, color[1] * 255, color[2] * 255, color[3] * 255]);\n}\n\n/**\n * Sets filtering or generates mips for texture based on width or height\n * If width or height is not passed in uses `options.width` and//or `options.height`\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @param {number} [width] width of texture\n * @param {number} [height] height of texture\n * @param {number} [internalFormat] The internalFormat parameter from texImage2D etc..\n * @memberOf module:twgl/textures\n */\nfunction setTextureFilteringForSize(gl, tex, options, width, height, internalFormat) {\n  options = options || defaults$1.textureOptions;\n  internalFormat = internalFormat || RGBA$1;\n  const target = options.target || TEXTURE_2D$2;\n  width = width || options.width;\n  height = height || options.height;\n  gl.bindTexture(target, tex);\n  if (canGenerateMipmap(gl, width, height, internalFormat)) {\n    gl.generateMipmap(target);\n  } else {\n    const filtering = canFilter(internalFormat) ? LINEAR$1 : NEAREST;\n    gl.texParameteri(target, TEXTURE_MIN_FILTER, filtering);\n    gl.texParameteri(target, TEXTURE_MAG_FILTER, filtering);\n    gl.texParameteri(target, TEXTURE_WRAP_S, CLAMP_TO_EDGE$1);\n    gl.texParameteri(target, TEXTURE_WRAP_T, CLAMP_TO_EDGE$1);\n  }\n}\n\nfunction shouldAutomaticallySetTextureFilteringForSize(options) {\n  return options.auto === true || (options.auto === undefined && options.level === undefined);\n}\n\n/**\n * Gets an array of cubemap face enums\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @return {number[]} cubemap face enums\n * @private\n */\nfunction getCubeFaceOrder(gl, options) {\n  options = options || {};\n  return options.cubeFaceOrder || [\n      TEXTURE_CUBE_MAP_POSITIVE_X,\n      TEXTURE_CUBE_MAP_NEGATIVE_X,\n      TEXTURE_CUBE_MAP_POSITIVE_Y,\n      TEXTURE_CUBE_MAP_NEGATIVE_Y,\n      TEXTURE_CUBE_MAP_POSITIVE_Z,\n      TEXTURE_CUBE_MAP_NEGATIVE_Z,\n    ];\n}\n\n/**\n * @typedef {Object} FaceInfo\n * @property {number} face gl enum for texImage2D\n * @property {number} ndx face index (0 - 5) into source data\n * @ignore\n */\n\n/**\n * Gets an array of FaceInfos\n * There's a bug in some NVidia drivers that will crash the driver if\n * `gl.TEXTURE_CUBE_MAP_POSITIVE_X` is not uploaded first. So, we take\n * the user's desired order from his faces to WebGL and make sure we\n * do the faces in WebGL order\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @return {FaceInfo[]} cubemap face infos. Arguably the `face` property of each element is redundant but\n *    it's needed internally to sort the array of `ndx` properties by `face`.\n * @private\n */\nfunction getCubeFacesWithNdx(gl, options) {\n  const faces = getCubeFaceOrder(gl, options);\n  // work around bug in NVidia drivers. We have to upload the first face first else the driver crashes :(\n  const facesWithNdx = faces.map(function(face, ndx) {\n    return { face: face, ndx: ndx };\n  });\n  facesWithNdx.sort(function(a, b) {\n    return a.face - b.face;\n  });\n  return facesWithNdx;\n}\n\n/**\n * Set a texture from the contents of an element. Will also set\n * texture filtering or generate mips based on the dimensions of the element\n * unless `options.auto === false`. If `target === gl.TEXTURE_CUBE_MAP` will\n * attempt to slice image into 1x6, 2x3, 3x2, or 6x1 images, one for each face.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {HTMLElement} element a canvas, img, or video element.\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @memberOf module:twgl/textures\n * @kind function\n */\nfunction setTextureFromElement(gl, tex, element, options) {\n  options = options || defaults$1.textureOptions;\n  const target = options.target || TEXTURE_2D$2;\n  const level = options.level || 0;\n  let width = element.width;\n  let height = element.height;\n  const internalFormat = options.internalFormat || options.format || RGBA$1;\n  const formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  const format = options.format || formatType.format;\n  const type = options.type || formatType.type;\n  setPackState(gl, options);\n  gl.bindTexture(target, tex);\n  if (target === TEXTURE_CUBE_MAP$1) {\n    // guess the parts\n    const imgWidth  = element.width;\n    const imgHeight = element.height;\n    let size;\n    let slices;\n    if (imgWidth / 6 === imgHeight) {\n      // It's 6x1\n      size = imgHeight;\n      slices = [0, 0, 1, 0, 2, 0, 3, 0, 4, 0, 5, 0];\n    } else if (imgHeight / 6 === imgWidth) {\n      // It's 1x6\n      size = imgWidth;\n      slices = [0, 0, 0, 1, 0, 2, 0, 3, 0, 4, 0, 5];\n    } else if (imgWidth / 3 === imgHeight / 2) {\n      // It's 3x2\n      size = imgWidth / 3;\n      slices = [0, 0, 1, 0, 2, 0, 0, 1, 1, 1, 2, 1];\n    } else if (imgWidth / 2 === imgHeight / 3) {\n      // It's 2x3\n      size = imgWidth / 2;\n      slices = [0, 0, 1, 0, 0, 1, 1, 1, 0, 2, 1, 2];\n    } else {\n      throw \"can't figure out cube map from element: \" + (element.src ? element.src : element.nodeName);\n    }\n    const ctx = getShared2DContext();\n    if (ctx) {\n      ctx.canvas.width = size;\n      ctx.canvas.height = size;\n      width = size;\n      height = size;\n      getCubeFacesWithNdx(gl, options).forEach(function(f) {\n        const xOffset = slices[f.ndx * 2 + 0] * size;\n        const yOffset = slices[f.ndx * 2 + 1] * size;\n        ctx.drawImage(element, xOffset, yOffset, size, size, 0, 0, size, size);\n        gl.texImage2D(f.face, level, internalFormat, format, type, ctx.canvas);\n      });\n      // Free up the canvas memory\n      ctx.canvas.width = 1;\n      ctx.canvas.height = 1;\n    } else if (typeof createImageBitmap !== 'undefined') {\n      // NOTE: It seems like we should prefer ImageBitmap because unlike canvas it's\n      // note lossy? (alpha is not premultiplied? although I'm not sure what\n      width = size;\n      height = size;\n      getCubeFacesWithNdx(gl, options).forEach(function(f) {\n        const xOffset = slices[f.ndx * 2 + 0] * size;\n        const yOffset = slices[f.ndx * 2 + 1] * size;\n        // We can't easily use a default texture color here as it would have to match\n        // the type across all faces where as with a 2D one there's only one face\n        // so we're replacing everything all at once. It also has to be the correct size.\n        // On the other hand we need all faces to be the same size so as one face loads\n        // the rest match else the texture will be un-renderable.\n        gl.texImage2D(f.face, level, internalFormat, size, size, 0, format, type, null);\n        createImageBitmap(element, xOffset, yOffset, size, size, {\n          premultiplyAlpha: 'none',\n          colorSpaceConversion: 'none',\n        })\n        .then(function(imageBitmap) {\n          setPackState(gl, options);\n          gl.bindTexture(target, tex);\n          gl.texImage2D(f.face, level, internalFormat, format, type, imageBitmap);\n          if (shouldAutomaticallySetTextureFilteringForSize(options)) {\n            setTextureFilteringForSize(gl, tex, options, width, height, internalFormat);\n          }\n        });\n      });\n    }\n  } else if (target === TEXTURE_3D$1 || target === TEXTURE_2D_ARRAY$1) {\n    const smallest = Math.min(element.width, element.height);\n    const largest = Math.max(element.width, element.height);\n    const depth = largest / smallest;\n    if (depth % 1 !== 0) {\n      throw \"can not compute 3D dimensions of element\";\n    }\n    const xMult = element.width  === largest ? 1 : 0;\n    const yMult = element.height === largest ? 1 : 0;\n    gl.pixelStorei(UNPACK_ALIGNMENT, 1);\n    gl.pixelStorei(UNPACK_ROW_LENGTH, element.width);\n    gl.pixelStorei(UNPACK_IMAGE_HEIGHT, 0);\n    gl.pixelStorei(UNPACK_SKIP_IMAGES, 0);\n    gl.texImage3D(target, level, internalFormat, smallest, smallest, smallest, 0, format, type, null);\n    for (let d = 0; d < depth; ++d) {\n      const srcX = d * smallest * xMult;\n      const srcY = d * smallest * yMult;\n      gl.pixelStorei(UNPACK_SKIP_PIXELS, srcX);\n      gl.pixelStorei(UNPACK_SKIP_ROWS, srcY);\n      gl.texSubImage3D(target, level, 0, 0, d, smallest, smallest, 1, format, type, element);\n    }\n    setSkipStateToDefault(gl);\n  } else {\n    gl.texImage2D(target, level, internalFormat, format, type, element);\n  }\n  if (shouldAutomaticallySetTextureFilteringForSize(options)) {\n    setTextureFilteringForSize(gl, tex, options, width, height, internalFormat);\n  }\n  setTextureParameters(gl, tex, options);\n}\n\nfunction noop() {\n}\n\n/**\n * Checks whether the url's origin is the same so that we can set the `crossOrigin`\n * @param {string} url url to image\n * @returns {boolean} true if the window's origin is the same as image's url\n * @private\n */\nfunction urlIsSameOrigin(url) {\n  if (typeof document !== 'undefined') {\n    // for IE really\n    const a = document.createElement('a');\n    a.href = url;\n    return a.hostname === location.hostname &&\n           a.port     === location.port &&\n           a.protocol === location.protocol;\n  } else {\n    const localOrigin = (new URL(location.href)).origin;\n    const urlOrigin = (new URL(url, location.href)).origin;\n    return urlOrigin === localOrigin;\n  }\n}\n\nfunction setToAnonymousIfUndefinedAndURLIsNotSameOrigin(url, crossOrigin) {\n  return crossOrigin === undefined && !urlIsSameOrigin(url)\n     ? 'anonymous'\n     : crossOrigin;\n}\n\n/**\n * Loads an image\n * @param {string} url url to image\n * @param {string} crossOrigin\n * @param {function(err, img)} [callback] a callback that's passed an error and the image. The error will be non-null\n *     if there was an error\n * @return {HTMLImageElement} the image being loaded.\n * @private\n */\nfunction loadImage(url, crossOrigin, callback) {\n  callback = callback || noop;\n  let img;\n  crossOrigin = crossOrigin !== undefined ? crossOrigin : defaults$1.crossOrigin;\n  crossOrigin = setToAnonymousIfUndefinedAndURLIsNotSameOrigin(url, crossOrigin);\n  if (typeof Image !== 'undefined') {\n    img = new Image();\n    if (crossOrigin !== undefined) {\n      img.crossOrigin = crossOrigin;\n    }\n\n    const clearEventHandlers = function clearEventHandlers() {\n      img.removeEventListener('error', onError);  // eslint-disable-line\n      img.removeEventListener('load', onLoad);  // eslint-disable-line\n      img = null;\n    };\n\n    const onError = function onError() {\n      const msg = \"couldn't load image: \" + url;\n      error$1(msg);\n      callback(msg, img);\n      clearEventHandlers();\n    };\n\n    const onLoad = function onLoad() {\n      callback(null, img);\n      clearEventHandlers();\n    };\n\n    img.addEventListener('error', onError);\n    img.addEventListener('load', onLoad);\n    img.src = url;\n    return img;\n  } else if (typeof ImageBitmap !== 'undefined') {\n    let err;\n    let bm;\n    const cb = function cb() {\n      callback(err, bm);\n    };\n\n    const options = {};\n    if (crossOrigin) {\n      options.mode = 'cors'; // TODO: not sure how to translate image.crossOrigin\n    }\n    fetch(url, options).then(function(response) {\n      if (!response.ok) {\n        throw response;\n      }\n      return response.blob();\n    }).then(function(blob) {\n      return createImageBitmap(blob, {\n        premultiplyAlpha: 'none',\n        colorSpaceConversion: 'none',\n      });\n    }).then(function(bitmap) {\n      // not sure if this works. We don't want\n      // to catch the user's error. So, call\n      // the callback in a timeout so we're\n      // not in this scope inside the promise.\n      bm = bitmap;\n      setTimeout(cb);\n    }).catch(function(e) {\n      err = e;\n      setTimeout(cb);\n    });\n    img = null;\n  }\n  return img;\n}\n\n/**\n * check if object is a TexImageSource\n *\n * @param {Object} obj Object to test\n * @return {boolean} true if object is a TexImageSource\n * @private\n */\nfunction isTexImageSource(obj) {\n  return (typeof ImageBitmap !== 'undefined' && obj instanceof ImageBitmap) ||\n         (typeof ImageData !== 'undefined'  && obj instanceof ImageData) ||\n         (typeof HTMLElement !== 'undefined'  && obj instanceof HTMLElement);\n}\n\n/**\n * if obj is an TexImageSource then just\n * uses it otherwise if obj is a string\n * then load it first.\n *\n * @param {string|TexImageSource} obj\n * @param {string} crossOrigin\n * @param {function(err, img)} [callback] a callback that's passed an error and the image. The error will be non-null\n *     if there was an error\n * @private\n */\nfunction loadAndUseImage(obj, crossOrigin, callback) {\n  if (isTexImageSource(obj)) {\n    setTimeout(function() {\n      callback(null, obj);\n    });\n    return obj;\n  }\n\n  return loadImage(obj, crossOrigin, callback);\n}\n\n/**\n * Sets a texture to a 1x1 pixel color. If `options.color === false` is nothing happens. If it's not set\n * the default texture color is used which can be set by calling `setDefaultTextureColor`.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @memberOf module:twgl/textures\n * @private\n */\nfunction setTextureTo1PixelColor(gl, tex, options) {\n  options = options || defaults$1.textureOptions;\n  const target = options.target || TEXTURE_2D$2;\n  gl.bindTexture(target, tex);\n  if (options.color === false) {\n    return;\n  }\n  // Assume it's a URL\n  // Put 1x1 pixels in texture. That makes it renderable immediately regardless of filtering.\n  const color = make1Pixel(options.color);\n  if (target === TEXTURE_CUBE_MAP$1) {\n    for (let ii = 0; ii < 6; ++ii) {\n      gl.texImage2D(TEXTURE_CUBE_MAP_POSITIVE_X + ii, 0, RGBA$1, 1, 1, 0, RGBA$1, UNSIGNED_BYTE$1, color);\n    }\n  } else if (target === TEXTURE_3D$1 || target === TEXTURE_2D_ARRAY$1) {\n    gl.texImage3D(target, 0, RGBA$1, 1, 1, 1, 0, RGBA$1, UNSIGNED_BYTE$1, color);\n  } else {\n    gl.texImage2D(target, 0, RGBA$1, 1, 1, 0, RGBA$1, UNSIGNED_BYTE$1, color);\n  }\n}\n\n/**\n * The src image(s) used to create a texture.\n *\n * When you call {@link module:twgl.createTexture} or {@link module:twgl.createTextures}\n * you can pass in urls for images to load into the textures. If it's a single url\n * then this will be a single HTMLImageElement. If it's an array of urls used for a cubemap\n * this will be a corresponding array of images for the cubemap.\n *\n * @typedef {HTMLImageElement|HTMLImageElement[]} TextureSrc\n * @memberOf module:twgl\n */\n\n/**\n * A callback for when an image finished downloading and been uploaded into a texture\n * @callback TextureReadyCallback\n * @param {*} err If truthy there was an error.\n * @param {WebGLTexture} texture the texture.\n * @param {module:twgl.TextureSrc} source image(s) used to as the src for the texture\n * @memberOf module:twgl\n */\n\n/**\n * A callback for when all images have finished downloading and been uploaded into their respective textures\n * @callback TexturesReadyCallback\n * @param {*} err If truthy there was an error.\n * @param {Object.<string, WebGLTexture>} textures the created textures by name. Same as returned by {@link module:twgl.createTextures}.\n * @param {Object.<string, module:twgl.TextureSrc>} sources the image(s) used for the texture by name.\n * @memberOf module:twgl\n */\n\n/**\n * A callback for when an image finished downloading and been uploaded into a texture\n * @callback CubemapReadyCallback\n * @param {*} err If truthy there was an error.\n * @param {WebGLTexture} tex the texture.\n * @param {HTMLImageElement[]} imgs the images for each face.\n * @memberOf module:twgl\n */\n\n/**\n * A callback for when an image finished downloading and been uploaded into a texture\n * @callback ThreeDReadyCallback\n * @param {*} err If truthy there was an error.\n * @param {WebGLTexture} tex the texture.\n * @param {HTMLImageElement[]} imgs the images for each slice.\n * @memberOf module:twgl\n */\n\n/**\n * Loads a texture from an image from a Url as specified in `options.src`\n * If `options.color !== false` will set the texture to a 1x1 pixel color so that the texture is\n * immediately useable. It will be updated with the contents of the image once the image has finished\n * downloading. Filtering options will be set as appropriate for image unless `options.auto === false`.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n * @param {module:twgl.TextureReadyCallback} [callback] A function to be called when the image has finished loading. err will\n *    be non null if there was an error.\n * @return {HTMLImageElement} the image being downloaded.\n * @memberOf module:twgl/textures\n */\nfunction loadTextureFromUrl(gl, tex, options, callback) {\n  callback = callback || noop;\n  options = options || defaults$1.textureOptions;\n  setTextureTo1PixelColor(gl, tex, options);\n  // Because it's async we need to copy the options.\n  options = Object.assign({}, options);\n  const img = loadAndUseImage(options.src, options.crossOrigin, function(err, img) {\n    if (err) {\n      callback(err, tex, img);\n    } else {\n      setTextureFromElement(gl, tex, img, options);\n      callback(null, tex, img);\n    }\n  });\n  return img;\n}\n\n/**\n * Loads a cubemap from 6 urls or TexImageSources as specified in `options.src`. Will set the cubemap to a 1x1 pixel color\n * so that it is usable immediately unless `option.color === false`.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @param {module:twgl.CubemapReadyCallback} [callback] A function to be called when all the images have finished loading. err will\n *    be non null if there was an error.\n * @memberOf module:twgl/textures\n * @private\n */\nfunction loadCubemapFromUrls(gl, tex, options, callback) {\n  callback = callback || noop;\n  const urls = options.src;\n  if (urls.length !== 6) {\n    throw \"there must be 6 urls for a cubemap\";\n  }\n  const level = options.level || 0;\n  const internalFormat = options.internalFormat || options.format || RGBA$1;\n  const formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  const format = options.format || formatType.format;\n  const type = options.type || UNSIGNED_BYTE$1;\n  const target = options.target || TEXTURE_2D$2;\n  if (target !== TEXTURE_CUBE_MAP$1) {\n    throw \"target must be TEXTURE_CUBE_MAP\";\n  }\n  setTextureTo1PixelColor(gl, tex, options);\n  // Because it's async we need to copy the options.\n  options = Object.assign({}, options);\n  let numToLoad = 6;\n  const errors = [];\n  const faces = getCubeFaceOrder(gl, options);\n  let imgs;  // eslint-disable-line\n\n  function uploadImg(faceTarget) {\n    return function(err, img) {\n      --numToLoad;\n      if (err) {\n        errors.push(err);\n      } else {\n        if (img.width !== img.height) {\n          errors.push(\"cubemap face img is not a square: \" + img.src);\n        } else {\n          setPackState(gl, options);\n          gl.bindTexture(target, tex);\n\n          // So assuming this is the first image we now have one face that's img sized\n          // and 5 faces that are 1x1 pixel so size the other faces\n          if (numToLoad === 5) {\n            // use the default order\n            getCubeFaceOrder().forEach(function(otherTarget) {\n              // Should we re-use the same face or a color?\n              gl.texImage2D(otherTarget, level, internalFormat, format, type, img);\n            });\n          } else {\n            gl.texImage2D(faceTarget, level, internalFormat, format, type, img);\n          }\n\n          if (shouldAutomaticallySetTextureFilteringForSize(options)) {\n            gl.generateMipmap(target);\n          }\n        }\n      }\n\n      if (numToLoad === 0) {\n        callback(errors.length ? errors : undefined, tex, imgs);\n      }\n    };\n  }\n\n  imgs = urls.map(function(url, ndx) {\n    return loadAndUseImage(url, options.crossOrigin, uploadImg(faces[ndx]));\n  });\n}\n\n/**\n * Loads a 2d array or 3d texture from urls OR TexImageSources as specified in `options.src`.\n * Will set the texture to a 1x1 pixel color\n * so that it is usable immediately unless `option.color === false`.\n *\n * If the width and height is not specified the width and height of the first\n * image loaded will be used. Note that since images are loaded async\n * which image downloads first is unknown.\n *\n * If an image is not the same size as the width and height it will be scaled\n * to that width and height.\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @param {module:twgl.ThreeDReadyCallback} [callback] A function to be called when all the images have finished loading. err will\n *    be non null if there was an error.\n * @memberOf module:twgl/textures\n * @private\n */\nfunction loadSlicesFromUrls(gl, tex, options, callback) {\n  callback = callback || noop;\n  const urls = options.src;\n  const internalFormat = options.internalFormat || options.format || RGBA$1;\n  const formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  const format = options.format || formatType.format;\n  const type = options.type || UNSIGNED_BYTE$1;\n  const target = options.target || TEXTURE_2D_ARRAY$1;\n  if (target !== TEXTURE_3D$1 && target !== TEXTURE_2D_ARRAY$1) {\n    throw \"target must be TEXTURE_3D or TEXTURE_2D_ARRAY\";\n  }\n  setTextureTo1PixelColor(gl, tex, options);\n  // Because it's async we need to copy the options.\n  options = Object.assign({}, options);\n  let numToLoad = urls.length;\n  const errors = [];\n  let imgs;  // eslint-disable-line\n  const level = options.level || 0;\n  let width = options.width;\n  let height = options.height;\n  const depth = urls.length;\n  let firstImage = true;\n\n  function uploadImg(slice) {\n    return function(err, img) {\n      --numToLoad;\n      if (err) {\n        errors.push(err);\n      } else {\n        setPackState(gl, options);\n        gl.bindTexture(target, tex);\n\n        if (firstImage) {\n          firstImage = false;\n          width = options.width || img.width;\n          height = options.height || img.height;\n          gl.texImage3D(target, level, internalFormat, width, height, depth, 0, format, type, null);\n\n          // put it in every slice otherwise some slices will be 0,0,0,0\n          for (let s = 0; s < depth; ++s) {\n            gl.texSubImage3D(target, level, 0, 0, s, width, height, 1, format, type, img);\n          }\n        } else {\n          let src = img;\n          let ctx;\n          if (img.width !== width || img.height !== height) {\n            // Size the image to fix\n            ctx = getShared2DContext();\n            src = ctx.canvas;\n            ctx.canvas.width = width;\n            ctx.canvas.height = height;\n            ctx.drawImage(img, 0, 0, width, height);\n          }\n\n          gl.texSubImage3D(target, level, 0, 0, slice, width, height, 1, format, type, src);\n\n          // free the canvas memory\n          if (ctx && src === ctx.canvas) {\n            ctx.canvas.width = 0;\n            ctx.canvas.height = 0;\n          }\n        }\n\n        if (shouldAutomaticallySetTextureFilteringForSize(options)) {\n          gl.generateMipmap(target);\n        }\n      }\n\n      if (numToLoad === 0) {\n        callback(errors.length ? errors : undefined, tex, imgs);\n      }\n    };\n  }\n\n  imgs = urls.map(function(url, ndx) {\n    return loadAndUseImage(url, options.crossOrigin, uploadImg(ndx));\n  });\n}\n\n/**\n * Sets a texture from an array or typed array. If the width or height is not provided will attempt to\n * guess the size. See {@link module:twgl.TextureOptions}.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {(number[]|ArrayBufferView)} src An array or typed arry with texture data.\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @memberOf module:twgl/textures\n */\nfunction setTextureFromArray(gl, tex, src, options) {\n  options = options || defaults$1.textureOptions;\n  const target = options.target || TEXTURE_2D$2;\n  gl.bindTexture(target, tex);\n  let width = options.width;\n  let height = options.height;\n  let depth = options.depth;\n  const level = options.level || 0;\n  const internalFormat = options.internalFormat || options.format || RGBA$1;\n  const formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  const format = options.format || formatType.format;\n  const type = options.type || getTextureTypeForArrayType(gl, src, formatType.type);\n  if (!isArrayBuffer(src)) {\n    const Type = getTypedArrayTypeForGLType(type);\n    src = new Type(src);\n  } else if (src instanceof Uint8ClampedArray) {\n    src = new Uint8Array(src.buffer);\n  }\n\n  const bytesPerElement = getBytesPerElementForInternalFormat(internalFormat, type);\n  const numElements = src.byteLength / bytesPerElement;  // TODO: check UNPACK_ALIGNMENT?\n  if (numElements % 1) {\n    throw \"length wrong size for format: \" + glEnumToString(gl, format);\n  }\n  let dimensions;\n  if (target === TEXTURE_3D$1 || target === TEXTURE_2D_ARRAY$1) {\n    if (!width && !height && !depth) {\n      const size = Math.cbrt(numElements);\n      if (size % 1 !== 0) {\n        throw \"can't guess cube size of array of numElements: \" + numElements;\n      }\n      width = size;\n      height = size;\n      depth = size;\n    } else if (width && (!height || !depth)) {\n      dimensions = guessDimensions(gl, target, height, depth, numElements / width);\n      height = dimensions.width;\n      depth = dimensions.height;\n    } else if (height && (!width || !depth)) {\n      dimensions = guessDimensions(gl, target, width, depth, numElements / height);\n      width = dimensions.width;\n      depth = dimensions.height;\n    } else {\n      dimensions = guessDimensions(gl, target, width, height, numElements / depth);\n      width = dimensions.width;\n      height = dimensions.height;\n    }\n  } else {\n    dimensions = guessDimensions(gl, target, width, height, numElements);\n    width = dimensions.width;\n    height = dimensions.height;\n  }\n  setSkipStateToDefault(gl);\n  gl.pixelStorei(UNPACK_ALIGNMENT, options.unpackAlignment || 1);\n  setPackState(gl, options);\n  if (target === TEXTURE_CUBE_MAP$1) {\n    const elementsPerElement = bytesPerElement / src.BYTES_PER_ELEMENT;\n    const faceSize = numElements / 6 * elementsPerElement;\n\n    getCubeFacesWithNdx(gl, options).forEach(f => {\n      const offset = faceSize * f.ndx;\n      const data = src.subarray(offset, offset + faceSize);\n      gl.texImage2D(f.face, level, internalFormat, width, height, 0, format, type, data);\n    });\n  } else if (target === TEXTURE_3D$1 || target === TEXTURE_2D_ARRAY$1) {\n    gl.texImage3D(target, level, internalFormat, width, height, depth, 0, format, type, src);\n  } else {\n    gl.texImage2D(target, level, internalFormat, width, height, 0, format, type, src);\n  }\n  return {\n    width: width,\n    height: height,\n    depth: depth,\n    type: type,\n  };\n}\n\n/**\n * Sets a texture with no contents of a certain size. In other words calls `gl.texImage2D` with `null`.\n * You must set `options.width` and `options.height`.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @memberOf module:twgl/textures\n */\nfunction setEmptyTexture(gl, tex, options) {\n  const target = options.target || TEXTURE_2D$2;\n  gl.bindTexture(target, tex);\n  const level = options.level || 0;\n  const internalFormat = options.internalFormat || options.format || RGBA$1;\n  const formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  const format = options.format || formatType.format;\n  const type = options.type || formatType.type;\n  setPackState(gl, options);\n  if (target === TEXTURE_CUBE_MAP$1) {\n    for (let ii = 0; ii < 6; ++ii) {\n      gl.texImage2D(TEXTURE_CUBE_MAP_POSITIVE_X + ii, level, internalFormat, options.width, options.height, 0, format, type, null);\n    }\n  } else if (target === TEXTURE_3D$1 || target === TEXTURE_2D_ARRAY$1) {\n    gl.texImage3D(target, level, internalFormat, options.width, options.height, options.depth, 0, format, type, null);\n  } else {\n    gl.texImage2D(target, level, internalFormat, options.width, options.height, 0, format, type, null);\n  }\n}\n\n/**\n * Creates a texture based on the options passed in.\n *\n * Note: may reset UNPACK_ALIGNMENT, UNPACK_ROW_LENGTH, UNPACK_IMAGE_HEIGHT, UNPACK_SKIP_IMAGES\n * UNPACK_SKIP_PIXELS, and UNPACK_SKIP_ROWS\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n * @param {module:twgl.TextureReadyCallback} [callback] A callback called when an image has been downloaded and uploaded to the texture.\n * @return {WebGLTexture} the created texture.\n * @memberOf module:twgl/textures\n */\nfunction createTexture(gl, options, callback) {\n  callback = callback || noop;\n  options = options || defaults$1.textureOptions;\n  const tex = gl.createTexture();\n  const target = options.target || TEXTURE_2D$2;\n  let width  = options.width  || 1;\n  let height = options.height || 1;\n  const internalFormat = options.internalFormat || RGBA$1;\n  gl.bindTexture(target, tex);\n  if (target === TEXTURE_CUBE_MAP$1) {\n    // this should have been the default for cubemaps :(\n    gl.texParameteri(target, TEXTURE_WRAP_S, CLAMP_TO_EDGE$1);\n    gl.texParameteri(target, TEXTURE_WRAP_T, CLAMP_TO_EDGE$1);\n  }\n  let src = options.src;\n  if (src) {\n    if (typeof src === \"function\") {\n      src = src(gl, options);\n    }\n    if (typeof (src) === \"string\") {\n      loadTextureFromUrl(gl, tex, options, callback);\n    } else if (isArrayBuffer(src) ||\n               (Array.isArray(src) && (\n                    typeof src[0] === 'number' ||\n                    Array.isArray(src[0]) ||\n                    isArrayBuffer(src[0]))\n               )\n              ) {\n      const dimensions = setTextureFromArray(gl, tex, src, options);\n      width  = dimensions.width;\n      height = dimensions.height;\n    } else if (Array.isArray(src) && (typeof (src[0]) === 'string' || isTexImageSource(src[0]))) {\n      if (target === TEXTURE_CUBE_MAP$1) {\n        loadCubemapFromUrls(gl, tex, options, callback);\n      } else {\n        loadSlicesFromUrls(gl, tex, options, callback);\n      }\n    } else { // if (isTexImageSource(src))\n      setTextureFromElement(gl, tex, src, options);\n      width  = src.width;\n      height = src.height;\n    }\n  } else {\n    setEmptyTexture(gl, tex, options);\n  }\n  if (shouldAutomaticallySetTextureFilteringForSize(options)) {\n    setTextureFilteringForSize(gl, tex, options, width, height, internalFormat);\n  }\n  setTextureParameters(gl, tex, options);\n  return tex;\n}\n\n/**\n * Resizes a texture based on the options passed in.\n *\n * Note: This is not a generic resize anything function.\n * It's mostly used by {@link module:twgl.resizeFramebufferInfo}\n * It will use `options.src` if it exists to try to determine a `type`\n * otherwise it will assume `gl.UNSIGNED_BYTE`. No data is provided\n * for the texture. Texture parameters will be set accordingly\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the texture to resize\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @param {number} [width] the new width. If not passed in will use `options.width`\n * @param {number} [height] the new height. If not passed in will use `options.height`\n * @param {number} [depth] the new depth. If not passed in will use `options.depth`\n * @memberOf module:twgl/textures\n */\nfunction resizeTexture(gl, tex, options, width, height, depth) {\n  width = width || options.width;\n  height = height || options.height;\n  depth = depth || options.depth;\n  const target = options.target || TEXTURE_2D$2;\n  gl.bindTexture(target, tex);\n  const level = options.level || 0;\n  const internalFormat = options.internalFormat || options.format || RGBA$1;\n  const formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  const format = options.format || formatType.format;\n  let type;\n  const src = options.src;\n  if (!src) {\n    type = options.type || formatType.type;\n  } else if (isArrayBuffer(src) || (Array.isArray(src) && typeof (src[0]) === 'number')) {\n    type = options.type || getTextureTypeForArrayType(gl, src, formatType.type);\n  } else {\n    type = options.type || formatType.type;\n  }\n  if (target === TEXTURE_CUBE_MAP$1) {\n    for (let ii = 0; ii < 6; ++ii) {\n      gl.texImage2D(TEXTURE_CUBE_MAP_POSITIVE_X + ii, level, internalFormat, width, height, 0, format, type, null);\n    }\n  } else if (target === TEXTURE_3D$1 || target === TEXTURE_2D_ARRAY$1) {\n    gl.texImage3D(target, level, internalFormat, width, height, depth, 0, format, type, null);\n  } else {\n    gl.texImage2D(target, level, internalFormat, width, height, 0, format, type, null);\n  }\n}\n\n/**\n * Check if a src is an async request.\n * if src is a string we're going to download an image\n * if src is an array of strings we're going to download cubemap images\n * @param {*} src The src from a TextureOptions\n * @returns {bool} true if src is async.\n * @private\n */\nfunction isAsyncSrc(src) {\n  return typeof src === 'string' ||\n         (Array.isArray(src) && typeof src[0] === 'string');\n}\n\n/**\n * Creates a bunch of textures based on the passed in options.\n *\n * Example:\n *\n *     const textures = twgl.createTextures(gl, {\n *       // a power of 2 image\n *       hftIcon: { src: \"images/hft-icon-16.png\", mag: gl.NEAREST },\n *       // a non-power of 2 image\n *       clover: { src: \"images/clover.jpg\" },\n *       // From a canvas\n *       fromCanvas: { src: ctx.canvas },\n *       // A cubemap from 6 images\n *       yokohama: {\n *         target: gl.TEXTURE_CUBE_MAP,\n *         src: [\n *           'images/yokohama/posx.jpg',\n *           'images/yokohama/negx.jpg',\n *           'images/yokohama/posy.jpg',\n *           'images/yokohama/negy.jpg',\n *           'images/yokohama/posz.jpg',\n *           'images/yokohama/negz.jpg',\n *         ],\n *       },\n *       // A cubemap from 1 image (can be 1x6, 2x3, 3x2, 6x1)\n *       goldengate: {\n *         target: gl.TEXTURE_CUBE_MAP,\n *         src: 'images/goldengate.jpg',\n *       },\n *       // A 2x2 pixel texture from a JavaScript array\n *       checker: {\n *         mag: gl.NEAREST,\n *         min: gl.LINEAR,\n *         src: [\n *           255,255,255,255,\n *           192,192,192,255,\n *           192,192,192,255,\n *           255,255,255,255,\n *         ],\n *       },\n *       // a 1x2 pixel texture from a typed array.\n *       stripe: {\n *         mag: gl.NEAREST,\n *         min: gl.LINEAR,\n *         format: gl.LUMINANCE,\n *         src: new Uint8Array([\n *           255,\n *           128,\n *           255,\n *           128,\n *           255,\n *           128,\n *           255,\n *           128,\n *         ]),\n *         width: 1,\n *       },\n *     });\n *\n * Now\n *\n * *   `textures.hftIcon` will be a 2d texture\n * *   `textures.clover` will be a 2d texture\n * *   `textures.fromCanvas` will be a 2d texture\n * *   `textures.yohohama` will be a cubemap texture\n * *   `textures.goldengate` will be a cubemap texture\n * *   `textures.checker` will be a 2d texture\n * *   `textures.stripe` will be a 2d texture\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {Object.<string,module:twgl.TextureOptions>} options A object of TextureOptions one per texture.\n * @param {module:twgl.TexturesReadyCallback} [callback] A callback called when all textures have been downloaded.\n * @return {Object.<string,WebGLTexture>} the created textures by name\n * @memberOf module:twgl/textures\n */\nfunction createTextures(gl, textureOptions, callback) {\n  callback = callback || noop;\n  let numDownloading = 0;\n  const errors = [];\n  const textures = {};\n  const images = {};\n\n  function callCallbackIfReady() {\n    if (numDownloading === 0) {\n      setTimeout(function() {\n        callback(errors.length ? errors : undefined, textures, images);\n      }, 0);\n    }\n  }\n\n  Object.keys(textureOptions).forEach(function(name) {\n    const options = textureOptions[name];\n    let onLoadFn;\n    if (isAsyncSrc(options.src)) {\n      onLoadFn = function(err, tex, img) {\n        images[name] = img;\n        --numDownloading;\n        if (err) {\n          errors.push(err);\n        }\n        callCallbackIfReady();\n      };\n      ++numDownloading;\n    }\n    textures[name] = createTexture(gl, options, onLoadFn);\n  });\n\n  // queue the callback if there are no images to download.\n  // We do this because if your code is structured to wait for\n  // images to download but then you comment out all the async\n  // images your code would break.\n  callCallbackIfReady();\n\n  return textures;\n}\n\nvar textures = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  setTextureDefaults_: setDefaults$1,\n  createSampler: createSampler,\n  createSamplers: createSamplers,\n  setSamplerParameters: setSamplerParameters,\n  createTexture: createTexture,\n  setEmptyTexture: setEmptyTexture,\n  setTextureFromArray: setTextureFromArray,\n  loadTextureFromUrl: loadTextureFromUrl,\n  setTextureFromElement: setTextureFromElement,\n  setTextureFilteringForSize: setTextureFilteringForSize,\n  setTextureParameters: setTextureParameters,\n  setDefaultTextureColor: setDefaultTextureColor,\n  createTextures: createTextures,\n  resizeTexture: resizeTexture,\n  canGenerateMipmap: canGenerateMipmap,\n  canFilter: canFilter,\n  getNumComponentsForFormat: getNumComponentsForFormat,\n  getBytesPerElementForInternalFormat: getBytesPerElementForInternalFormat,\n  getFormatAndTypeForInternalFormat: getFormatAndTypeForInternalFormat\n});\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Low level shader program related functions\n *\n * You should generally not need to use these functions. They are provided\n * for those cases where you're doing something out of the ordinary\n * and you need lower level access.\n *\n * For backward compatibility they are available at both `twgl.programs` and `twgl`\n * itself\n *\n * See {@link module:twgl} for core functions\n *\n * @module twgl/programs\n */\n\nconst error = error$1;\nconst warn = warn$1;\nfunction getElementById(id) {\n  return (typeof document !== 'undefined' && document.getElementById)\n      ? document.getElementById(id)\n      : null;\n}\n\nconst TEXTURE0                       = 0x84c0;\nconst DYNAMIC_DRAW                   = 0x88e8;\n\nconst ARRAY_BUFFER                   = 0x8892;\nconst ELEMENT_ARRAY_BUFFER$1           = 0x8893;\nconst UNIFORM_BUFFER                 = 0x8a11;\nconst TRANSFORM_FEEDBACK_BUFFER      = 0x8c8e;\n\nconst TRANSFORM_FEEDBACK             = 0x8e22;\n\nconst COMPILE_STATUS                 = 0x8b81;\nconst LINK_STATUS                    = 0x8b82;\nconst FRAGMENT_SHADER                = 0x8b30;\nconst VERTEX_SHADER                  = 0x8b31;\nconst SEPARATE_ATTRIBS               = 0x8c8d;\n\nconst ACTIVE_UNIFORMS                = 0x8b86;\nconst ACTIVE_ATTRIBUTES              = 0x8b89;\nconst TRANSFORM_FEEDBACK_VARYINGS    = 0x8c83;\nconst ACTIVE_UNIFORM_BLOCKS          = 0x8a36;\nconst UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER   = 0x8a44;\nconst UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER = 0x8a46;\nconst UNIFORM_BLOCK_DATA_SIZE                     = 0x8a40;\nconst UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES        = 0x8a43;\n\nconst FLOAT                         = 0x1406;\nconst FLOAT_VEC2                    = 0x8B50;\nconst FLOAT_VEC3                    = 0x8B51;\nconst FLOAT_VEC4                    = 0x8B52;\nconst INT                           = 0x1404;\nconst INT_VEC2                      = 0x8B53;\nconst INT_VEC3                      = 0x8B54;\nconst INT_VEC4                      = 0x8B55;\nconst BOOL                          = 0x8B56;\nconst BOOL_VEC2                     = 0x8B57;\nconst BOOL_VEC3                     = 0x8B58;\nconst BOOL_VEC4                     = 0x8B59;\nconst FLOAT_MAT2                    = 0x8B5A;\nconst FLOAT_MAT3                    = 0x8B5B;\nconst FLOAT_MAT4                    = 0x8B5C;\nconst SAMPLER_2D                    = 0x8B5E;\nconst SAMPLER_CUBE                  = 0x8B60;\nconst SAMPLER_3D                    = 0x8B5F;\nconst SAMPLER_2D_SHADOW             = 0x8B62;\nconst FLOAT_MAT2x3                  = 0x8B65;\nconst FLOAT_MAT2x4                  = 0x8B66;\nconst FLOAT_MAT3x2                  = 0x8B67;\nconst FLOAT_MAT3x4                  = 0x8B68;\nconst FLOAT_MAT4x2                  = 0x8B69;\nconst FLOAT_MAT4x3                  = 0x8B6A;\nconst SAMPLER_2D_ARRAY              = 0x8DC1;\nconst SAMPLER_2D_ARRAY_SHADOW       = 0x8DC4;\nconst SAMPLER_CUBE_SHADOW           = 0x8DC5;\nconst UNSIGNED_INT                  = 0x1405;\nconst UNSIGNED_INT_VEC2             = 0x8DC6;\nconst UNSIGNED_INT_VEC3             = 0x8DC7;\nconst UNSIGNED_INT_VEC4             = 0x8DC8;\nconst INT_SAMPLER_2D                = 0x8DCA;\nconst INT_SAMPLER_3D                = 0x8DCB;\nconst INT_SAMPLER_CUBE              = 0x8DCC;\nconst INT_SAMPLER_2D_ARRAY          = 0x8DCF;\nconst UNSIGNED_INT_SAMPLER_2D       = 0x8DD2;\nconst UNSIGNED_INT_SAMPLER_3D       = 0x8DD3;\nconst UNSIGNED_INT_SAMPLER_CUBE     = 0x8DD4;\nconst UNSIGNED_INT_SAMPLER_2D_ARRAY = 0x8DD7;\n\nconst TEXTURE_2D$1                    = 0x0DE1;\nconst TEXTURE_CUBE_MAP              = 0x8513;\nconst TEXTURE_3D                    = 0x806F;\nconst TEXTURE_2D_ARRAY              = 0x8C1A;\n\nconst typeMap = {};\n\n/**\n * Returns the corresponding bind point for a given sampler type\n * @private\n */\nfunction getBindPointForSamplerType(gl, type) {\n  return typeMap[type].bindPoint;\n}\n\n// This kind of sucks! If you could compose functions as in `var fn = gl[name];`\n// this code could be a lot smaller but that is sadly really slow (T_T)\n\nfunction floatSetter(gl, location) {\n  return function(v) {\n    gl.uniform1f(location, v);\n  };\n}\n\nfunction floatArraySetter(gl, location) {\n  return function(v) {\n    gl.uniform1fv(location, v);\n  };\n}\n\nfunction floatVec2Setter(gl, location) {\n  return function(v) {\n    gl.uniform2fv(location, v);\n  };\n}\n\nfunction floatVec3Setter(gl, location) {\n  return function(v) {\n    gl.uniform3fv(location, v);\n  };\n}\n\nfunction floatVec4Setter(gl, location) {\n  return function(v) {\n    gl.uniform4fv(location, v);\n  };\n}\n\nfunction intSetter(gl, location) {\n  return function(v) {\n    gl.uniform1i(location, v);\n  };\n}\n\nfunction intArraySetter(gl, location) {\n  return function(v) {\n    gl.uniform1iv(location, v);\n  };\n}\n\nfunction intVec2Setter(gl, location) {\n  return function(v) {\n    gl.uniform2iv(location, v);\n  };\n}\n\nfunction intVec3Setter(gl, location) {\n  return function(v) {\n    gl.uniform3iv(location, v);\n  };\n}\n\nfunction intVec4Setter(gl, location) {\n  return function(v) {\n    gl.uniform4iv(location, v);\n  };\n}\n\nfunction uintSetter(gl, location) {\n  return function(v) {\n    gl.uniform1ui(location, v);\n  };\n}\n\nfunction uintArraySetter(gl, location) {\n  return function(v) {\n    gl.uniform1uiv(location, v);\n  };\n}\n\nfunction uintVec2Setter(gl, location) {\n  return function(v) {\n    gl.uniform2uiv(location, v);\n  };\n}\n\nfunction uintVec3Setter(gl, location) {\n  return function(v) {\n    gl.uniform3uiv(location, v);\n  };\n}\n\nfunction uintVec4Setter(gl, location) {\n  return function(v) {\n    gl.uniform4uiv(location, v);\n  };\n}\n\nfunction floatMat2Setter(gl, location) {\n  return function(v) {\n    gl.uniformMatrix2fv(location, false, v);\n  };\n}\n\nfunction floatMat3Setter(gl, location) {\n  return function(v) {\n    gl.uniformMatrix3fv(location, false, v);\n  };\n}\n\nfunction floatMat4Setter(gl, location) {\n  return function(v) {\n    gl.uniformMatrix4fv(location, false, v);\n  };\n}\n\nfunction floatMat23Setter(gl, location) {\n  return function(v) {\n    gl.uniformMatrix2x3fv(location, false, v);\n  };\n}\n\nfunction floatMat32Setter(gl, location) {\n  return function(v) {\n    gl.uniformMatrix3x2fv(location, false, v);\n  };\n}\n\nfunction floatMat24Setter(gl, location) {\n  return function(v) {\n    gl.uniformMatrix2x4fv(location, false, v);\n  };\n}\n\nfunction floatMat42Setter(gl, location) {\n  return function(v) {\n    gl.uniformMatrix4x2fv(location, false, v);\n  };\n}\n\nfunction floatMat34Setter(gl, location) {\n  return function(v) {\n    gl.uniformMatrix3x4fv(location, false, v);\n  };\n}\n\nfunction floatMat43Setter(gl, location) {\n  return function(v) {\n    gl.uniformMatrix4x3fv(location, false, v);\n  };\n}\n\nfunction samplerSetter(gl, type, unit, location) {\n  const bindPoint = getBindPointForSamplerType(gl, type);\n  return isWebGL2(gl) ? function(textureOrPair) {\n    let texture;\n    let sampler;\n    if (!textureOrPair || isTexture(gl, textureOrPair)) {\n      texture = textureOrPair;\n      sampler = null;\n    } else {\n      texture = textureOrPair.texture;\n      sampler = textureOrPair.sampler;\n    }\n    gl.uniform1i(location, unit);\n    gl.activeTexture(TEXTURE0 + unit);\n    gl.bindTexture(bindPoint, texture);\n    gl.bindSampler(unit, sampler);\n  } : function(texture) {\n    gl.uniform1i(location, unit);\n    gl.activeTexture(TEXTURE0 + unit);\n    gl.bindTexture(bindPoint, texture);\n  };\n}\n\nfunction samplerArraySetter(gl, type, unit, location, size) {\n  const bindPoint = getBindPointForSamplerType(gl, type);\n  const units = new Int32Array(size);\n  for (let ii = 0; ii < size; ++ii) {\n    units[ii] = unit + ii;\n  }\n\n  return isWebGL2(gl) ? function(textures) {\n    gl.uniform1iv(location, units);\n    textures.forEach(function(textureOrPair, index) {\n      gl.activeTexture(TEXTURE0 + units[index]);\n      let texture;\n      let sampler;\n      if (!textureOrPair || isTexture(gl, textureOrPair)) {\n        texture = textureOrPair;\n        sampler = null;\n      } else {\n        texture = textureOrPair.texture;\n        sampler = textureOrPair.sampler;\n      }\n      gl.bindSampler(unit, sampler);\n      gl.bindTexture(bindPoint, texture);\n    });\n  } : function(textures) {\n    gl.uniform1iv(location, units);\n    textures.forEach(function(texture, index) {\n      gl.activeTexture(TEXTURE0 + units[index]);\n      gl.bindTexture(bindPoint, texture);\n    });\n  };\n}\n\ntypeMap[FLOAT]                         = { Type: Float32Array, size:  4, setter: floatSetter,      arraySetter: floatArraySetter, };\ntypeMap[FLOAT_VEC2]                    = { Type: Float32Array, size:  8, setter: floatVec2Setter,  cols: 2, };\ntypeMap[FLOAT_VEC3]                    = { Type: Float32Array, size: 12, setter: floatVec3Setter,  cols: 3, };\ntypeMap[FLOAT_VEC4]                    = { Type: Float32Array, size: 16, setter: floatVec4Setter,  cols: 4, };\ntypeMap[INT]                           = { Type: Int32Array,   size:  4, setter: intSetter,        arraySetter: intArraySetter, };\ntypeMap[INT_VEC2]                      = { Type: Int32Array,   size:  8, setter: intVec2Setter,    cols: 2, };\ntypeMap[INT_VEC3]                      = { Type: Int32Array,   size: 12, setter: intVec3Setter,    cols: 3, };\ntypeMap[INT_VEC4]                      = { Type: Int32Array,   size: 16, setter: intVec4Setter,    cols: 4, };\ntypeMap[UNSIGNED_INT]                  = { Type: Uint32Array,  size:  4, setter: uintSetter,       arraySetter: uintArraySetter, };\ntypeMap[UNSIGNED_INT_VEC2]             = { Type: Uint32Array,  size:  8, setter: uintVec2Setter,   cols: 2, };\ntypeMap[UNSIGNED_INT_VEC3]             = { Type: Uint32Array,  size: 12, setter: uintVec3Setter,   cols: 3, };\ntypeMap[UNSIGNED_INT_VEC4]             = { Type: Uint32Array,  size: 16, setter: uintVec4Setter,   cols: 4, };\ntypeMap[BOOL]                          = { Type: Uint32Array,  size:  4, setter: intSetter,        arraySetter: intArraySetter, };\ntypeMap[BOOL_VEC2]                     = { Type: Uint32Array,  size:  8, setter: intVec2Setter,    cols: 2, };\ntypeMap[BOOL_VEC3]                     = { Type: Uint32Array,  size: 12, setter: intVec3Setter,    cols: 3, };\ntypeMap[BOOL_VEC4]                     = { Type: Uint32Array,  size: 16, setter: intVec4Setter,    cols: 4, };\ntypeMap[FLOAT_MAT2]                    = { Type: Float32Array, size: 32, setter: floatMat2Setter,  rows: 2, cols: 2, };\ntypeMap[FLOAT_MAT3]                    = { Type: Float32Array, size: 48, setter: floatMat3Setter,  rows: 3, cols: 3, };\ntypeMap[FLOAT_MAT4]                    = { Type: Float32Array, size: 64, setter: floatMat4Setter,  rows: 4, cols: 4, };\ntypeMap[FLOAT_MAT2x3]                  = { Type: Float32Array, size: 32, setter: floatMat23Setter, rows: 2, cols: 3, };\ntypeMap[FLOAT_MAT2x4]                  = { Type: Float32Array, size: 32, setter: floatMat24Setter, rows: 2, cols: 4, };\ntypeMap[FLOAT_MAT3x2]                  = { Type: Float32Array, size: 48, setter: floatMat32Setter, rows: 3, cols: 2, };\ntypeMap[FLOAT_MAT3x4]                  = { Type: Float32Array, size: 48, setter: floatMat34Setter, rows: 3, cols: 4, };\ntypeMap[FLOAT_MAT4x2]                  = { Type: Float32Array, size: 64, setter: floatMat42Setter, rows: 4, cols: 2, };\ntypeMap[FLOAT_MAT4x3]                  = { Type: Float32Array, size: 64, setter: floatMat43Setter, rows: 4, cols: 3, };\ntypeMap[SAMPLER_2D]                    = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D$1,       };\ntypeMap[SAMPLER_CUBE]                  = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_CUBE_MAP, };\ntypeMap[SAMPLER_3D]                    = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_3D,       };\ntypeMap[SAMPLER_2D_SHADOW]             = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D$1,       };\ntypeMap[SAMPLER_2D_ARRAY]              = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D_ARRAY, };\ntypeMap[SAMPLER_2D_ARRAY_SHADOW]       = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D_ARRAY, };\ntypeMap[SAMPLER_CUBE_SHADOW]           = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_CUBE_MAP, };\ntypeMap[INT_SAMPLER_2D]                = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D$1,       };\ntypeMap[INT_SAMPLER_3D]                = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_3D,       };\ntypeMap[INT_SAMPLER_CUBE]              = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_CUBE_MAP, };\ntypeMap[INT_SAMPLER_2D_ARRAY]          = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D_ARRAY, };\ntypeMap[UNSIGNED_INT_SAMPLER_2D]       = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D$1,       };\ntypeMap[UNSIGNED_INT_SAMPLER_3D]       = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_3D,       };\ntypeMap[UNSIGNED_INT_SAMPLER_CUBE]     = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_CUBE_MAP, };\ntypeMap[UNSIGNED_INT_SAMPLER_2D_ARRAY] = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D_ARRAY, };\n\nfunction floatAttribSetter(gl, index) {\n  return function(b) {\n    if (b.value) {\n      gl.disableVertexAttribArray(index);\n      switch (b.value.length) {\n        case 4:\n          gl.vertexAttrib4fv(index, b.value);\n          break;\n        case 3:\n          gl.vertexAttrib3fv(index, b.value);\n          break;\n        case 2:\n          gl.vertexAttrib2fv(index, b.value);\n          break;\n        case 1:\n          gl.vertexAttrib1fv(index, b.value);\n          break;\n        default:\n          throw new Error('the length of a float constant value must be between 1 and 4!');\n      }\n    } else {\n      gl.bindBuffer(ARRAY_BUFFER, b.buffer);\n      gl.enableVertexAttribArray(index);\n      gl.vertexAttribPointer(\n          index, b.numComponents || b.size, b.type || FLOAT, b.normalize || false, b.stride || 0, b.offset || 0);\n      if (gl.vertexAttribDivisor) {\n        gl.vertexAttribDivisor(index, b.divisor || 0);\n      }\n    }\n  };\n}\n\nfunction intAttribSetter(gl, index) {\n  return function(b) {\n    if (b.value) {\n      gl.disableVertexAttribArray(index);\n      if (b.value.length === 4) {\n        gl.vertexAttrib4iv(index, b.value);\n      } else {\n        throw new Error('The length of an integer constant value must be 4!');\n      }\n    } else {\n      gl.bindBuffer(ARRAY_BUFFER, b.buffer);\n      gl.enableVertexAttribArray(index);\n      gl.vertexAttribIPointer(\n          index, b.numComponents || b.size, b.type || INT, b.stride || 0, b.offset || 0);\n      if (gl.vertexAttribDivisor) {\n        gl.vertexAttribDivisor(index, b.divisor || 0);\n      }\n    }\n  };\n}\n\nfunction uintAttribSetter(gl, index) {\n  return function(b) {\n    if (b.value) {\n      gl.disableVertexAttribArray(index);\n      if (b.value.length === 4) {\n        gl.vertexAttrib4uiv(index, b.value);\n      } else {\n        throw new Error('The length of an unsigned integer constant value must be 4!');\n      }\n    } else {\n      gl.bindBuffer(ARRAY_BUFFER, b.buffer);\n      gl.enableVertexAttribArray(index);\n      gl.vertexAttribIPointer(\n          index, b.numComponents || b.size, b.type || UNSIGNED_INT, b.stride || 0, b.offset || 0);\n      if (gl.vertexAttribDivisor) {\n        gl.vertexAttribDivisor(index, b.divisor || 0);\n      }\n    }\n  };\n}\n\nfunction matAttribSetter(gl, index, typeInfo) {\n  const defaultSize = typeInfo.size;\n  const count = typeInfo.count;\n\n  return function(b) {\n    gl.bindBuffer(ARRAY_BUFFER, b.buffer);\n    const numComponents = b.size || b.numComponents || defaultSize;\n    const size = numComponents / count;\n    const type = b.type || FLOAT;\n    const typeInfo = typeMap[type];\n    const stride = typeInfo.size * numComponents;\n    const normalize = b.normalize || false;\n    const offset = b.offset || 0;\n    const rowOffset = stride / count;\n    for (let i = 0; i < count; ++i) {\n      gl.enableVertexAttribArray(index + i);\n      gl.vertexAttribPointer(\n          index + i, size, type, normalize, stride, offset + rowOffset * i);\n      if (gl.vertexAttribDivisor) {\n        gl.vertexAttribDivisor(index + i, b.divisor || 0);\n      }\n    }\n  };\n}\n\n\n\nconst attrTypeMap = {};\nattrTypeMap[FLOAT]             = { size:  4, setter: floatAttribSetter, };\nattrTypeMap[FLOAT_VEC2]        = { size:  8, setter: floatAttribSetter, };\nattrTypeMap[FLOAT_VEC3]        = { size: 12, setter: floatAttribSetter, };\nattrTypeMap[FLOAT_VEC4]        = { size: 16, setter: floatAttribSetter, };\nattrTypeMap[INT]               = { size:  4, setter: intAttribSetter,   };\nattrTypeMap[INT_VEC2]          = { size:  8, setter: intAttribSetter,   };\nattrTypeMap[INT_VEC3]          = { size: 12, setter: intAttribSetter,   };\nattrTypeMap[INT_VEC4]          = { size: 16, setter: intAttribSetter,   };\nattrTypeMap[UNSIGNED_INT]      = { size:  4, setter: uintAttribSetter,  };\nattrTypeMap[UNSIGNED_INT_VEC2] = { size:  8, setter: uintAttribSetter,  };\nattrTypeMap[UNSIGNED_INT_VEC3] = { size: 12, setter: uintAttribSetter,  };\nattrTypeMap[UNSIGNED_INT_VEC4] = { size: 16, setter: uintAttribSetter,  };\nattrTypeMap[BOOL]              = { size:  4, setter: intAttribSetter,   };\nattrTypeMap[BOOL_VEC2]         = { size:  8, setter: intAttribSetter,   };\nattrTypeMap[BOOL_VEC3]         = { size: 12, setter: intAttribSetter,   };\nattrTypeMap[BOOL_VEC4]         = { size: 16, setter: intAttribSetter,   };\nattrTypeMap[FLOAT_MAT2]        = { size:  4, setter: matAttribSetter,   count: 2, };\nattrTypeMap[FLOAT_MAT3]        = { size:  9, setter: matAttribSetter,   count: 3, };\nattrTypeMap[FLOAT_MAT4]        = { size: 16, setter: matAttribSetter,   count: 4, };\n\nconst errorRE = /ERROR:\\s*\\d+:(\\d+)/gi;\nfunction addLineNumbersWithError(src, log = '', lineOffset = 0) {\n  // Note: Error message formats are not defined by any spec so this may or may not work.\n  const matches = [...log.matchAll(errorRE)];\n  const lineNoToErrorMap = new Map(matches.map((m, ndx) => {\n    const lineNo = parseInt(m[1]);\n    const next = matches[ndx + 1];\n    const end = next ? next.index : log.length;\n    const msg = log.substring(m.index, end);\n    return [lineNo - 1, msg];\n  }));\n  return src.split('\\n').map((line, lineNo) => {\n    const err = lineNoToErrorMap.get(lineNo);\n    return `${lineNo + 1 + lineOffset}: ${line}${err ? `\\n\\n^^^ ${err}` : ''}`;\n  }).join('\\n');\n}\n\n/**\n * Error Callback\n * @callback ErrorCallback\n * @param {string} msg error message.\n * @param {number} [lineOffset] amount to add to line number\n * @memberOf module:twgl\n */\n\n/**\n * Program Callback\n * @callback ProgramCallback\n * @param {string} [err] error message, falsy if no error\n * @param {WebGLProgram|module:twgl.ProgramInfo} [result] the program or programInfo\n */\n\nconst spaceRE = /^[ \\t]*\\n/;\n\n/**\n * Remove the first end of line because WebGL 2.0 requires\n * #version 300 es\n * as the first line. No whitespace allowed before that line\n * so\n *\n * <script>\n * #version 300 es\n * </script>\n *\n * Has one line before it which is invalid according to GLSL ES 3.00\n *\n * @param {string} shaderSource The source of the shader\n * @returns {{shaderSource: string, lineOffset: number}}\n * @private\n */\nfunction prepShaderSource(shaderSource) {\n  let lineOffset = 0;\n  if (spaceRE.test(shaderSource)) {\n    lineOffset = 1;\n    shaderSource = shaderSource.replace(spaceRE, '');\n  }\n  return {lineOffset, shaderSource};\n}\n\n/**\n * @param {module:twgl.ProgramOptions} progOptions\n * @param {string} msg\n * @return null\n * @private\n */\nfunction reportError(progOptions, msg) {\n  progOptions.errorCallback(msg);\n  if (progOptions.callback) {\n    setTimeout(() => {\n      progOptions.callback(`${msg}\\n${progOptions.errors.join('\\n')}`);\n    });\n  }\n  return null;\n}\n\n/**\n * Check Shader status\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {number} shaderType The shader type\n * @param {WebGLShader} shader The shader\n * @param {ErrorCallback} [errFn] function to receive error message.\n * @return {string} errors or empty string\n * @private\n */\nfunction checkShaderStatus(gl, shaderType, shader, errFn) {\n  errFn = errFn || error;\n  // Check the compile status\n  const compiled = gl.getShaderParameter(shader, COMPILE_STATUS);\n  if (!compiled) {\n    // Something went wrong during compilation; get the error\n    const lastError = gl.getShaderInfoLog(shader);\n    const {lineOffset, shaderSource} = prepShaderSource(gl.getShaderSource(shader));\n    const error = `${addLineNumbersWithError(shaderSource, lastError, lineOffset)}\\nError compiling ${glEnumToString(gl, shaderType)}: ${lastError}`;\n    errFn(error);\n    return error;\n  }\n  return '';\n}\n\n/**\n * @typedef {Object} FullProgramSpec\n * @property {string[]} shaders the shader source or element ids.\n * @property {function(string)} [errorCallback] callback for errors\n * @property {Object.<string,number>|string[]} [attribLocations] a attribute name to location map, or array of attribute names where index = location.\n * @property {(module:twgl.BufferInfo|Object.<string,module:twgl.AttribInfo>|string[])} [transformFeedbackVaryings] If passed\n *   a BufferInfo will use the attribs names inside. If passed an object of AttribInfos will use the names from that object. Otherwise\n *   you can pass an array of names.\n * @property {number} [transformFeedbackMode] the mode to pass `gl.transformFeedbackVaryings`. Defaults to `SEPARATE_ATTRIBS`.\n * @property {ProgramCallback} [callback] callback for async program compilation.\n * @memberOf module:twgl\n */\n\n/**\n * @typedef {string[]|module:twgl.FullProgramSpec} ProgramSpec\n * @memberOf module:twgl\n */\n\n/**\n * @typedef {Object} ProgramOptions\n * @property {function(string)} [errorCallback] callback for errors\n * @property {Object.<string,number>|string[]} [attribLocations] a attribute name to location map, or array of attribute names where index = location.\n * @property {(module:twgl.BufferInfo|Object.<string,module:twgl.AttribInfo>|string[])} [transformFeedbackVaryings] If passed\n *   a BufferInfo will use the attribs names inside. If passed an object of AttribInfos will use the names from that object. Otherwise\n *   you can pass an array of names.\n * @property {number} [transformFeedbackMode] the mode to pass `gl.transformFeedbackVaryings`. Defaults to `SEPARATE_ATTRIBS`.\n * @property {ProgramCallback} [callback] callback for async program compilation.\n * @memberOf module:twgl\n */\n\n/**\n * Gets the program options based on all these optional arguments\n * @param {module:twgl.ProgramOptions|string[]} [opt_attribs] Options for the program or an array of attribs names. Locations will be assigned by index if not passed in\n * @param {number[]} [opt_locations] The locations for the. A parallel array to opt_attribs letting you assign locations.\n * @param {module:twgl.ErrorCallback} [opt_errorCallback] callback for errors. By default it just prints an error to the console\n *        on error. If you want something else pass an callback. It's passed an error message.\n * @return {module:twgl.ProgramOptions} an instance of ProgramOptions based on the arguments passed in\n * @private\n */\nfunction getProgramOptions(opt_attribs, opt_locations, opt_errorCallback) {\n  let transformFeedbackVaryings;\n  let transformFeedbackMode;\n  let callback;\n  if (typeof opt_locations === 'function') {\n    opt_errorCallback = opt_locations;\n    opt_locations = undefined;\n  }\n  if (typeof opt_attribs === 'function') {\n    opt_errorCallback = opt_attribs;\n    opt_attribs = undefined;\n  } else if (opt_attribs && !Array.isArray(opt_attribs)) {\n    const opt = opt_attribs;\n    opt_errorCallback = opt.errorCallback;\n    opt_attribs = opt.attribLocations;\n    transformFeedbackVaryings = opt.transformFeedbackVaryings;\n    transformFeedbackMode = opt.transformFeedbackMode;\n    callback = opt.callback;\n  }\n\n  const errorCallback = opt_errorCallback || error;\n  const errors = [];\n  const options = {\n    errorCallback(msg, ...args) {\n      errors.push(msg);\n      errorCallback(msg, ...args);\n    },\n    transformFeedbackVaryings,\n    transformFeedbackMode,\n    callback,\n    errors,\n  };\n\n  {\n    let attribLocations = {};\n    if (Array.isArray(opt_attribs)) {\n      opt_attribs.forEach(function(attrib,  ndx) {\n        attribLocations[attrib] = opt_locations ? opt_locations[ndx] : ndx;\n      });\n    } else {\n      attribLocations = opt_attribs || {};\n    }\n    options.attribLocations = attribLocations;\n  }\n\n  return options;\n}\n\nconst defaultShaderType = [\n  \"VERTEX_SHADER\",\n  \"FRAGMENT_SHADER\",\n];\n\nfunction getShaderTypeFromScriptType(gl, scriptType) {\n  if (scriptType.indexOf(\"frag\") >= 0) {\n    return FRAGMENT_SHADER;\n  } else if (scriptType.indexOf(\"vert\") >= 0) {\n    return VERTEX_SHADER;\n  }\n  return undefined;\n}\n\nfunction deleteProgramAndShaders(gl, program, notThese) {\n  const shaders = gl.getAttachedShaders(program);\n  for (const shader of shaders) {\n    if (notThese.has(shader)) {\n      gl.deleteShader(shader);\n    }\n  }\n  gl.deleteProgram(program);\n}\n\nconst wait = (ms = 0) => new Promise(resolve => setTimeout(resolve, ms));\n\nfunction createProgramNoCheck(gl, shaders, programOptions) {\n  const program = gl.createProgram();\n  const {\n    attribLocations,\n    transformFeedbackVaryings,\n    transformFeedbackMode,\n  } = getProgramOptions(programOptions);\n\n  for (let ndx = 0; ndx < shaders.length; ++ndx) {\n    let shader = shaders[ndx];\n    if (typeof shader === 'string') {\n      const elem = getElementById(shader);\n      const src = elem ? elem.text : shader;\n      let type = gl[defaultShaderType[ndx]];\n      if (elem && elem.type) {\n        type = getShaderTypeFromScriptType(gl, elem.type) || type;\n      }\n      shader = gl.createShader(type);\n      gl.shaderSource(shader, prepShaderSource(src).shaderSource);\n      gl.compileShader(shader);\n      gl.attachShader(program, shader);\n    }\n  }\n\n  Object.entries(attribLocations).forEach(([attrib, loc]) => gl.bindAttribLocation(program, loc, attrib));\n\n  {\n    let varyings = transformFeedbackVaryings;\n    if (varyings) {\n      if (varyings.attribs) {\n        varyings = varyings.attribs;\n      }\n      if (!Array.isArray(varyings)) {\n        varyings = Object.keys(varyings);\n      }\n      gl.transformFeedbackVaryings(program, varyings, transformFeedbackMode || SEPARATE_ATTRIBS);\n    }\n  }\n\n  gl.linkProgram(program);\n  return program;\n}\n\n/**\n * Creates a program, attaches (and/or compiles) shaders, binds attrib locations, links the\n * program.\n *\n * NOTE: There are 4 signatures for this function\n *\n *     twgl.createProgram(gl, [vs, fs], options);\n *     twgl.createProgram(gl, [vs, fs], opt_errFunc);\n *     twgl.createProgram(gl, [vs, fs], opt_attribs, opt_errFunc);\n *     twgl.createProgram(gl, [vs, fs], opt_attribs, opt_locations, opt_errFunc);\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {WebGLShader[]|string[]} shaders The shaders to attach, or element ids for their source, or strings that contain their source\n * @param {module:twgl.ProgramOptions|string[]|module:twgl.ErrorCallback} [opt_attribs] Options for the program or an array of attribs names or an error callback. Locations will be assigned by index if not passed in\n * @param {number[]|module:twgl.ErrorCallback} [opt_locations] The locations for the. A parallel array to opt_attribs letting you assign locations or an error callback.\n * @param {module:twgl.ErrorCallback} [opt_errorCallback] callback for errors. By default it just prints an error to the console\n *        on error. If you want something else pass an callback. It's passed an error message.\n * @return {WebGLProgram?} the created program or null if error of a callback was provided.\n * @memberOf module:twgl/programs\n */\nfunction createProgram(\n    gl, shaders, opt_attribs, opt_locations, opt_errorCallback) {\n  // This code is really convoluted, because it may or may not be async\n  // Maybe it would be better to have a separate function\n  const progOptions = getProgramOptions(opt_attribs, opt_locations, opt_errorCallback);\n  const shaderSet = new Set(shaders);\n  const program = createProgramNoCheck(gl, shaders, progOptions);\n\n  function hasErrors(gl, program) {\n    const errors = getProgramErrors(gl, program, progOptions.errorCallback);\n    if (errors) {\n      deleteProgramAndShaders(gl, program, shaderSet);\n    }\n    return errors;\n  }\n\n  if (progOptions.callback) {\n    waitForProgramLinkCompletionAsync(gl, program).then(() => {\n      const errors = hasErrors(gl, program);\n      progOptions.callback(errors, errors ? undefined : program);\n    });\n    return undefined;\n  }\n\n  return hasErrors(gl, program) ? undefined : program;\n}\n\n/**\n * This only works because the functions it wraps the first 2 arguments\n * are gl and any, followed by things that become programOptions\n * @private\n */\nfunction wrapCallbackFnToAsyncFn(fn) {\n  return function(gl, arg1, ...args) {\n    return new Promise((resolve, reject) => {\n      const programOptions = getProgramOptions(...args);\n      programOptions.callback = (err, program) => {\n        if (err) {\n          reject(err);\n        } else {\n          resolve(program);\n        }\n      };\n      fn(gl, arg1, programOptions);\n    });\n  };\n}\n\n/**\n * Same as createProgram but returns a promise\n *\n * NOTE: There are 4 signatures for this function\n *\n *     twgl.createProgramAsync(gl, [vs, fs], options);\n *     twgl.createProgramAsync(gl, [vs, fs], opt_errFunc);\n *     twgl.createProgramAsync(gl, [vs, fs], opt_attribs, opt_errFunc);\n *     twgl.createProgramAsync(gl, [vs, fs], opt_attribs, opt_locations, opt_errFunc);\n *\n * @function\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {WebGLShader[]|string[]} shaders The shaders to attach, or element ids for their source, or strings that contain their source\n * @param {module:twgl.ProgramOptions|string[]|module:twgl.ErrorCallback} [opt_attribs] Options for the program or an array of attribs names or an error callback. Locations will be assigned by index if not passed in\n * @param {number[]|module:twgl.ErrorCallback} [opt_locations] The locations for the. A parallel array to opt_attribs letting you assign locations or an error callback.\n * @param {module:twgl.ErrorCallback} [opt_errorCallback] callback for errors. By default it just prints an error to the console\n *        on error. If you want something else pass an callback. It's passed an error message.\n * @return {Promise<WebGLProgram>} The created program\n * @memberOf module:twgl/programs\n */\nconst createProgramAsync = wrapCallbackFnToAsyncFn(createProgram);\n\n/**\n * Same as createProgramInfo but returns a promise\n * @function\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n *        to use.\n * @param {string[]} shaderSources Array of sources for the\n *        shaders or ids. The first is assumed to be the vertex shader,\n *        the second the fragment shader.\n * @param {module:twgl.ProgramOptions|string[]|module:twgl.ErrorCallback} [opt_attribs] Options for the program or an array of attribs names or an error callback. Locations will be assigned by index if not passed in\n * @param {number[]|module:twgl.ErrorCallback} [opt_locations] The locations for the. A parallel array to opt_attribs letting you assign locations or an error callback.\n * @param {module:twgl.ErrorCallback} [opt_errorCallback] callback for errors. By default it just prints an error to the console\n *        on error. If you want something else pass an callback. It's passed an error message.\n * @return {Promise<module:twgl.ProgramInfo>} The created ProgramInfo\n * @memberOf module:twgl/programs\n */\nconst createProgramInfoAsync = wrapCallbackFnToAsyncFn(createProgramInfo);\n\nasync function waitForProgramLinkCompletionAsync(gl, program) {\n  const ext = gl.getExtension('KHR_parallel_shader_compile');\n  const checkFn = ext\n      ? (gl, program) => gl.getProgramParameter(program, ext.COMPLETION_STATUS_KHR)\n      : () => true;\n\n  let waitTime = 0;\n  do {\n    await wait(waitTime);  // must wait at least once\n    waitTime = 1000 / 60;\n  } while (!checkFn(gl, program));\n}\n\nasync function waitForAllProgramsLinkCompletionAsync(gl, programs) {\n  for (const program of Object.values(programs)) {\n    await waitForProgramLinkCompletionAsync(gl, program);\n  }\n}\n\n/**\n * Check a program's link status\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {WebGLProgram} program Program to check\n * @param {ErrorCallback} [errFn] func for errors\n * @return {string?} errors if program is failed, else undefined\n * @private\n */\nfunction getProgramErrors(gl, program, errFn) {\n  errFn = errFn || error;\n  // Check the link status\n  const linked = gl.getProgramParameter(program, LINK_STATUS);\n  if (!linked) {\n    // something went wrong with the link\n    const lastError = gl.getProgramInfoLog(program);\n    errFn(`Error in program linking: ${lastError}`);\n    // print any errors from these shaders\n    const shaders = gl.getAttachedShaders(program);\n    const errors = shaders.map(shader => checkShaderStatus(gl, gl.getShaderParameter(shader, gl.SHADER_TYPE), shader, errFn));\n    return `${lastError}\\n${errors.filter(_ => _).join('\\n')}`;\n  }\n  return undefined;\n}\n\n/**\n * Creates a program from 2 script tags.\n *\n * NOTE: There are 4 signatures for this function\n *\n *     twgl.createProgramFromScripts(gl, [vs, fs], opt_options);\n *     twgl.createProgramFromScripts(gl, [vs, fs], opt_errFunc);\n *     twgl.createProgramFromScripts(gl, [vs, fs], opt_attribs, opt_errFunc);\n *     twgl.createProgramFromScripts(gl, [vs, fs], opt_attribs, opt_locations, opt_errFunc);\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n *        to use.\n * @param {string[]} shaderScriptIds Array of ids of the script\n *        tags for the shaders. The first is assumed to be the\n *        vertex shader, the second the fragment shader.\n * @param {module:twgl.ProgramOptions|string[]|module:twgl.ErrorCallback} [opt_attribs] Options for the program or an array of attribs names or an error callback. Locations will be assigned by index if not passed in\n * @param {number[]|module:twgl.ErrorCallback} [opt_locations] The locations for the. A parallel array to opt_attribs letting you assign locations or an error callback.\n * @param {module:twgl.ErrorCallback} [opt_errorCallback] callback for errors. By default it just prints an error to the console\n *        on error. If you want something else pass an callback. It's passed an error message.\n * @return {WebGLProgram?} the created program or null if error or a callback was provided.\n * @memberOf module:twgl/programs\n */\nfunction createProgramFromScripts(\n    gl, shaderScriptIds, opt_attribs, opt_locations, opt_errorCallback) {\n  const progOptions = getProgramOptions(opt_attribs, opt_locations, opt_errorCallback);\n  const shaders = [];\n  for (const scriptId of shaderScriptIds) {\n    const shaderScript = getElementById(scriptId);\n    if (!shaderScript) {\n      return reportError(progOptions, `unknown script element: ${scriptId}`);\n    }\n    shaders.push(shaderScript.text);\n  }\n  return createProgram(gl, shaders, progOptions);\n}\n\n/**\n * Creates a program from 2 sources.\n *\n * NOTE: There are 4 signatures for this function\n *\n *     twgl.createProgramFromSource(gl, [vs, fs], opt_options);\n *     twgl.createProgramFromSource(gl, [vs, fs], opt_errFunc);\n *     twgl.createProgramFromSource(gl, [vs, fs], opt_attribs, opt_errFunc);\n *     twgl.createProgramFromSource(gl, [vs, fs], opt_attribs, opt_locations, opt_errFunc);\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n *        to use.\n * @param {string[]} shaderSources Array of sources for the\n *        shaders. The first is assumed to be the vertex shader,\n *        the second the fragment shader.\n * @param {module:twgl.ProgramOptions|string[]|module:twgl.ErrorCallback} [opt_attribs] Options for the program or an array of attribs names or an error callback. Locations will be assigned by index if not passed in\n * @param {number[]|module:twgl.ErrorCallback} [opt_locations] The locations for the. A parallel array to opt_attribs letting you assign locations or an error callback.\n * @param {module:twgl.ErrorCallback} [opt_errorCallback] callback for errors. By default it just prints an error to the console\n *        on error. If you want something else pass an callback. It's passed an error message.\n * @return {WebGLProgram?} the created program or null if error or a callback was provided.\n * @memberOf module:twgl/programs\n */\nfunction createProgramFromSources(\n    gl, shaderSources, opt_attribs, opt_locations, opt_errorCallback) {\n  return createProgram(gl, shaderSources, opt_attribs, opt_locations, opt_errorCallback);\n}\n\n/**\n * Returns true if attribute/uniform is a reserved/built in\n *\n * It makes no sense to me why GL returns these because it's\n * illegal to call `gl.getUniformLocation` and `gl.getAttribLocation`\n * with names that start with `gl_` (and `webgl_` in WebGL)\n *\n * I can only assume they are there because they might count\n * when computing the number of uniforms/attributes used when you want to\n * know if you are near the limit. That doesn't really make sense\n * to me but the fact that these get returned are in the spec.\n *\n * @param {WebGLActiveInfo} info As returned from `gl.getActiveUniform` or\n *    `gl.getActiveAttrib`.\n * @return {bool} true if it's reserved\n * @private\n */\nfunction isBuiltIn(info) {\n  const name = info.name;\n  return name.startsWith(\"gl_\") || name.startsWith(\"webgl_\");\n}\n\nconst tokenRE = /(\\.|\\[|]|\\w+)/g;\nconst isDigit = s => s >= '0' && s <= '9';\nfunction addSetterToUniformTree(fullPath, setter, node, uniformSetters) {\n  const tokens = fullPath.split(tokenRE).filter(s => s !== '');\n  let tokenNdx = 0;\n  let path = '';\n\n  for (;;) {\n    const token = tokens[tokenNdx++];  // has to be name or number\n    path += token;\n    const isArrayIndex = isDigit(token[0]);\n    const accessor = isArrayIndex\n        ? parseInt(token)\n        : token;\n    if (isArrayIndex) {\n      path += tokens[tokenNdx++];  // skip ']'\n    }\n    const isLastToken = tokenNdx === tokens.length;\n    if (isLastToken) {\n      node[accessor] = setter;\n      break;\n    } else {\n      const token = tokens[tokenNdx++];  // has to be . or [\n      const isArray = token === '[';\n      const child = node[accessor] || (isArray ? [] : {});\n      node[accessor] = child;\n      node = child;\n      uniformSetters[path] = uniformSetters[path] || function(node) {\n        return function(value) {\n          setUniformTree(node, value);\n        };\n      }(child);\n      path += token;\n    }\n  }\n}\n\n/**\n * Creates setter functions for all uniforms of a shader\n * program.\n *\n * @see {@link module:twgl.setUniforms}\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {WebGLProgram} program the program to create setters for.\n * @returns {Object.<string, function>} an object with a setter by name for each uniform\n * @memberOf module:twgl/programs\n */\nfunction createUniformSetters(gl, program) {\n  let textureUnit = 0;\n\n  /**\n   * Creates a setter for a uniform of the given program with it's\n   * location embedded in the setter.\n   * @param {WebGLProgram} program\n   * @param {WebGLUniformInfo} uniformInfo\n   * @returns {function} the created setter.\n   */\n  function createUniformSetter(program, uniformInfo, location) {\n    const isArray = uniformInfo.name.endsWith(\"[0]\");\n    const type = uniformInfo.type;\n    const typeInfo = typeMap[type];\n    if (!typeInfo) {\n      throw new Error(`unknown type: 0x${type.toString(16)}`); // we should never get here.\n    }\n    let setter;\n    if (typeInfo.bindPoint) {\n      // it's a sampler\n      const unit = textureUnit;\n      textureUnit += uniformInfo.size;\n      if (isArray) {\n        setter = typeInfo.arraySetter(gl, type, unit, location, uniformInfo.size);\n      } else {\n        setter = typeInfo.setter(gl, type, unit, location, uniformInfo.size);\n      }\n    } else {\n      if (typeInfo.arraySetter && isArray) {\n        setter = typeInfo.arraySetter(gl, location);\n      } else {\n        setter = typeInfo.setter(gl, location);\n      }\n    }\n    setter.location = location;\n    return setter;\n  }\n\n  const uniformSetters = {};\n  const uniformTree = {};\n  const numUniforms = gl.getProgramParameter(program, ACTIVE_UNIFORMS);\n\n  for (let ii = 0; ii < numUniforms; ++ii) {\n    const uniformInfo = gl.getActiveUniform(program, ii);\n    if (isBuiltIn(uniformInfo)) {\n      continue;\n    }\n    let name = uniformInfo.name;\n    // remove the array suffix.\n    if (name.endsWith(\"[0]\")) {\n      name = name.substr(0, name.length - 3);\n    }\n    const location = gl.getUniformLocation(program, uniformInfo.name);\n    // the uniform will have no location if it's in a uniform block\n    if (location) {\n      const setter = createUniformSetter(program, uniformInfo, location);\n      uniformSetters[name] = setter;\n      addSetterToUniformTree(name, setter, uniformTree, uniformSetters);\n    }\n  }\n\n  return uniformSetters;\n}\n\n/**\n * @typedef {Object} TransformFeedbackInfo\n * @property {number} index index of transform feedback\n * @property {number} type GL type\n * @property {number} size 1 - 4\n * @memberOf module:twgl\n */\n\n/**\n * Create TransformFeedbackInfo for passing to bindTransformFeedbackInfo.\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {WebGLProgram} program an existing WebGLProgram.\n * @return {Object<string, module:twgl.TransformFeedbackInfo>}\n * @memberOf module:twgl\n */\nfunction createTransformFeedbackInfo(gl, program) {\n  const info = {};\n  const numVaryings = gl.getProgramParameter(program, TRANSFORM_FEEDBACK_VARYINGS);\n  for (let ii = 0; ii < numVaryings; ++ii) {\n    const varying = gl.getTransformFeedbackVarying(program, ii);\n    info[varying.name] = {\n      index: ii,\n      type: varying.type,\n      size: varying.size,\n    };\n  }\n  return info;\n}\n\n/**\n * Binds buffers for transform feedback.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {(module:twgl.ProgramInfo|Object<string, module:twgl.TransformFeedbackInfo>)} transformFeedbackInfo A ProgramInfo or TransformFeedbackInfo.\n * @param {(module:twgl.BufferInfo|Object<string, module:twgl.AttribInfo>)} [bufferInfo] A BufferInfo or set of AttribInfos.\n * @memberOf module:twgl\n */\nfunction bindTransformFeedbackInfo(gl, transformFeedbackInfo, bufferInfo) {\n  if (transformFeedbackInfo.transformFeedbackInfo) {\n    transformFeedbackInfo = transformFeedbackInfo.transformFeedbackInfo;\n  }\n  if (bufferInfo.attribs) {\n    bufferInfo = bufferInfo.attribs;\n  }\n  for (const name in bufferInfo) {\n    const varying = transformFeedbackInfo[name];\n    if (varying) {\n      const buf = bufferInfo[name];\n      if (buf.offset) {\n        gl.bindBufferRange(TRANSFORM_FEEDBACK_BUFFER, varying.index, buf.buffer, buf.offset, buf.size);\n      } else {\n        gl.bindBufferBase(TRANSFORM_FEEDBACK_BUFFER, varying.index, buf.buffer);\n      }\n    }\n  }\n}\n\n/**\n * Creates a transform feedback and sets the buffers\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {module:twgl.ProgramInfo} programInfo A ProgramInfo as returned from {@link module:twgl.createProgramInfo}\n * @param {(module:twgl.BufferInfo|Object<string, module:twgl.AttribInfo>)} [bufferInfo] A BufferInfo or set of AttribInfos.\n * @return {WebGLTransformFeedback} the created transform feedback\n * @memberOf module:twgl\n */\nfunction createTransformFeedback(gl, programInfo, bufferInfo) {\n  const tf = gl.createTransformFeedback();\n  gl.bindTransformFeedback(TRANSFORM_FEEDBACK, tf);\n  gl.useProgram(programInfo.program);\n  bindTransformFeedbackInfo(gl, programInfo, bufferInfo);\n  gl.bindTransformFeedback(TRANSFORM_FEEDBACK, null);\n  return tf;\n}\n\n/**\n * @typedef {Object} UniformData\n * @property {string} name The name of the uniform\n * @property {number} type The WebGL type enum for this uniform\n * @property {number} size The number of elements for this uniform\n * @property {number} blockNdx The block index this uniform appears in\n * @property {number} offset The byte offset in the block for this uniform's value\n * @memberOf module:twgl\n */\n\n/**\n * The specification for one UniformBlockObject\n *\n * @typedef {Object} BlockSpec\n * @property {number} index The index of the block.\n * @property {number} size The size in bytes needed for the block\n * @property {number[]} uniformIndices The indices of the uniforms used by the block. These indices\n *    correspond to entries in a UniformData array in the {@link module:twgl.UniformBlockSpec}.\n * @property {bool} usedByVertexShader Self explanatory\n * @property {bool} usedByFragmentShader Self explanatory\n * @property {bool} used Self explanatory\n * @memberOf module:twgl\n */\n\n/**\n * A `UniformBlockSpec` represents the data needed to create and bind\n * UniformBlockObjects for a given program\n *\n * @typedef {Object} UniformBlockSpec\n * @property {Object.<string, module:twgl.BlockSpec>} blockSpecs The BlockSpec for each block by block name\n * @property {UniformData[]} uniformData An array of data for each uniform by uniform index.\n * @memberOf module:twgl\n */\n\n/**\n * Creates a UniformBlockSpec for the given program.\n *\n * A UniformBlockSpec represents the data needed to create and bind\n * UniformBlockObjects\n *\n * @param {WebGL2RenderingContext} gl A WebGL2 Rendering Context\n * @param {WebGLProgram} program A WebGLProgram for a successfully linked program\n * @return {module:twgl.UniformBlockSpec} The created UniformBlockSpec\n * @memberOf module:twgl/programs\n */\nfunction createUniformBlockSpecFromProgram(gl, program) {\n  const numUniforms = gl.getProgramParameter(program, ACTIVE_UNIFORMS);\n  const uniformData = [];\n  const uniformIndices = [];\n\n  for (let ii = 0; ii < numUniforms; ++ii) {\n    uniformIndices.push(ii);\n    uniformData.push({});\n    const uniformInfo = gl.getActiveUniform(program, ii);\n    uniformData[ii].name = uniformInfo.name;\n  }\n\n  [\n    [ \"UNIFORM_TYPE\", \"type\" ],\n    [ \"UNIFORM_SIZE\", \"size\" ],  // num elements\n    [ \"UNIFORM_BLOCK_INDEX\", \"blockNdx\" ],\n    [ \"UNIFORM_OFFSET\", \"offset\", ],\n  ].forEach(function(pair) {\n    const pname = pair[0];\n    const key = pair[1];\n    gl.getActiveUniforms(program, uniformIndices, gl[pname]).forEach(function(value, ndx) {\n      uniformData[ndx][key] = value;\n    });\n  });\n\n  const blockSpecs = {};\n\n  const numUniformBlocks = gl.getProgramParameter(program, ACTIVE_UNIFORM_BLOCKS);\n  for (let ii = 0; ii < numUniformBlocks; ++ii) {\n    const name = gl.getActiveUniformBlockName(program, ii);\n    const blockSpec = {\n      index: gl.getUniformBlockIndex(program, name),\n      usedByVertexShader: gl.getActiveUniformBlockParameter(program, ii, UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER),\n      usedByFragmentShader: gl.getActiveUniformBlockParameter(program, ii, UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER),\n      size: gl.getActiveUniformBlockParameter(program, ii, UNIFORM_BLOCK_DATA_SIZE),\n      uniformIndices: gl.getActiveUniformBlockParameter(program, ii, UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES),\n    };\n    blockSpec.used = blockSpec.usedByVertexShader || blockSpec.usedByFragmentShader;\n    blockSpecs[name] = blockSpec;\n  }\n\n  return {\n    blockSpecs: blockSpecs,\n    uniformData: uniformData,\n  };\n}\n\nconst arraySuffixRE = /\\[\\d+\\]\\.$/;  // better way to check?\n\nconst pad = (v, padding) => ((v + (padding - 1)) / padding | 0) * padding;\n\nfunction createUniformBlockUniformSetter(view, isArray, rows, cols) {\n  if (isArray || rows) {\n    cols = cols || 1;\n    const numElements = view.length;\n    const totalRows = numElements / 4;\n    return function(value) {\n      let dst = 0;\n      let src = 0;\n      for (let row = 0; row < totalRows; ++row) {\n        for (let col = 0; col < cols; ++col) {\n          view[dst++] = value[src++];\n        }\n        dst += 4 - cols;\n      }\n    };\n  } else {\n    return function(value) {\n      if (value.length) {\n        view.set(value);\n      } else {\n        view[0] = value;\n      }\n    };\n  }\n}\n\n/**\n * Represents a UniformBlockObject including an ArrayBuffer with all the uniform values\n * and a corresponding WebGLBuffer to hold those values on the GPU\n *\n * @typedef {Object} UniformBlockInfo\n * @property {string} name The name of the block\n * @property {ArrayBuffer} array The array buffer that contains the uniform values\n * @property {Float32Array} asFloat A float view on the array buffer. This is useful\n *    inspecting the contents of the buffer in the debugger.\n * @property {WebGLBuffer} buffer A WebGL buffer that will hold a copy of the uniform values for rendering.\n * @property {number} [offset] offset into buffer\n * @property {Object<string, ArrayBufferView>} uniforms A uniform name to ArrayBufferView map.\n *   each Uniform has a correctly typed `ArrayBufferView` into array at the correct offset\n *   and length of that uniform. So for example a float uniform would have a 1 float `Float32Array`\n *   view. A single mat4 would have a 16 element `Float32Array` view. An ivec2 would have an\n *   `Int32Array` view, etc.\n * @property {Object<string, function>} setters A setter for this uniform.\n *   The reason to use setters is elements of arrays are padded to vec4 sizes which\n *   means if you want to set an array of 4 floats you'd need to set 16 values\n *   (or set elements 0, 4, 8, 12). In other words\n *   `someBlockInfo.uniforms.some4FloatArrayUniform.set([0, , , , 1, , , , 2, , , , 3])`\n *   where as the setter handles just passing in [0, 1, 2, 3] either directly as in\n *   `someBlockInfo.setter.some4FloatArrayUniform.set([0, 1, 2, 3])` (not recommended)\n *   or via {@link module:twgl.setBlockUniforms}\n * @memberOf module:twgl\n */\n\n/**\n * Creates a `UniformBlockInfo` for the specified block\n *\n * Note: **If the blockName matches no existing blocks a warning is printed to the console and a dummy\n * `UniformBlockInfo` is returned**. This is because when debugging GLSL\n * it is common to comment out large portions of a shader or for example set\n * the final output to a constant. When that happens blocks get optimized out.\n * If this function did not create dummy blocks your code would crash when debugging.\n *\n * @param {WebGL2RenderingContext} gl A WebGL2RenderingContext\n * @param {WebGLProgram} program A WebGLProgram\n * @param {module:twgl.UniformBlockSpec} uniformBlockSpec. A UniformBlockSpec as returned\n *     from {@link module:twgl.createUniformBlockSpecFromProgram}.\n * @param {string} blockName The name of the block.\n * @return {module:twgl.UniformBlockInfo} The created UniformBlockInfo\n * @memberOf module:twgl/programs\n */\nfunction createUniformBlockInfoFromProgram(gl, program, uniformBlockSpec, blockName) {\n  const blockSpecs = uniformBlockSpec.blockSpecs;\n  const uniformData = uniformBlockSpec.uniformData;\n  const blockSpec = blockSpecs[blockName];\n  if (!blockSpec) {\n    warn(\"no uniform block object named:\", blockName);\n    return {\n      name: blockName,\n      uniforms: {},\n    };\n  }\n  const array = new ArrayBuffer(blockSpec.size);\n  const buffer = gl.createBuffer();\n  const uniformBufferIndex = blockSpec.index;\n  gl.bindBuffer(UNIFORM_BUFFER, buffer);\n  gl.uniformBlockBinding(program, blockSpec.index, uniformBufferIndex);\n\n  let prefix = blockName + \".\";\n  if (arraySuffixRE.test(prefix)) {\n    prefix = prefix.replace(arraySuffixRE, \".\");\n  }\n  const uniforms = {};\n  const setters = {};\n  const setterTree = {};\n  blockSpec.uniformIndices.forEach(function(uniformNdx) {\n    const data = uniformData[uniformNdx];\n    let name = data.name;\n    if (name.startsWith(prefix)) {\n      name = name.substr(prefix.length);\n    }\n    const isArray = name.endsWith('[0]');\n    if (isArray) {\n      name = name.substr(0, name.length - 3);\n    }\n    const typeInfo = typeMap[data.type];\n    const Type = typeInfo.Type;\n    const byteLength = isArray\n        ? pad(typeInfo.size, 16) * data.size\n        : typeInfo.size * data.size;\n    const uniformView = new Type(array, data.offset, byteLength / Type.BYTES_PER_ELEMENT);\n    uniforms[name] = uniformView;\n    // Note: I'm not sure what to do here. The original\n    // idea was to create TypedArray views into each part\n    // of the block. This is useful, for example if you have\n    // a block with { mat4: model; mat4 view; mat4 projection; }\n    // you'll get a Float32Array for each one suitable for\n    // passing to most JS math libraries including twgl's and glMatrix.js.\n    //\n    // But, if you have a an array of structures, especially if that\n    // array is large, you get a whole bunch of TypedArray views.\n    // Every one of them has overhead and switching between them all\n    // is probably a cache miss. In that case it would really be better\n    // to just have one view (asFloat) and have all the setters\n    // just reference the correct portion. But, then you can't easily\n    // treat a matrix, or a vec4, as a standalone thing like you can\n    // with all the views.\n    //\n    // Another problem with the views is they are not shared. With\n    // uniforms you have one set of setters. With UniformBlockInfo\n    // you have a set of setters *pre block instance*. That's because\n    // TypedArray views can't be mapped to different buffers.\n    //\n    // My gut right now is if you really want the speed and compactness\n    // then you should probably roll your own solution. TWGL's goal\n    // here is ease of use as AFAICT there is no simple generic efficient\n    // solution.\n    const setter = createUniformBlockUniformSetter(uniformView, isArray, typeInfo.rows, typeInfo.cols);\n    setters[name] = setter;\n    addSetterToUniformTree(name, setter, setterTree, setters);\n  });\n  return {\n    name: blockName,\n    array,\n    asFloat: new Float32Array(array),  // for debugging\n    buffer,\n    uniforms,\n    setters,\n  };\n}\n\n/**\n * Creates a `UniformBlockInfo` for the specified block\n *\n * Note: **If the blockName matches no existing blocks a warning is printed to the console and a dummy\n * `UniformBlockInfo` is returned**. This is because when debugging GLSL\n * it is common to comment out large portions of a shader or for example set\n * the final output to a constant. When that happens blocks get optimized out.\n * If this function did not create dummy blocks your code would crash when debugging.\n *\n * @param {WebGL2RenderingContext} gl A WebGL2RenderingContext\n * @param {module:twgl.ProgramInfo} programInfo a `ProgramInfo`\n *     as returned from {@link module:twgl.createProgramInfo}\n * @param {string} blockName The name of the block.\n * @return {module:twgl.UniformBlockInfo} The created UniformBlockInfo\n * @memberOf module:twgl/programs\n */\nfunction createUniformBlockInfo(gl, programInfo, blockName) {\n  return createUniformBlockInfoFromProgram(gl, programInfo.program, programInfo.uniformBlockSpec, blockName);\n}\n\n/**\n * Binds a uniform block to the matching uniform block point.\n * Matches by blocks by name so blocks must have the same name not just the same\n * structure.\n *\n * If you have changed any values and you upload the values into the corresponding WebGLBuffer\n * call {@link module:twgl.setUniformBlock} instead.\n *\n * @param {WebGL2RenderingContext} gl A WebGL 2 rendering context.\n * @param {(module:twgl.ProgramInfo|module:twgl.UniformBlockSpec)} programInfo a `ProgramInfo`\n *     as returned from {@link module:twgl.createProgramInfo} or or `UniformBlockSpec` as\n *     returned from {@link module:twgl.createUniformBlockSpecFromProgram}.\n * @param {module:twgl.UniformBlockInfo} uniformBlockInfo a `UniformBlockInfo` as returned from\n *     {@link module:twgl.createUniformBlockInfo}.\n * @return {bool} true if buffer was bound. If the programInfo has no block with the same block name\n *     no buffer is bound.\n * @memberOf module:twgl/programs\n */\nfunction bindUniformBlock(gl, programInfo, uniformBlockInfo) {\n  const uniformBlockSpec = programInfo.uniformBlockSpec || programInfo;\n  const blockSpec = uniformBlockSpec.blockSpecs[uniformBlockInfo.name];\n  if (blockSpec) {\n    const bufferBindIndex = blockSpec.index;\n    gl.bindBufferRange(UNIFORM_BUFFER, bufferBindIndex, uniformBlockInfo.buffer, uniformBlockInfo.offset || 0, uniformBlockInfo.array.byteLength);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Uploads the current uniform values to the corresponding WebGLBuffer\n * and binds that buffer to the program's corresponding bind point for the uniform block object.\n *\n * If you haven't changed any values and you only need to bind the uniform block object\n * call {@link module:twgl.bindUniformBlock} instead.\n *\n * @param {WebGL2RenderingContext} gl A WebGL 2 rendering context.\n * @param {(module:twgl.ProgramInfo|module:twgl.UniformBlockSpec)} programInfo a `ProgramInfo`\n *     as returned from {@link module:twgl.createProgramInfo} or or `UniformBlockSpec` as\n *     returned from {@link module:twgl.createUniformBlockSpecFromProgram}.\n * @param {module:twgl.UniformBlockInfo} uniformBlockInfo a `UniformBlockInfo` as returned from\n *     {@link module:twgl.createUniformBlockInfo}.\n * @memberOf module:twgl/programs\n */\nfunction setUniformBlock(gl, programInfo, uniformBlockInfo) {\n  if (bindUniformBlock(gl, programInfo, uniformBlockInfo)) {\n    gl.bufferData(UNIFORM_BUFFER, uniformBlockInfo.array, DYNAMIC_DRAW);\n  }\n}\n\n/**\n * Sets values of a uniform block object\n *\n * @param {module:twgl.UniformBlockInfo} uniformBlockInfo A UniformBlockInfo as returned by {@link module:twgl.createUniformBlockInfo}.\n * @param {Object.<string, ?>} values A uniform name to value map where the value is correct for the given\n *    type of uniform. So for example given a block like\n *\n *       uniform SomeBlock {\n *         float someFloat;\n *         vec2 someVec2;\n *         vec3 someVec3Array[2];\n *         int someInt;\n *       }\n *\n *  You can set the values of the uniform block with\n *\n *       twgl.setBlockUniforms(someBlockInfo, {\n *          someFloat: 12.3,\n *          someVec2: [1, 2],\n *          someVec3Array: [1, 2, 3, 4, 5, 6],\n *          someInt: 5,\n *       }\n *\n *  Arrays can be JavaScript arrays or typed arrays\n *\n *  You can also fill out structure and array values either via\n *  shortcut. Example\n *\n *     // -- in shader --\n *     struct Light {\n *       float intensity;\n *       vec4 color;\n *       float nearFar[2];\n *     };\n *     uniform Lights {\n *       Light lights[2];\n *     };\n *\n *     // in JavaScript\n *\n *     twgl.setBlockUniforms(someBlockInfo, {\n *       lights: [\n *         { intensity: 5.0, color: [1, 0, 0, 1], nearFar[0.1, 10] },\n *         { intensity: 2.0, color: [0, 0, 1, 1], nearFar[0.2, 15] },\n *       ],\n *     });\n *\n *   or the more traditional way\n *\n *     twgl.setBlockUniforms(someBlockInfo, {\n *       \"lights[0].intensity\": 5.0,\n *       \"lights[0].color\": [1, 0, 0, 1],\n *       \"lights[0].nearFar\": [0.1, 10],\n *       \"lights[1].intensity\": 2.0,\n *       \"lights[1].color\": [0, 0, 1, 1],\n *       \"lights[1].nearFar\": [0.2, 15],\n *     });\n *\n *   You can also specify partial paths\n *\n *     twgl.setBlockUniforms(someBlockInfo, {\n *       'lights[1]': { intensity: 5.0, color: [1, 0, 0, 1], nearFar[0.2, 15] },\n *     });\n *\n *   But you can not specify leaf array indices.\n *\n *     twgl.setBlockUniforms(someBlockInfo, {\n *       'lights[1].nearFar[1]': 15,     // BAD! nearFar is a leaf\n *       'lights[1].nearFar': [0.2, 15], // GOOD\n *     });\n *\n *  **IMPORTANT!**, packing in a UniformBlock is unintuitive.\n *  For example the actual layout of `someVec3Array` above in memory\n *  is `1, 2, 3, unused, 4, 5, 6, unused`. twgl takes in 6 values\n *  as shown about and copies them, skipping the padding. This might\n *  be confusing if you're already familiar with Uniform blocks.\n *\n *  If you want to deal with the padding yourself you can access the array\n *  buffer views directly. eg:\n *\n *      someBlockInfo.someVec3Array.set([1, 2, 3, 0, 4, 5, 6, 0]);\n *\n *  Any name that doesn't match will be ignored\n * @memberOf module:twgl/programs\n */\nfunction setBlockUniforms(uniformBlockInfo, values) {\n  const setters = uniformBlockInfo.setters;\n  for (const name in values) {\n    const setter = setters[name];\n    if (setter) {\n      const value = values[name];\n      setter(value);\n    }\n  }\n}\n\nfunction setUniformTree(tree, values) {\n  for (const name in values) {\n    const prop = tree[name];\n    if (typeof prop === 'function') {\n      prop(values[name]);\n    } else {\n      setUniformTree(tree[name], values[name]);\n    }\n  }\n}\n\n/**\n * Set uniforms and binds related textures.\n *\n * example:\n *\n *     const programInfo = createProgramInfo(\n *         gl, [\"some-vs\", \"some-fs\"]);\n *\n *     const tex1 = gl.createTexture();\n *     const tex2 = gl.createTexture();\n *\n *     ... assume we setup the textures with data ...\n *\n *     const uniforms = {\n *       u_someSampler: tex1,\n *       u_someOtherSampler: tex2,\n *       u_someColor: [1,0,0,1],\n *       u_somePosition: [0,1,1],\n *       u_someMatrix: [\n *         1,0,0,0,\n *         0,1,0,0,\n *         0,0,1,0,\n *         0,0,0,0,\n *       ],\n *     };\n *\n *     gl.useProgram(programInfo.program);\n *\n * This will automatically bind the textures AND set the\n * uniforms.\n *\n *     twgl.setUniforms(programInfo, uniforms);\n *\n * For the example above it is equivalent to\n *\n *     let texUnit = 0;\n *     gl.activeTexture(gl.TEXTURE0 + texUnit);\n *     gl.bindTexture(gl.TEXTURE_2D, tex1);\n *     gl.uniform1i(u_someSamplerLocation, texUnit++);\n *     gl.activeTexture(gl.TEXTURE0 + texUnit);\n *     gl.bindTexture(gl.TEXTURE_2D, tex2);\n *     gl.uniform1i(u_someSamplerLocation, texUnit++);\n *     gl.uniform4fv(u_someColorLocation, [1, 0, 0, 1]);\n *     gl.uniform3fv(u_somePositionLocation, [0, 1, 1]);\n *     gl.uniformMatrix4fv(u_someMatrix, false, [\n *         1,0,0,0,\n *         0,1,0,0,\n *         0,0,1,0,\n *         0,0,0,0,\n *       ]);\n *\n * Note it is perfectly reasonable to call `setUniforms` multiple times. For example\n *\n *     const uniforms = {\n *       u_someSampler: tex1,\n *       u_someOtherSampler: tex2,\n *     };\n *\n *     const moreUniforms {\n *       u_someColor: [1,0,0,1],\n *       u_somePosition: [0,1,1],\n *       u_someMatrix: [\n *         1,0,0,0,\n *         0,1,0,0,\n *         0,0,1,0,\n *         0,0,0,0,\n *       ],\n *     };\n *\n *     twgl.setUniforms(programInfo, uniforms);\n *     twgl.setUniforms(programInfo, moreUniforms);\n *\n * You can also add WebGLSamplers to uniform samplers as in\n *\n *     const uniforms = {\n *       u_someSampler: {\n *         texture: someWebGLTexture,\n *         sampler: someWebGLSampler,\n *       },\n *     };\n *\n * In which case both the sampler and texture will be bound to the\n * same unit.\n *\n * @param {(module:twgl.ProgramInfo|Object.<string, function>)} setters a `ProgramInfo` as returned from `createProgramInfo` or the setters returned from\n *        `createUniformSetters`.\n * @param {Object.<string, ?>} values an object with values for the\n *        uniforms.\n *   You can pass multiple objects by putting them in an array or by calling with more arguments.For example\n *\n *     const sharedUniforms = {\n *       u_fogNear: 10,\n *       u_projection: ...\n *       ...\n *     };\n *\n *     const localUniforms = {\n *       u_world: ...\n *       u_diffuseColor: ...\n *     };\n *\n *     twgl.setUniforms(programInfo, sharedUniforms, localUniforms);\n *\n *     // is the same as\n *\n *     twgl.setUniforms(programInfo, [sharedUniforms, localUniforms]);\n *\n *     // is the same as\n *\n *     twgl.setUniforms(programInfo, sharedUniforms);\n *     twgl.setUniforms(programInfo, localUniforms};\n *\n *   You can also fill out structure and array values either via\n *   shortcut. Example\n *\n *     // -- in shader --\n *     struct Light {\n *       float intensity;\n *       vec4 color;\n *       float nearFar[2];\n *     };\n *     uniform Light lights[2];\n *\n *     // in JavaScript\n *\n *     twgl.setUniforms(programInfo, {\n *       lights: [\n *         { intensity: 5.0, color: [1, 0, 0, 1], nearFar[0.1, 10] },\n *         { intensity: 2.0, color: [0, 0, 1, 1], nearFar[0.2, 15] },\n *       ],\n *     });\n *\n *   or the more traditional way\n *\n *     twgl.setUniforms(programInfo, {\n *       \"lights[0].intensity\": 5.0,\n *       \"lights[0].color\": [1, 0, 0, 1],\n *       \"lights[0].nearFar\": [0.1, 10],\n *       \"lights[1].intensity\": 2.0,\n *       \"lights[1].color\": [0, 0, 1, 1],\n *       \"lights[1].nearFar\": [0.2, 15],\n *     });\n *\n *   You can also specify partial paths\n *\n *     twgl.setUniforms(programInfo, {\n *       'lights[1]': { intensity: 5.0, color: [1, 0, 0, 1], nearFar[0.2, 15] },\n *     });\n *\n *   But you can not specify leaf array indices\n *\n *     twgl.setUniforms(programInfo, {\n *       'lights[1].nearFar[1]': 15,     // BAD! nearFar is a leaf\n *       'lights[1].nearFar': [0.2, 15], // GOOD\n *     });\n *\n * @memberOf module:twgl/programs\n */\nfunction setUniforms(setters, ...args) {  // eslint-disable-line\n  const actualSetters = setters.uniformSetters || setters;\n  const numArgs = args.length;\n  for (let aNdx = 0; aNdx < numArgs; ++aNdx) {\n    const values = args[aNdx];\n    if (Array.isArray(values)) {\n      const numValues = values.length;\n      for (let ii = 0; ii < numValues; ++ii) {\n        setUniforms(actualSetters, values[ii]);\n      }\n    } else {\n      for (const name in values) {\n        const setter = actualSetters[name];\n        if (setter) {\n          setter(values[name]);\n        }\n      }\n    }\n  }\n}\n\n/**\n * Alias for `setUniforms`\n * @function\n * @param {(module:twgl.ProgramInfo|Object.<string, function>)} setters a `ProgramInfo` as returned from `createProgramInfo` or the setters returned from\n *        `createUniformSetters`.\n * @param {Object.<string, ?>} values an object with values for the\n * @memberOf module:twgl/programs\n */\nconst setUniformsAndBindTextures = setUniforms;\n\n/**\n * Creates setter functions for all attributes of a shader\n * program. You can pass this to {@link module:twgl.setBuffersAndAttributes} to set all your buffers and attributes.\n *\n * @see {@link module:twgl.setAttributes} for example\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {WebGLProgram} program the program to create setters for.\n * @return {Object.<string, function>} an object with a setter for each attribute by name.\n * @memberOf module:twgl/programs\n */\nfunction createAttributeSetters(gl, program) {\n  const attribSetters = {\n  };\n\n  const numAttribs = gl.getProgramParameter(program, ACTIVE_ATTRIBUTES);\n  for (let ii = 0; ii < numAttribs; ++ii) {\n    const attribInfo = gl.getActiveAttrib(program, ii);\n    if (isBuiltIn(attribInfo)) {\n      continue;\n    }\n    const index = gl.getAttribLocation(program, attribInfo.name);\n    const typeInfo = attrTypeMap[attribInfo.type];\n    const setter = typeInfo.setter(gl, index, typeInfo);\n    setter.location = index;\n    attribSetters[attribInfo.name] = setter;\n  }\n\n  return attribSetters;\n}\n\n/**\n * Sets attributes and binds buffers (deprecated... use {@link module:twgl.setBuffersAndAttributes})\n *\n * Example:\n *\n *     const program = createProgramFromScripts(\n *         gl, [\"some-vs\", \"some-fs\");\n *\n *     const attribSetters = createAttributeSetters(program);\n *\n *     const positionBuffer = gl.createBuffer();\n *     const texcoordBuffer = gl.createBuffer();\n *\n *     const attribs = {\n *       a_position: {buffer: positionBuffer, numComponents: 3},\n *       a_texcoord: {buffer: texcoordBuffer, numComponents: 2},\n *     };\n *\n *     gl.useProgram(program);\n *\n * This will automatically bind the buffers AND set the\n * attributes.\n *\n *     setAttributes(attribSetters, attribs);\n *\n * Properties of attribs. For each attrib you can add\n * properties:\n *\n * *   type: the type of data in the buffer. Default = gl.FLOAT\n * *   normalize: whether or not to normalize the data. Default = false\n * *   stride: the stride. Default = 0\n * *   offset: offset into the buffer. Default = 0\n * *   divisor: the divisor for instances. Default = undefined\n *\n * For example if you had 3 value float positions, 2 value\n * float texcoord and 4 value uint8 colors you'd setup your\n * attribs like this\n *\n *     const attribs = {\n *       a_position: {buffer: positionBuffer, numComponents: 3},\n *       a_texcoord: {buffer: texcoordBuffer, numComponents: 2},\n *       a_color: {\n *         buffer: colorBuffer,\n *         numComponents: 4,\n *         type: gl.UNSIGNED_BYTE,\n *         normalize: true,\n *       },\n *     };\n *\n * @param {Object.<string, function>} setters Attribute setters as returned from createAttributeSetters\n * @param {Object.<string, module:twgl.AttribInfo>} buffers AttribInfos mapped by attribute name.\n * @memberOf module:twgl/programs\n * @deprecated use {@link module:twgl.setBuffersAndAttributes}\n * @private\n */\nfunction setAttributes(setters, buffers) {\n  for (const name in buffers) {\n    const setter = setters[name];\n    if (setter) {\n      setter(buffers[name]);\n    }\n  }\n}\n\n/**\n * Sets attributes and buffers including the `ELEMENT_ARRAY_BUFFER` if appropriate\n *\n * Example:\n *\n *     const programInfo = createProgramInfo(\n *         gl, [\"some-vs\", \"some-fs\");\n *\n *     const arrays = {\n *       position: { numComponents: 3, data: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0], },\n *       texcoord: { numComponents: 2, data: [0, 0, 0, 1, 1, 0, 1, 1],                 },\n *     };\n *\n *     const bufferInfo = createBufferInfoFromArrays(gl, arrays);\n *\n *     gl.useProgram(programInfo.program);\n *\n * This will automatically bind the buffers AND set the\n * attributes.\n *\n *     setBuffersAndAttributes(gl, programInfo, bufferInfo);\n *\n * For the example above it is equivalent to\n *\n *     gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\n *     gl.enableVertexAttribArray(a_positionLocation);\n *     gl.vertexAttribPointer(a_positionLocation, 3, gl.FLOAT, false, 0, 0);\n *     gl.bindBuffer(gl.ARRAY_BUFFER, texcoordBuffer);\n *     gl.enableVertexAttribArray(a_texcoordLocation);\n *     gl.vertexAttribPointer(a_texcoordLocation, 4, gl.FLOAT, false, 0, 0);\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext.\n * @param {(module:twgl.ProgramInfo|Object.<string, function>)} setters A `ProgramInfo` as returned from {@link module:twgl.createProgramInfo} or Attribute setters as returned from {@link module:twgl.createAttributeSetters}\n * @param {(module:twgl.BufferInfo|module:twgl.VertexArrayInfo)} buffers a `BufferInfo` as returned from {@link module:twgl.createBufferInfoFromArrays}.\n *   or a `VertexArrayInfo` as returned from {@link module:twgl.createVertexArrayInfo}\n * @memberOf module:twgl/programs\n */\nfunction setBuffersAndAttributes(gl, programInfo, buffers) {\n  if (buffers.vertexArrayObject) {\n    gl.bindVertexArray(buffers.vertexArrayObject);\n  } else {\n    setAttributes(programInfo.attribSetters || programInfo, buffers.attribs);\n    if (buffers.indices) {\n      gl.bindBuffer(ELEMENT_ARRAY_BUFFER$1, buffers.indices);\n    }\n  }\n}\n\n/**\n * @typedef {Object} ProgramInfo\n * @property {WebGLProgram} program A shader program\n * @property {Object<string, function>} uniformSetters object of setters as returned from createUniformSetters,\n * @property {Object<string, function>} attribSetters object of setters as returned from createAttribSetters,\n * @property {module:twgl.UniformBlockSpec} [uniformBlockSpec] a uniform block spec for making UniformBlockInfos with createUniformBlockInfo etc..\n * @property {Object<string, module:twgl.TransformFeedbackInfo>} [transformFeedbackInfo] info for transform feedbacks\n * @memberOf module:twgl\n */\n\n/**\n * Creates a ProgramInfo from an existing program.\n *\n * A ProgramInfo contains\n *\n *     programInfo = {\n *        program: WebGLProgram,\n *        uniformSetters: object of setters as returned from createUniformSetters,\n *        attribSetters: object of setters as returned from createAttribSetters,\n *     }\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n *        to use.\n * @param {WebGLProgram} program an existing WebGLProgram.\n * @return {module:twgl.ProgramInfo} The created ProgramInfo.\n * @memberOf module:twgl/programs\n */\nfunction createProgramInfoFromProgram(gl, program) {\n  const uniformSetters = createUniformSetters(gl, program);\n  const attribSetters = createAttributeSetters(gl, program);\n  const programInfo = {\n    program,\n    uniformSetters,\n    attribSetters,\n  };\n\n  if (isWebGL2(gl)) {\n    programInfo.uniformBlockSpec = createUniformBlockSpecFromProgram(gl, program);\n    programInfo.transformFeedbackInfo = createTransformFeedbackInfo(gl, program);\n  }\n\n  return programInfo;\n}\n\nconst notIdRE = /\\s|{|}|;/;\n\n/**\n * Creates a ProgramInfo from 2 sources.\n *\n * A ProgramInfo contains\n *\n *     programInfo = {\n *        program: WebGLProgram,\n *        uniformSetters: object of setters as returned from createUniformSetters,\n *        attribSetters: object of setters as returned from createAttribSetters,\n *     }\n *\n * NOTE: There are 4 signatures for this function\n *\n *     twgl.createProgramInfo(gl, [vs, fs], options);\n *     twgl.createProgramInfo(gl, [vs, fs], opt_errFunc);\n *     twgl.createProgramInfo(gl, [vs, fs], opt_attribs, opt_errFunc);\n *     twgl.createProgramInfo(gl, [vs, fs], opt_attribs, opt_locations, opt_errFunc);\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n *        to use.\n * @param {string[]} shaderSources Array of sources for the\n *        shaders or ids. The first is assumed to be the vertex shader,\n *        the second the fragment shader.\n * @param {module:twgl.ProgramOptions|string[]|module:twgl.ErrorCallback} [opt_attribs] Options for the program or an array of attribs names or an error callback. Locations will be assigned by index if not passed in\n * @param {number[]|module:twgl.ErrorCallback} [opt_locations] The locations for the. A parallel array to opt_attribs letting you assign locations or an error callback.\n * @param {module:twgl.ErrorCallback} [opt_errorCallback] callback for errors. By default it just prints an error to the console\n *        on error. If you want something else pass an callback. It's passed an error message.\n * @return {module:twgl.ProgramInfo?} The created ProgramInfo or null if it failed to link or compile\n * @memberOf module:twgl/programs\n */\nfunction createProgramInfo(\n    gl, shaderSources, opt_attribs, opt_locations, opt_errorCallback) {\n  const progOptions = getProgramOptions(opt_attribs, opt_locations, opt_errorCallback);\n  const errors = [];\n  shaderSources = shaderSources.map(function(source) {\n    // Lets assume if there is no \\n it's an id\n    if (!notIdRE.test(source)) {\n      const script = getElementById(source);\n      if (!script) {\n        const err = `no element with id: ${source}`;\n        progOptions.errorCallback(err);\n        errors.push(err);\n      } else {\n        source = script.text;\n      }\n    }\n    return source;\n  });\n\n  if (errors.length) {\n    return reportError(progOptions, '');\n  }\n\n  const origCallback = progOptions.callback;\n  if (origCallback) {\n    progOptions.callback = (err, program) => {\n      origCallback(err, err ? undefined : createProgramInfoFromProgram(gl, program));\n    };\n  }\n\n  const program = createProgramFromSources(gl, shaderSources, progOptions);\n  if (!program) {\n    return null;\n  }\n\n  return createProgramInfoFromProgram(gl, program);\n}\n\nfunction checkAllPrograms(gl, programs, programSpecs, noDeleteShadersSet, programOptions) {\n  // check errors for everything.\n  for (const [name, program] of Object.entries(programs)) {\n    const options = {...programOptions};\n    const spec = programSpecs[name];\n    if (!Array.isArray(spec)) {\n      Object.assign(options, spec);\n    }\n    const errors = getProgramErrors(gl, program, options.errorCallback);\n    if (errors) {\n      // delete everything we created\n      for (const program of Object.values(programs)) {\n        const shaders = gl.getAttachedShaders(program);\n        gl.deleteProgram(program);\n        for (const shader of shaders) {\n          // Don't delete it if we didn't create it.\n          if (!noDeleteShadersSet.has(shader)) {\n            gl.deleteShader(shader);\n          }\n        }\n      }\n      return errors;\n    }\n  }\n\n  return undefined;\n}\n\n/**\n * Creates multiple programs\n *\n * Note: the reason this function exists is because the fastest way to create multiple\n * programs in WebGL is to create and compile all shaders and link all programs and only\n * afterwards check if they succeeded. In that way, giving all your shaders\n *\n * @see {@link module:twgl.createProgram}\n *\n * Example:\n *\n *     const programs = twgl.createPrograms(gl, {\n *       lambert: [lambertVS, lambertFS],\n *       phong: [phongVS, phoneFS],\n *       particles: {\n *         shaders: [particlesVS, particlesFS],\n *         transformFeedbackVaryings: ['position', 'velocity'],\n *       },\n *     });\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {Object.<string, module:twgl.ProgramSpec>} programSpecs An object of ProgramSpecs, one per program.\n * @param {module:twgl.ProgramOptions} [programOptions] options to apply to all programs\n * @return {Object.<string, WebGLProgram>?} the created programInfos by name\n */\nfunction createPrograms(gl, programSpecs, programOptions = {}) {\n  // Remember existing shaders so that if there is an error we don't delete them\n  const noDeleteShadersSet = new Set();\n\n  // compile and link everything\n  const programs = Object.fromEntries(Object.entries(programSpecs).map(([name, spec]) => {\n    const options = {...programOptions};\n    const shaders = Array.isArray(spec) ? spec : spec.shaders;\n    if (!Array.isArray(spec)) {\n      Object.assign(options, spec);\n    }\n    shaders.forEach(noDeleteShadersSet.add, noDeleteShadersSet);\n    return [name, createProgramNoCheck(gl, shaders, options)];\n  }));\n\n  if (programOptions.callback) {\n    waitForAllProgramsLinkCompletionAsync(gl, programs).then(() => {\n      const errors = checkAllPrograms(gl, programs, programSpecs, noDeleteShadersSet, programOptions);\n      programOptions.callback(errors, errors ? undefined : programs);\n    });\n    return undefined;\n  }\n\n  const errors = checkAllPrograms(gl, programs, programSpecs, noDeleteShadersSet, programOptions);\n  return errors ? undefined : programs;\n}\n\n/**\n * Creates multiple programInfos\n *\n * Note: the reason this function exists is because the fastest way to create multiple\n * programs in WebGL is to create and compile all shaders and link all programs and only\n * afterwards check if they succeeded. In that way, giving all your shaders\n *\n * @see {@link module:twgl.createProgramInfo}\n *\n * Examples:\n *\n *     const programInfos = twgl.createProgramInfos(gl, {\n *       lambert: [lambertVS, lambertFS],\n *       phong: [phongVS, phoneFS],\n *       particles: {\n *         shaders: [particlesVS, particlesFS],\n *         transformFeedbackVaryings: ['position', 'velocity'],\n *       },\n *     });\n *\n * or\n *\n *     const {lambert, phong, particles} = twgl.createProgramInfos(gl, {\n *       lambert: [lambertVS, lambertFS],\n *       phong: [phongVS, phoneFS],\n *       particles: {\n *         shaders: [particlesVS, particlesFS],\n *         transformFeedbackVaryings: ['position', 'velocity'],\n *       },\n *     });\n *\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {Object.<string, module:twgl.ProgramSpec>} programSpecs An object of ProgramSpecs, one per program.\n * @param {module:twgl.ProgramOptions} [programOptions] options to apply to all programs\n * @return {Object.<string, module:twgl.ProgramInfo>?} the created programInfos by name\n */\nfunction createProgramInfos(gl, programSpecs, programOptions) {\n  programOptions = getProgramOptions(programOptions);\n\n  function createProgramInfosForPrograms(gl, programs) {\n    return Object.fromEntries(Object.entries(programs).map(([name, program]) =>\n      [name, createProgramInfoFromProgram(gl, program)]\n    ));\n  }\n\n  const origCallback = programOptions.callback;\n  if (origCallback) {\n    programOptions.callback = (err, programs) => {\n      origCallback(err, err ? undefined : createProgramInfosForPrograms(gl, programs));\n    };\n  }\n\n  const programs = createPrograms(gl, programSpecs, programOptions);\n  if (origCallback || !programs) {\n    return undefined;\n  }\n\n  return createProgramInfosForPrograms(gl, programs);\n}\n\n/**\n * Creates multiple programs asynchronously\n *\n * @see {@link module:twgl.createProgramAsync}\n *\n * Example:\n *\n *     const programs = await twgl.createProgramsAsync(gl, {\n *       lambert: [lambertVS, lambertFS],\n *       phong: [phongVS, phoneFS],\n *       particles: {\n *         shaders: [particlesVS, particlesFS],\n *         transformFeedbackVaryings: ['position', 'velocity'],\n *       },\n *     });\n *\n * @function\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {Object.<string, module:twgl.ProgramSpec>} programSpecs An object of ProgramSpecs, one per program.\n * @param {module:twgl.ProgramOptions} [programOptions] options to apply to all programs\n * @return {Object.<string, WebGLProgram>?} the created programInfos by name\n */\nconst createProgramsAsync = wrapCallbackFnToAsyncFn(createPrograms);\n\n/**\n * Creates multiple programInfos asynchronously\n *\n * @see {@link module:twgl.createProgramInfoAsync}\n *\n * Example:\n *\n *     const programInfos = await twgl.createProgramInfosAsync(gl, {\n *       lambert: [lambertVS, lambertFS],\n *       phong: [phongVS, phoneFS],\n *       particles: {\n *         shaders: [particlesVS, particlesFS],\n *         transformFeedbackVaryings: ['position', 'velocity'],\n *       },\n *     });\n *\n * @function\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {Object.<string, module:twgl.ProgramSpec>} programSpecs An object of ProgramSpecs, one per program.\n * @param {module:twgl.ProgramOptions} [programOptions] options to apply to all programs\n * @return {Promise<Object.<string, module:twgl.ProgramInfo>>} the created programInfos by name\n */\nconst createProgramInfosAsync = wrapCallbackFnToAsyncFn(createProgramInfos);\n\nvar programs = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  createAttributeSetters: createAttributeSetters,\n  createProgram: createProgram,\n  createProgramAsync: createProgramAsync,\n  createPrograms: createPrograms,\n  createProgramsAsync: createProgramsAsync,\n  createProgramFromScripts: createProgramFromScripts,\n  createProgramFromSources: createProgramFromSources,\n  createProgramInfo: createProgramInfo,\n  createProgramInfoAsync: createProgramInfoAsync,\n  createProgramInfos: createProgramInfos,\n  createProgramInfosAsync: createProgramInfosAsync,\n  createProgramInfoFromProgram: createProgramInfoFromProgram,\n  createUniformSetters: createUniformSetters,\n  createUniformBlockSpecFromProgram: createUniformBlockSpecFromProgram,\n  createUniformBlockInfoFromProgram: createUniformBlockInfoFromProgram,\n  createUniformBlockInfo: createUniformBlockInfo,\n  createTransformFeedback: createTransformFeedback,\n  createTransformFeedbackInfo: createTransformFeedbackInfo,\n  bindTransformFeedbackInfo: bindTransformFeedbackInfo,\n  setAttributes: setAttributes,\n  setBuffersAndAttributes: setBuffersAndAttributes,\n  setUniforms: setUniforms,\n  setUniformsAndBindTextures: setUniformsAndBindTextures,\n  setUniformBlock: setUniformBlock,\n  setBlockUniforms: setBlockUniforms,\n  bindUniformBlock: bindUniformBlock\n});\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\nconst TRIANGLES                      = 0x0004;\nconst UNSIGNED_SHORT                 = 0x1403;\n\n/**\n * Drawing related functions\n *\n * For backward compatibility they are available at both `twgl.draw` and `twgl`\n * itself\n *\n * See {@link module:twgl} for core functions\n *\n * @module twgl/draw\n */\n\n/**\n * Calls `gl.drawElements` or `gl.drawArrays`, whichever is appropriate\n *\n * normally you'd call `gl.drawElements` or `gl.drawArrays` yourself\n * but calling this means if you switch from indexed data to non-indexed\n * data you don't have to remember to update your draw call.\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @param {(module:twgl.BufferInfo|module:twgl.VertexArrayInfo)} bufferInfo A BufferInfo as returned from {@link module:twgl.createBufferInfoFromArrays} or\n *   a VertexArrayInfo as returned from {@link module:twgl.createVertexArrayInfo}\n * @param {number} [type] eg (gl.TRIANGLES, gl.LINES, gl.POINTS, gl.TRIANGLE_STRIP, ...). Defaults to `gl.TRIANGLES`\n * @param {number} [count] An optional count. Defaults to bufferInfo.numElements\n * @param {number} [offset] An optional offset. Defaults to 0.\n * @param {number} [instanceCount] An optional instanceCount. if set then `drawArraysInstanced` or `drawElementsInstanced` will be called\n * @memberOf module:twgl/draw\n */\nfunction drawBufferInfo(gl, bufferInfo, type, count, offset, instanceCount) {\n  type = type === undefined ? TRIANGLES : type;\n  const indices = bufferInfo.indices;\n  const elementType = bufferInfo.elementType;\n  const numElements = count === undefined ? bufferInfo.numElements : count;\n  offset = offset === undefined ? 0 : offset;\n  if (elementType || indices) {\n    if (instanceCount !== undefined) {\n      gl.drawElementsInstanced(type, numElements, elementType === undefined ? UNSIGNED_SHORT : bufferInfo.elementType, offset, instanceCount);\n    } else {\n      gl.drawElements(type, numElements, elementType === undefined ? UNSIGNED_SHORT : bufferInfo.elementType, offset);\n    }\n  } else {\n    if (instanceCount !== undefined) {\n      gl.drawArraysInstanced(type, offset, numElements, instanceCount);\n    } else {\n      gl.drawArrays(type, offset, numElements);\n    }\n  }\n}\n\n/**\n * A DrawObject is useful for putting objects in to an array and passing them to {@link module:twgl.drawObjectList}.\n *\n * You need either a `BufferInfo` or a `VertexArrayInfo`.\n *\n * @typedef {Object} DrawObject\n * @property {boolean} [active] whether or not to draw. Default = `true` (must be `false` to be not true). In other words `undefined` = `true`\n * @property {number} [type] type to draw eg. `gl.TRIANGLES`, `gl.LINES`, etc...\n * @property {module:twgl.ProgramInfo} programInfo A ProgramInfo as returned from {@link module:twgl.createProgramInfo}\n * @property {module:twgl.BufferInfo} [bufferInfo] A BufferInfo as returned from {@link module:twgl.createBufferInfoFromArrays}\n * @property {module:twgl.VertexArrayInfo} [vertexArrayInfo] A VertexArrayInfo as returned from {@link module:twgl.createVertexArrayInfo}\n * @property {Object<string, ?>} uniforms The values for the uniforms.\n *   You can pass multiple objects by putting them in an array. For example\n *\n *     var sharedUniforms = {\n *       u_fogNear: 10,\n *       u_projection: ...\n *       ...\n *     };\n *\n *     var localUniforms = {\n *       u_world: ...\n *       u_diffuseColor: ...\n *     };\n *\n *     var drawObj = {\n *       ...\n *       uniforms: [sharedUniforms, localUniforms],\n *     };\n *\n * @property {number} [offset] the offset to pass to `gl.drawArrays` or `gl.drawElements`. Defaults to 0.\n * @property {number} [count] the count to pass to `gl.drawArrays` or `gl.drawElements`. Defaults to bufferInfo.numElements.\n * @property {number} [instanceCount] the number of instances. Defaults to undefined.\n * @memberOf module:twgl\n */\n\n/**\n * Draws a list of objects\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @param {DrawObject[]} objectsToDraw an array of objects to draw.\n * @memberOf module:twgl/draw\n */\nfunction drawObjectList(gl, objectsToDraw) {\n  let lastUsedProgramInfo = null;\n  let lastUsedBufferInfo = null;\n\n  objectsToDraw.forEach(function(object) {\n    if (object.active === false) {\n      return;\n    }\n\n    const programInfo = object.programInfo;\n    const bufferInfo = object.vertexArrayInfo || object.bufferInfo;\n    let bindBuffers = false;\n    const type = object.type === undefined ? TRIANGLES : object.type;\n\n    if (programInfo !== lastUsedProgramInfo) {\n      lastUsedProgramInfo = programInfo;\n      gl.useProgram(programInfo.program);\n\n      // We have to rebind buffers when changing programs because we\n      // only bind buffers the program uses. So if 2 programs use the same\n      // bufferInfo but the 1st one uses only positions the when the\n      // we switch to the 2nd one some of the attributes will not be on.\n      bindBuffers = true;\n    }\n\n    // Setup all the needed attributes.\n    if (bindBuffers || bufferInfo !== lastUsedBufferInfo) {\n      if (lastUsedBufferInfo && lastUsedBufferInfo.vertexArrayObject && !bufferInfo.vertexArrayObject) {\n        gl.bindVertexArray(null);\n      }\n      lastUsedBufferInfo = bufferInfo;\n      setBuffersAndAttributes(gl, programInfo, bufferInfo);\n    }\n\n    // Set the uniforms.\n    setUniforms(programInfo, object.uniforms);\n\n    // Draw\n    drawBufferInfo(gl, bufferInfo, type, object.count, object.offset, object.instanceCount);\n  });\n\n  if (lastUsedBufferInfo && lastUsedBufferInfo.vertexArrayObject) {\n    gl.bindVertexArray(null);\n  }\n}\n\nvar draw = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  drawBufferInfo: drawBufferInfo,\n  drawObjectList: drawObjectList\n});\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\nconst FRAMEBUFFER                    = 0x8d40;\nconst RENDERBUFFER                   = 0x8d41;\nconst TEXTURE_2D                     = 0x0de1;\n\nconst UNSIGNED_BYTE                  = 0x1401;\n\n/* PixelFormat */\nconst DEPTH_COMPONENT                = 0x1902;\nconst RGBA                           = 0x1908;\nconst DEPTH_COMPONENT24              = 0x81a6;\nconst DEPTH_COMPONENT32F             = 0x8cac;\nconst DEPTH24_STENCIL8               = 0x88f0;\nconst DEPTH32F_STENCIL8              = 0x8cad;\n\n/* Framebuffer Object. */\nconst RGBA4                          = 0x8056;\nconst RGB5_A1                        = 0x8057;\nconst RGB565                         = 0x8D62;\nconst DEPTH_COMPONENT16              = 0x81A5;\nconst STENCIL_INDEX                  = 0x1901;\nconst STENCIL_INDEX8                 = 0x8D48;\nconst DEPTH_STENCIL                  = 0x84F9;\nconst COLOR_ATTACHMENT0              = 0x8CE0;\nconst DEPTH_ATTACHMENT               = 0x8D00;\nconst STENCIL_ATTACHMENT             = 0x8D20;\nconst DEPTH_STENCIL_ATTACHMENT       = 0x821A;\n\n/* TextureWrapMode */\nconst CLAMP_TO_EDGE                  = 0x812F;\n\n/* TextureMagFilter */\nconst LINEAR                         = 0x2601;\n\n/**\n * The options for a framebuffer attachment.\n *\n * Note: For a `format` that is a texture include all the texture\n * options from {@link module:twgl.TextureOptions} for example\n * `min`, `mag`, `clamp`, etc... Note that unlike {@link module:twgl.TextureOptions}\n * `auto` defaults to `false` for attachment textures but `min` and `mag` default\n * to `gl.LINEAR` and `wrap` defaults to `CLAMP_TO_EDGE`\n *\n * @typedef {Object} AttachmentOptions\n * @property {number} [attachmentPoint] The attachment point. Defaults\n *   to `gl.COLOR_ATTACHMENT0 + ndx` unless type is a depth or stencil type\n *   then it's gl.DEPTH_ATTACHMENT or `gl.DEPTH_STENCIL_ATTACHMENT` depending\n *   on the format or attachment type.\n * @property {number} [format] The format. If one of `gl.RGBA4`,\n *   `gl.RGB565`, `gl.RGB5_A1`, `gl.DEPTH_COMPONENT16`,\n *   `gl.STENCIL_INDEX8` or `gl.DEPTH_STENCIL` then will create a\n *   renderbuffer. Otherwise will create a texture. Default = `gl.RGBA`\n * @property {number} [type] The type. Used for texture. Default = `gl.UNSIGNED_BYTE`.\n * @property {number} [target] The texture target for `gl.framebufferTexture2D`.\n *   Defaults to `gl.TEXTURE_2D`. Set to appropriate face for cube maps.\n * @property {number} [samples] The number of samples. Default = 1\n * @property {number} [level] level for `gl.framebufferTexture2D`. Defaults to 0.\n * @property {number} [layer] layer for `gl.framebufferTextureLayer`. Defaults to undefined.\n *   If set then `gl.framebufferTextureLayer` is called, if not then `gl.framebufferTexture2D`\n * @property {(WebGLRenderbuffer | WebGLTexture)} [attachment] An existing renderbuffer or texture.\n *    If provided will attach this Object. This allows you to share\n *    attachments across framebuffers.\n * @memberOf module:twgl\n * @mixes module:twgl.TextureOptions\n */\n\nconst defaultAttachments = [\n  { format: RGBA, type: UNSIGNED_BYTE, min: LINEAR, wrap: CLAMP_TO_EDGE, },\n  { format: DEPTH_STENCIL, },\n];\n\nconst attachmentsByFormat = {};\nattachmentsByFormat[DEPTH_STENCIL] = DEPTH_STENCIL_ATTACHMENT;\nattachmentsByFormat[STENCIL_INDEX] = STENCIL_ATTACHMENT;\nattachmentsByFormat[STENCIL_INDEX8] = STENCIL_ATTACHMENT;\nattachmentsByFormat[DEPTH_COMPONENT] = DEPTH_ATTACHMENT;\nattachmentsByFormat[DEPTH_COMPONENT16] = DEPTH_ATTACHMENT;\nattachmentsByFormat[DEPTH_COMPONENT24] = DEPTH_ATTACHMENT;\nattachmentsByFormat[DEPTH_COMPONENT32F] = DEPTH_ATTACHMENT;\nattachmentsByFormat[DEPTH24_STENCIL8] = DEPTH_STENCIL_ATTACHMENT;\nattachmentsByFormat[DEPTH32F_STENCIL8] = DEPTH_STENCIL_ATTACHMENT;\n\nfunction getAttachmentPointForFormat(format, internalFormat) {\n  return attachmentsByFormat[format] || attachmentsByFormat[internalFormat];\n}\n\nconst renderbufferFormats = {};\nrenderbufferFormats[RGBA4] = true;\nrenderbufferFormats[RGB5_A1] = true;\nrenderbufferFormats[RGB565] = true;\nrenderbufferFormats[DEPTH_STENCIL] = true;\nrenderbufferFormats[DEPTH_COMPONENT16] = true;\nrenderbufferFormats[STENCIL_INDEX] = true;\nrenderbufferFormats[STENCIL_INDEX8] = true;\n\nfunction isRenderbufferFormat(format) {\n  return renderbufferFormats[format];\n}\n\nconst MAX_COLOR_ATTACHMENT_POINTS = 32;  // even an 3090 only supports 8 but WebGL/OpenGL ES define constants for 32\n\nfunction isColorAttachmentPoint(attachmentPoint) {\n  return attachmentPoint >= COLOR_ATTACHMENT0 && attachmentPoint < COLOR_ATTACHMENT0 + MAX_COLOR_ATTACHMENT_POINTS;\n}\n\n/**\n * @typedef {Object} FramebufferInfo\n * @property {WebGLFramebuffer} framebuffer The WebGLFramebuffer for this framebufferInfo\n * @property {Array.<(WebGLRenderbuffer | WebGLTexture)>} attachments The created attachments in the same order as passed in to {@link module:twgl.createFramebufferInfo}.\n * @property {number} width The width of the framebuffer and its attachments\n * @property {number} height The width of the framebuffer and its attachments\n * @memberOf module:twgl\n */\n\n/**\n * Creates a framebuffer and attachments.\n *\n * This returns a {@link module:twgl.FramebufferInfo} because it needs to return the attachments as well as the framebuffer.\n * It also leaves the framebuffer it just created as the currently bound `FRAMEBUFFER`.\n * Note: If this is WebGL2 or if you called {@link module:twgl.addExtensionsToContext} then it will set the drawBuffers\n * to `[COLOR_ATTACHMENT0, COLOR_ATTACHMENT1, ...]` for how ever many color attachments were created.\n *\n * The simplest usage\n *\n *     // create an RGBA/UNSIGNED_BYTE texture and DEPTH_STENCIL renderbuffer\n *     const fbi = twgl.createFramebufferInfo(gl);\n *\n * More complex usage\n *\n *     // create an RGB565 renderbuffer and a STENCIL_INDEX8 renderbuffer\n *     const attachments = [\n *       { format: RGB565, mag: NEAREST },\n *       { format: STENCIL_INDEX8 },\n *     ]\n *     const fbi = twgl.createFramebufferInfo(gl, attachments);\n *\n * Passing in a specific size\n *\n *     const width = 256;\n *     const height = 256;\n *     const fbi = twgl.createFramebufferInfo(gl, attachments, width, height);\n *\n * **Note!!** It is up to you to check if the framebuffer is renderable by calling `gl.checkFramebufferStatus`.\n * [WebGL1 only guarantees 3 combinations of attachments work](https://www.khronos.org/registry/webgl/specs/latest/1.0/#6.6).\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.AttachmentOptions[]} [attachments] which attachments to create. If not provided the default is a framebuffer with an\n *    `RGBA`, `UNSIGNED_BYTE` texture `COLOR_ATTACHMENT0` and a `DEPTH_STENCIL` renderbuffer `DEPTH_STENCIL_ATTACHMENT`.\n * @param {number} [width] the width for the attachments. Default = size of drawingBuffer\n * @param {number} [height] the height for the attachments. Default = size of drawingBuffer\n * @return {module:twgl.FramebufferInfo} the framebuffer and attachments.\n * @memberOf module:twgl/framebuffers\n */\nfunction createFramebufferInfo(gl, attachments, width, height) {\n  const target = FRAMEBUFFER;\n  const fb = gl.createFramebuffer();\n  gl.bindFramebuffer(target, fb);\n  width  = width  || gl.drawingBufferWidth;\n  height = height || gl.drawingBufferHeight;\n  attachments = attachments || defaultAttachments;\n  const usedColorAttachmentsPoints = [];\n  const framebufferInfo = {\n    framebuffer: fb,\n    attachments: [],\n    width: width,\n    height: height,\n  };\n\n  attachments.forEach(function(attachmentOptions, i) {\n    let attachment = attachmentOptions.attachment;\n    const samples = attachmentOptions.samples;\n    const format = attachmentOptions.format;\n    let attachmentPoint = attachmentOptions.attachmentPoint || getAttachmentPointForFormat(format, attachmentOptions.internalFormat);\n    if (!attachmentPoint) {\n      attachmentPoint = COLOR_ATTACHMENT0 + i;\n    }\n    if (isColorAttachmentPoint(attachmentPoint)) {\n      usedColorAttachmentsPoints.push(attachmentPoint);\n    }\n    if (!attachment) {\n      if (samples !== undefined || isRenderbufferFormat(format)) {\n        attachment = gl.createRenderbuffer();\n        gl.bindRenderbuffer(RENDERBUFFER, attachment);\n        if (samples > 1) {\n          gl.renderbufferStorageMultisample(RENDERBUFFER, samples, format, width, height);\n        } else {\n          gl.renderbufferStorage(RENDERBUFFER, format, width, height);\n        }\n      } else {\n        const textureOptions = Object.assign({}, attachmentOptions);\n        textureOptions.width = width;\n        textureOptions.height = height;\n        if (textureOptions.auto === undefined) {\n          textureOptions.auto = false;\n          textureOptions.min = textureOptions.min || textureOptions.minMag || LINEAR;\n          textureOptions.mag = textureOptions.mag || textureOptions.minMag || LINEAR;\n          textureOptions.wrapS = textureOptions.wrapS || textureOptions.wrap || CLAMP_TO_EDGE;\n          textureOptions.wrapT = textureOptions.wrapT || textureOptions.wrap || CLAMP_TO_EDGE;\n        }\n        attachment = createTexture(gl, textureOptions);\n      }\n    }\n    if (isRenderbuffer(gl, attachment)) {\n      gl.framebufferRenderbuffer(target, attachmentPoint, RENDERBUFFER, attachment);\n    } else if (isTexture(gl, attachment)) {\n      if (attachmentOptions.layer !== undefined) {\n        gl.framebufferTextureLayer(\n          target,\n          attachmentPoint,\n          attachment,\n          attachmentOptions.level || 0,\n          attachmentOptions.layer);\n      } else {\n        gl.framebufferTexture2D(\n            target,\n            attachmentPoint,\n            attachmentOptions.target || TEXTURE_2D,\n            attachment,\n            attachmentOptions.level || 0);\n      }\n    } else {\n      throw new Error('unknown attachment type');\n    }\n    framebufferInfo.attachments.push(attachment);\n  });\n  if (gl.drawBuffers) {\n    gl.drawBuffers(usedColorAttachmentsPoints);\n  }\n  return framebufferInfo;\n}\n\n/**\n * Resizes the attachments of a framebuffer.\n *\n * You need to pass in the same `attachments` as you passed in {@link module:twgl.createFramebufferInfo}\n * because TWGL has no idea the format/type of each attachment.\n *\n * The simplest usage\n *\n *     // create an RGBA/UNSIGNED_BYTE texture and DEPTH_STENCIL renderbuffer\n *     const fbi = twgl.createFramebufferInfo(gl);\n *\n *     ...\n *\n *     function render() {\n *       if (twgl.resizeCanvasToDisplaySize(gl.canvas)) {\n *         // resize the attachments\n *         twgl.resizeFramebufferInfo(gl, fbi);\n *       }\n *\n * More complex usage\n *\n *     // create an RGB565 renderbuffer and a STENCIL_INDEX8 renderbuffer\n *     const attachments = [\n *       { format: RGB565, mag: NEAREST },\n *       { format: STENCIL_INDEX8 },\n *     ]\n *     const fbi = twgl.createFramebufferInfo(gl, attachments);\n *\n *     ...\n *\n *     function render() {\n *       if (twgl.resizeCanvasToDisplaySize(gl.canvas)) {\n *         // resize the attachments to match\n *         twgl.resizeFramebufferInfo(gl, fbi, attachments);\n *       }\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.FramebufferInfo} framebufferInfo a framebufferInfo as returned from {@link module:twgl.createFramebufferInfo}.\n * @param {module:twgl.AttachmentOptions[]} [attachments] the same attachments options as passed to {@link module:twgl.createFramebufferInfo}.\n * @param {number} [width] the width for the attachments. Default = size of drawingBuffer\n * @param {number} [height] the height for the attachments. Default = size of drawingBuffer\n * @memberOf module:twgl/framebuffers\n */\nfunction resizeFramebufferInfo(gl, framebufferInfo, attachments, width, height) {\n  width  = width  || gl.drawingBufferWidth;\n  height = height || gl.drawingBufferHeight;\n  framebufferInfo.width = width;\n  framebufferInfo.height = height;\n  attachments = attachments || defaultAttachments;\n  attachments.forEach(function(attachmentOptions, ndx) {\n    const attachment = framebufferInfo.attachments[ndx];\n    const format = attachmentOptions.format;\n    const samples = attachmentOptions.samples;\n    if (samples !== undefined || isRenderbuffer(gl, attachment)) {\n      gl.bindRenderbuffer(RENDERBUFFER, attachment);\n      if (samples > 1) {\n        gl.renderbufferStorageMultisample(RENDERBUFFER, samples, format, width, height);\n      } else {\n        gl.renderbufferStorage(RENDERBUFFER, format, width, height);\n      }\n    } else if (isTexture(gl, attachment)) {\n      resizeTexture(gl, attachment, attachmentOptions, width, height);\n    } else {\n      throw new Error('unknown attachment type');\n    }\n  });\n}\n\n/**\n * Binds a framebuffer\n *\n * This function pretty much solely exists because I spent hours\n * trying to figure out why something I wrote wasn't working only\n * to realize I forget to set the viewport dimensions.\n * My hope is this function will fix that.\n *\n * It is effectively the same as\n *\n *     gl.bindFramebuffer(gl.FRAMEBUFFER, someFramebufferInfo.framebuffer);\n *     gl.viewport(0, 0, someFramebufferInfo.width, someFramebufferInfo.height);\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.FramebufferInfo|null} [framebufferInfo] a framebufferInfo as returned from {@link module:twgl.createFramebufferInfo}.\n *   If falsy will bind the canvas.\n * @param {number} [target] The target. If not passed `gl.FRAMEBUFFER` will be used.\n * @memberOf module:twgl/framebuffers\n */\n\nfunction bindFramebufferInfo(gl, framebufferInfo, target) {\n  target = target || FRAMEBUFFER;\n  if (framebufferInfo) {\n    gl.bindFramebuffer(target, framebufferInfo.framebuffer);\n    gl.viewport(0, 0, framebufferInfo.width, framebufferInfo.height);\n  } else {\n    gl.bindFramebuffer(target, null);\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n  }\n}\n\nvar framebuffers = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  bindFramebufferInfo: bindFramebufferInfo,\n  createFramebufferInfo: createFramebufferInfo,\n  resizeFramebufferInfo: resizeFramebufferInfo\n});\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * vertex array object related functions\n *\n * You should generally not need to use these functions. They are provided\n * for those cases where you're doing something out of the ordinary\n * and you need lower level access.\n *\n * For backward compatibility they are available at both `twgl.attributes` and `twgl`\n * itself\n *\n * See {@link module:twgl} for core functions\n *\n * @module twgl/vertexArrays\n */\n\nconst ELEMENT_ARRAY_BUFFER           = 0x8893;\n\n/**\n * @typedef {Object} VertexArrayInfo\n * @property {number} numElements The number of elements to pass to `gl.drawArrays` or `gl.drawElements`.\n * @property {number} [elementType] The type of indices `UNSIGNED_BYTE`, `UNSIGNED_SHORT` etc..\n * @property {WebGLVertexArrayObject} [vertexArrayObject] a vertex array object\n * @memberOf module:twgl\n */\n\n/**\n * Creates a VertexArrayInfo from a BufferInfo and one or more ProgramInfos\n *\n * This can be passed to {@link module:twgl.setBuffersAndAttributes} and to\n * {@link module:twgl:drawBufferInfo}.\n *\n * > **IMPORTANT:** Vertex Array Objects are **not** a direct analog for a BufferInfo. Vertex Array Objects\n *   assign buffers to specific attributes at creation time. That means they can only be used with programs\n *   who's attributes use the same attribute locations for the same purposes.\n *\n * > Bind your attribute locations by passing an array of attribute names to {@link module:twgl.createProgramInfo}\n *   or use WebGL 2's GLSL ES 3's `layout(location = <num>)` to make sure locations match.\n *\n * also\n *\n * > **IMPORTANT:** After calling twgl.setBuffersAndAttribute with a BufferInfo that uses a Vertex Array Object\n *   that Vertex Array Object will be bound. That means **ANY MANIPULATION OF ELEMENT_ARRAY_BUFFER or ATTRIBUTES**\n *   will affect the Vertex Array Object state.\n *\n * > Call `gl.bindVertexArray(null)` to get back manipulating the global attributes and ELEMENT_ARRAY_BUFFER.\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @param {module:twgl.ProgramInfo|module:twgl.ProgramInfo[]} programInfo a programInfo or array of programInfos\n * @param {module:twgl.BufferInfo} bufferInfo BufferInfo as returned from createBufferInfoFromArrays etc...\n *\n *    You need to make sure every attribute that will be used is bound. So for example assume shader 1\n *    uses attributes A, B, C and shader 2 uses attributes A, B, D. If you only pass in the programInfo\n *    for shader 1 then only attributes A, B, and C will have their attributes set because TWGL doesn't\n *    now attribute D's location.\n *\n *    So, you can pass in both shader 1 and shader 2's programInfo\n *\n * @return {module:twgl.VertexArrayInfo} The created VertexArrayInfo\n *\n * @memberOf module:twgl/vertexArrays\n */\nfunction createVertexArrayInfo(gl, programInfos, bufferInfo) {\n  const vao = gl.createVertexArray();\n  gl.bindVertexArray(vao);\n  if (!programInfos.length) {\n    programInfos = [programInfos];\n  }\n  programInfos.forEach(function(programInfo) {\n    setBuffersAndAttributes(gl, programInfo, bufferInfo);\n  });\n  gl.bindVertexArray(null);\n  return {\n    numElements: bufferInfo.numElements,\n    elementType: bufferInfo.elementType,\n    vertexArrayObject: vao,\n  };\n}\n\n/**\n * Creates a vertex array object and then sets the attributes on it\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {Object.<string, function>} setters Attribute setters as returned from createAttributeSetters\n * @param {Object.<string, module:twgl.AttribInfo>} attribs AttribInfos mapped by attribute name.\n * @param {WebGLBuffer} [indices] an optional ELEMENT_ARRAY_BUFFER of indices\n *\n * @return {WebGLVertexArrayObject|null} The created WebGLVertexArrayObject\n *\n * @memberOf module:twgl/vertexArrays\n */\nfunction createVAOAndSetAttributes(gl, setters, attribs, indices) {\n  const vao = gl.createVertexArray();\n  gl.bindVertexArray(vao);\n  setAttributes(setters, attribs);\n  if (indices) {\n    gl.bindBuffer(ELEMENT_ARRAY_BUFFER, indices);\n  }\n  // We unbind this because otherwise any change to ELEMENT_ARRAY_BUFFER\n  // like when creating buffers for other stuff will mess up this VAO's binding\n  gl.bindVertexArray(null);\n  return vao;\n}\n\n/**\n * Creates a vertex array object and then sets the attributes\n * on it\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n *        to use.\n * @param {Object.<string, function>| module:twgl.ProgramInfo} programInfo as returned from createProgramInfo or Attribute setters as returned from createAttributeSetters\n * @param {module:twgl.BufferInfo} bufferInfo BufferInfo as returned from createBufferInfoFromArrays etc...\n * @param {WebGLBuffer} [indices] an optional ELEMENT_ARRAY_BUFFER of indices\n *\n * @return {WebGLVertexArrayObject|null} The created WebGLVertexArrayObject\n *\n * @memberOf module:twgl/vertexArrays\n */\nfunction createVAOFromBufferInfo(gl, programInfo, bufferInfo) {\n  return createVAOAndSetAttributes(gl, programInfo.attribSetters || programInfo, bufferInfo.attribs, bufferInfo.indices);\n}\n\nvar vertexArrays = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  createVertexArrayInfo: createVertexArrayInfo,\n  createVAOAndSetAttributes: createVAOAndSetAttributes,\n  createVAOFromBufferInfo: createVAOFromBufferInfo\n});\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\nconst defaults = {\n  addExtensionsToContext: true,\n};\n\n/**\n * Various default settings for twgl.\n *\n * Note: You can call this any number of times. Example:\n *\n *     twgl.setDefaults({ textureColor: [1, 0, 0, 1] });\n *     twgl.setDefaults({ attribPrefix: 'a_' });\n *\n * is equivalent to\n *\n *     twgl.setDefaults({\n *       textureColor: [1, 0, 0, 1],\n *       attribPrefix: 'a_',\n *     });\n *\n * @typedef {Object} Defaults\n * @property {string} [attribPrefix] The prefix to stick on attributes\n *\n *   When writing shaders I prefer to name attributes with `a_`, uniforms with `u_` and varyings with `v_`\n *   as it makes it clear where they came from. But, when building geometry I prefer using un-prefixed names.\n *\n *   In other words I'll create arrays of geometry like this\n *\n *       const arrays = {\n *         position: ...\n *         normal: ...\n *         texcoord: ...\n *       };\n *\n *   But need those mapped to attributes and my attributes start with `a_`.\n *\n *   Default: `\"\"`\n *\n * @property {number[]} [textureColor] Array of 4 values in the range 0 to 1\n *\n *   The default texture color is used when loading textures from\n *   urls. Because the URL will be loaded async we'd like to be\n *   able to use the texture immediately. By putting a 1x1 pixel\n *   color in the texture we can start using the texture before\n *   the URL has loaded.\n *\n *   Default: `[0.5, 0.75, 1, 1]`\n *\n * @property {string} [crossOrigin]\n *\n *   If not undefined sets the crossOrigin attribute on images\n *   that twgl creates when downloading images for textures.\n *\n *   Also see {@link module:twgl.TextureOptions}.\n *\n * @property {bool} [addExtensionsToContext]\n *\n *   If true, then, when twgl will try to add any supported WebGL extensions\n *   directly to the context under their normal GL names. For example\n *   if ANGLE_instances_arrays exists then twgl would enable it,\n *   add the functions `vertexAttribDivisor`, `drawArraysInstanced`,\n *   `drawElementsInstanced`, and the constant `VERTEX_ATTRIB_ARRAY_DIVISOR`\n *   to the `WebGLRenderingContext`.\n *\n * @memberOf module:twgl\n */\n\n/**\n * Sets various defaults for twgl.\n *\n * In the interest of terseness which is kind of the point\n * of twgl I've integrated a few of the older functions here\n *\n * @param {module:twgl.Defaults} newDefaults The default settings.\n * @memberOf module:twgl\n */\nfunction setDefaults(newDefaults) {\n  copyExistingProperties(newDefaults, defaults);\n  setDefaults$2(newDefaults);  // eslint-disable-line\n  setDefaults$1(newDefaults);  // eslint-disable-line\n}\n\nconst prefixRE = /^(.*?)_/;\nfunction addExtensionToContext(gl, extensionName) {\n  glEnumToString(gl, 0);\n  const ext = gl.getExtension(extensionName);\n  if (ext) {\n    const enums = {};\n    const fnSuffix = prefixRE.exec(extensionName)[1];\n    const enumSuffix = '_' + fnSuffix;\n    for (const key in ext) {\n      const value = ext[key];\n      const isFunc = typeof (value) === 'function';\n      const suffix = isFunc ? fnSuffix : enumSuffix;\n      let name = key;\n      // examples of where this is not true are WEBGL_compressed_texture_s3tc\n      // and WEBGL_compressed_texture_pvrtc\n      if (key.endsWith(suffix)) {\n        name = key.substring(0, key.length - suffix.length);\n      }\n      if (gl[name] !== undefined) {\n        if (!isFunc && gl[name] !== value) {\n          warn$1(name, gl[name], value, key);\n        }\n      } else {\n        if (isFunc) {\n          gl[name] = function(origFn) {\n            return function() {\n              return origFn.apply(ext, arguments);\n            };\n          }(value);\n        } else {\n          gl[name] = value;\n          enums[name] = value;\n        }\n      }\n    }\n    // pass the modified enums to glEnumToString\n    enums.constructor = {\n      name: ext.constructor.name,\n    };\n    glEnumToString(enums, 0);\n  }\n  return ext;\n}\n\n/*\n * If you're wondering why the code doesn't just iterate\n * over all extensions using `gl.getExtensions` is that it's possible\n * some future extension is incompatible with this code. Rather than\n * have thing suddenly break it seems better to manually add to this\n * list.\n *\n */\nconst supportedExtensions = [\n  'ANGLE_instanced_arrays',\n  'EXT_blend_minmax',\n  'EXT_color_buffer_float',\n  'EXT_color_buffer_half_float',\n  'EXT_disjoint_timer_query',\n  'EXT_disjoint_timer_query_webgl2',\n  'EXT_frag_depth',\n  'EXT_sRGB',\n  'EXT_shader_texture_lod',\n  'EXT_texture_filter_anisotropic',\n  'OES_element_index_uint',\n  'OES_standard_derivatives',\n  'OES_texture_float',\n  'OES_texture_float_linear',\n  'OES_texture_half_float',\n  'OES_texture_half_float_linear',\n  'OES_vertex_array_object',\n  'WEBGL_color_buffer_float',\n  'WEBGL_compressed_texture_atc',\n  'WEBGL_compressed_texture_etc1',\n  'WEBGL_compressed_texture_pvrtc',\n  'WEBGL_compressed_texture_s3tc',\n  'WEBGL_compressed_texture_s3tc_srgb',\n  'WEBGL_depth_texture',\n  'WEBGL_draw_buffers',\n];\n\n/**\n * Attempts to enable all of the following extensions\n * and add their functions and constants to the\n * `WebGLRenderingContext` using their normal non-extension like names.\n *\n *      ANGLE_instanced_arrays\n *      EXT_blend_minmax\n *      EXT_color_buffer_float\n *      EXT_color_buffer_half_float\n *      EXT_disjoint_timer_query\n *      EXT_disjoint_timer_query_webgl2\n *      EXT_frag_depth\n *      EXT_sRGB\n *      EXT_shader_texture_lod\n *      EXT_texture_filter_anisotropic\n *      OES_element_index_uint\n *      OES_standard_derivatives\n *      OES_texture_float\n *      OES_texture_float_linear\n *      OES_texture_half_float\n *      OES_texture_half_float_linear\n *      OES_vertex_array_object\n *      WEBGL_color_buffer_float\n *      WEBGL_compressed_texture_atc\n *      WEBGL_compressed_texture_etc1\n *      WEBGL_compressed_texture_pvrtc\n *      WEBGL_compressed_texture_s3tc\n *      WEBGL_compressed_texture_s3tc_srgb\n *      WEBGL_depth_texture\n *      WEBGL_draw_buffers\n *\n * For example if `ANGLE_instanced_arrays` exists then the functions\n * `drawArraysInstanced`, `drawElementsInstanced`, `vertexAttribDivisor`\n * and the constant `VERTEX_ATTRIB_ARRAY_DIVISOR` are added to the\n * `WebGLRenderingContext`.\n *\n * Note that if you want to know if the extension exists you should\n * probably call `gl.getExtension` for each extension. Alternatively\n * you can check for the existence of the functions or constants that\n * are expected to be added. For example\n *\n *    if (gl.drawBuffers) {\n *      // Either WEBGL_draw_buffers was enabled OR you're running in WebGL2\n *      ....\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @memberOf module:twgl\n */\nfunction addExtensionsToContext(gl) {\n  for (let ii = 0; ii < supportedExtensions.length; ++ii) {\n    addExtensionToContext(gl, supportedExtensions[ii]);\n  }\n}\n\n/**\n * Creates a webgl context.\n * @param {HTMLCanvasElement} canvas The canvas tag to get\n *     context from. If one is not passed in one will be\n *     created.\n * @return {WebGLRenderingContext} The created context.\n * @private\n */\nfunction create3DContext(canvas, opt_attribs) {\n  const names = [\"webgl\", \"experimental-webgl\"];\n  let context = null;\n  for (let ii = 0; ii < names.length; ++ii) {\n    context = canvas.getContext(names[ii], opt_attribs);\n    if (context) {\n      if (defaults.addExtensionsToContext) {\n        addExtensionsToContext(context);\n      }\n      break;\n    }\n  }\n  return context;\n}\n\n/**\n * Gets a WebGL1 context.\n *\n * Note: Will attempt to enable Vertex Array Objects\n * and add WebGL2 entry points. (unless you first set defaults with\n * `twgl.setDefaults({enableVertexArrayObjects: false})`;\n *\n * @param {HTMLCanvasElement} canvas a canvas element.\n * @param {WebGLContextAttributes} [opt_attribs] optional webgl context creation attributes\n * @return {WebGLRenderingContext} The created context.\n * @memberOf module:twgl\n * @deprecated\n * @private\n */\nfunction getWebGLContext(canvas, opt_attribs) {\n  const gl = create3DContext(canvas, opt_attribs);\n  return gl;\n}\n\n/**\n * Creates a webgl context.\n *\n * Will return a WebGL2 context if possible.\n *\n * You can check if it's WebGL2 with\n *\n *     twgl.isWebGL2(gl);\n *\n * @param {HTMLCanvasElement} canvas The canvas tag to get\n *     context from. If one is not passed in one will be\n *     created.\n * @return {WebGLRenderingContext} The created context.\n */\nfunction createContext(canvas, opt_attribs) {\n  const names = [\"webgl2\", \"webgl\", \"experimental-webgl\"];\n  let context = null;\n  for (let ii = 0; ii < names.length; ++ii) {\n    context = canvas.getContext(names[ii], opt_attribs);\n    if (context) {\n      if (defaults.addExtensionsToContext) {\n        addExtensionsToContext(context);\n      }\n      break;\n    }\n  }\n  return context;\n}\n\n/**\n * Gets a WebGL context.  Will create a WebGL2 context if possible.\n *\n * You can check if it's WebGL2 with\n *\n *    function isWebGL2(gl) {\n *      return gl.getParameter(gl.VERSION).indexOf(\"WebGL 2.0 \") == 0;\n *    }\n *\n * Note: For a WebGL1 context will attempt to enable Vertex Array Objects\n * and add WebGL2 entry points. (unless you first set defaults with\n * `twgl.setDefaults({enableVertexArrayObjects: false})`;\n *\n * @param {HTMLCanvasElement} canvas a canvas element.\n * @param {WebGLContextAttributes} [opt_attribs] optional webgl context creation attributes\n * @return {WebGLRenderingContext} The created context.\n * @memberOf module:twgl\n */\nfunction getContext(canvas, opt_attribs) {\n  const gl = createContext(canvas, opt_attribs);\n  return gl;\n}\n\n/**\n * Resize a canvas to match the size it's displayed.\n * @param {HTMLCanvasElement} canvas The canvas to resize.\n * @param {number} [multiplier] So you can pass in `window.devicePixelRatio` or other scale value if you want to.\n * @return {boolean} true if the canvas was resized.\n * @memberOf module:twgl\n */\nfunction resizeCanvasToDisplaySize(canvas, multiplier) {\n  multiplier = multiplier || 1;\n  multiplier = Math.max(0, multiplier);\n  const width  = canvas.clientWidth  * multiplier | 0;\n  const height = canvas.clientHeight * multiplier | 0;\n  if (canvas.width !== width || canvas.height !== height) {\n    canvas.width = width;\n    canvas.height = height;\n    return true;\n  }\n  return false;\n}\n\nexport { addExtensionsToContext, attributes, bindFramebufferInfo, bindTransformFeedbackInfo, bindUniformBlock, canFilter, canGenerateMipmap, createAttribsFromArrays, createAttributeSetters, createBufferFromArray, createBufferFromTypedArray, createBufferInfoFromArrays, createBuffersFromArrays, createFramebufferInfo, createProgram, createProgramAsync, createProgramFromScripts, createProgramFromSources, createProgramInfo, createProgramInfoAsync, createProgramInfoFromProgram, createProgramInfos, createProgramInfosAsync, createPrograms, createProgramsAsync, createSampler, createSamplers, createTexture, createTextures, createTransformFeedback, createTransformFeedbackInfo, createUniformBlockInfo, createUniformBlockInfoFromProgram, createUniformBlockSpecFromProgram, createUniformSetters, createVAOAndSetAttributes, createVAOFromBufferInfo, createVertexArrayInfo, draw, drawBufferInfo, drawObjectList, framebuffers, getArray$1 as getArray_, getBytesPerElementForInternalFormat, getContext, getFormatAndTypeForInternalFormat, getGLTypeForTypedArray, getGLTypeForTypedArrayType, getNumComponentsForFormat, getNumComponents$1 as getNumComponents_, getTypedArrayTypeForGLType, getWebGLContext, glEnumToString, isArrayBuffer$1 as isArrayBuffer, isWebGL1, isWebGL2, loadTextureFromUrl, m4, primitives, programs, resizeCanvasToDisplaySize, resizeFramebufferInfo, resizeTexture, setAttribInfoBufferFromArray, setDefaults$2 as setAttributeDefaults_, setAttributePrefix, setAttributes, setBlockUniforms, setBuffersAndAttributes, setDefaultTextureColor, setDefaults, setEmptyTexture, setSamplerParameters, setDefaults$1 as setTextureDefaults_, setTextureFilteringForSize, setTextureFromArray, setTextureFromElement, setTextureParameters, setUniformBlock, setUniforms, setUniformsAndBindTextures, textures, typedarrays, utils, v3, vertexArrays };\n","// https://stackoverflow.com/questions/44447847/enums-in-javascript-with-es6\r\nexport function makeEnum(arr) {\r\n  let obj = Object.create(null);\r\n  for (let val of arr) {\r\n    obj[val] = val;\r\n  }\r\n  return Object.freeze(obj);\r\n}\r\n\r\nexport function makeEnumMap(arr) {\r\n  let obj = Object.create(null);\r\n  for (let val of arr) {\r\n    obj[val[0]] = val[1];\r\n  }\r\n  return Object.freeze(obj);\r\n}\r\n\r\nexport class KeyedMap extends Map {\r\n  set(keyedValue, value) {\r\n    const key = keyedValue.key ? keyedValue.key() : keyedValue;\r\n    return super.set(key, value);\r\n  }\r\n\r\n  has(keyedValue) {\r\n    const key = keyedValue.key ? keyedValue.key() : keyedValue;\r\n    return super.has(key);\r\n  }\r\n\r\n  get(keyedValue) {\r\n    const key = keyedValue.key ? keyedValue.key() : keyedValue;\r\n    return super.get(key);\r\n  }\r\n\r\n  delete(keyedValue) {\r\n    const key = keyedValue.key ? keyedValue.key() : keyedValue;\r\n    return super.delete(key);\r\n  }\r\n}\r\n\r\nexport class KeyedSet extends KeyedMap {\r\n  add(keyedValue) {\r\n    return super.set(keyedValue, keyedValue);\r\n  }\r\n\r\n  addAll(keyedValues) {\r\n    keyedValues.forEach((v) => this.add(v));\r\n  }\r\n\r\n  pop() {\r\n    for (const [key, value] of this) {\r\n      this.delete(value);\r\n      return value;\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\r\nNumber.prototype.clamp = function (min, max) {\r\n  return Math.min(Math.max(this, min), max);\r\n};\r\nNumber.prototype.mix = function (other, t) {\r\n  return this * (1 - t) + other * t;\r\n};\r\n\r\nexport class Position {\r\n  constructor(x, y) {\r\n    this.x = x;\r\n    this.y = y;\r\n  }\r\n\r\n  neighbors() {\r\n    const { x, y } = this;\r\n    return [\r\n      new Position(x + 1, y),\r\n      new Position(x - 1, y),\r\n      new Position(x, y + 1),\r\n      new Position(x, y - 1),\r\n    ];\r\n  }\r\n\r\n  dist_max(other) {\r\n    return Math.max(Math.abs(other.x - this.x), Math.abs(other.y - this.y));\r\n  }\r\n\r\n  dist(other) {\r\n    return Math.abs(other.x - this.x) + Math.abs(other.y - this.y);\r\n  }\r\n\r\n  equals(other) {\r\n    return this.dist(other) === 0;\r\n  }\r\n\r\n  key() {\r\n    return this.x + \"-\" + this.y;\r\n  }\r\n}\r\n","import { KeyedMap } from \"../utils/helper\";\r\n\r\nclass InputManager {\r\n  fetchUpdates() {\r\n    const events = this.events;\r\n    this.events = [];\r\n    return events;\r\n  }\r\n\r\n  getState() {\r\n    return this.state;\r\n  }\r\n\r\n  storeEvent(ev) {\r\n    ev.frame = this.frame;\r\n    switch (ev.type) {\r\n      case \"blur\":\r\n      case \"focusout\":\r\n        this.state = {};\r\n        break;\r\n      case \"keyup\":\r\n        delete this.state[ev.key];\r\n        break;\r\n      case \"keydown\":\r\n        if (!this.state[ev.key]) {\r\n          this.state[ev.key] = { frame: this.frame };\r\n        }\r\n        break;\r\n      case \"pointerup\":\r\n      case \"pointermove\":\r\n      case \"pointerdown\":\r\n        this.state.mouse = { pos: ev.pos, buttons: ev.buttons };\r\n        break;\r\n      case \"wheel\":\r\n        if (!this.state.wheel) {\r\n          this.state.wheel = { y: 0 };\r\n        }\r\n        this.state.wheel.y += ev.deltaYl;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  constructor(windowManager) {\r\n    this.state = {};\r\n    this.frame = 0;\r\n    this.events = [];\r\n    this.sizes = { width: 1, height: 1 };\r\n    this.listeners = [];\r\n    window.addEventListener(\"blur\", (event) => {\r\n      this.storeEvent({ type: event.type });\r\n    });\r\n    window.addEventListener(\"focusout\", (event) => {\r\n      this.storeEvent({ type: event.type });\r\n    });\r\n    window.addEventListener(\"keydown\", (event) => {\r\n      const key = event.key.toLowerCase();\r\n      if (key === \"f12\") {\r\n        return;\r\n      }\r\n      event.preventDefault();\r\n      this.storeEvent({ key, type: event.type });\r\n    });\r\n    window.addEventListener(\"keyup\", (event) => {\r\n      const key = event.key.toLowerCase();\r\n      event.preventDefault();\r\n      this.storeEvent({ key, type: event.type });\r\n    });\r\n\r\n    const handleMouseEvent = (event) => {\r\n      const { sizes } = this;\r\n      if (event.target.className !== \"webgl\") {\r\n        return;\r\n      }\r\n      const pos = [\r\n        ((event.clientX - sizes.horizontalOffset) / sizes.width) * 2 - 1,\r\n        -((event.clientY - sizes.verticalOffset) / sizes.height) * 2 + 1,\r\n      ];\r\n      this.storeEvent({\r\n        type: event.type,\r\n        pos: pos,\r\n        buttons: event.buttons,\r\n      });\r\n    };\r\n\r\n    const handleScrollEvent = (event) => {\r\n      this.storeEvent({\r\n        type: event.type,\r\n        deltaY: event.deltaY,\r\n      });\r\n    };\r\n\r\n    window.addEventListener(\"wheel\", handleScrollEvent);\r\n    window.addEventListener(\"pointerdown\", handleMouseEvent);\r\n    window.addEventListener(\"pointerup\", handleMouseEvent);\r\n    window.addEventListener(\"pointermove\", handleMouseEvent);\r\n    window.addEventListener(\r\n      \"contextmenu\",\r\n      (ev) => {\r\n        ev.preventDefault();\r\n        return false;\r\n      },\r\n      false\r\n    );\r\n    windowManager.listeners.push(this);\r\n    windowManager.update();\r\n  }\r\n\r\n  updateTime({ frame }) {\r\n    this.frame = frame;\r\n  }\r\n\r\n  updateSize(sizes) {\r\n    this.sizes = sizes;\r\n  }\r\n}\r\n\r\nexport { InputManager };\r\n","export function addCustomArrayMethods() {\r\n  Array.prototype.peek = function () {\r\n    return this.length ? this[this.length - 1] : null;\r\n  };\r\n\r\n  Array.prototype.equals = function (other) {\r\n    if (!Array.isArray(other)) {\r\n      return false;\r\n    }\r\n\r\n    if (other.length !== this.length) {\r\n      return false;\r\n    }\r\n\r\n    for (var i = 0; i < this.length; i++) {\r\n      if (this[i] !== other[i]) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  };\r\n}\r\n","import { addCustomArrayMethods } from \"./array.js\";\r\naddCustomArrayMethods();\r\n// http://gamedevgeek.com/tutorials/managing-game-states-in-c/\r\nexport class StateMachine {\r\n  constructor() {\r\n    this.states = [];\r\n  }\r\n\r\n  stateParams() {\r\n    return {};\r\n  }\r\n\r\n  cleanup() {\r\n    while (this.states.length) {\r\n      this.cleanupState(this.states.pop());\r\n    }\r\n  }\r\n\r\n  currentState() {\r\n    return this.states.peek();\r\n  }\r\n\r\n  addState(state) {\r\n    state.init(this);\r\n    this.states.push(state);\r\n  }\r\n\r\n  cleanupState(state) {\r\n    if (state) {\r\n      state.cleanup(this);\r\n    }\r\n  }\r\n\r\n  replaceState(state) {\r\n    this.cleanupState(this.states.pop());\r\n    this.addState(state);\r\n  }\r\n\r\n  pushState(state) {\r\n    this.currentState()?.pause();\r\n    this.addState(state);\r\n  }\r\n\r\n  popState() {\r\n    this.cleanupState(this.states.pop());\r\n    this.currentState()?.resume();\r\n  }\r\n}\r\n\r\nexport class State {\r\n  constructor() {}\r\n\r\n  init(machine) {}\r\n  cleanup() {}\r\n  pause() {}\r\n  resume() {}\r\n}\r\n","class LineSegment extends Array {\r\n  constructor(start, end) {\r\n    super();\r\n    this.push(start, end);\r\n  }\r\n\r\n  distanceTo(other) {\r\n    const delta = this[1].clone().sub(this[0]);\r\n    const deltaLength = delta.len();\r\n\r\n    const dir = other.clone().sub(this[0]);\r\n    const t = (dir.dot(delta) / delta.lenSq()).clamp(0, 1);\r\n\r\n    return this[0].clone().add(delta.mul(t)).sub(other).len();\r\n  }\r\n}\r\n\r\nclass Vec {\r\n  static X2 = new Vec(1, 0);\r\n  static X3 = new Vec(1, 0, 0);\r\n  static X4 = new Vec(1, 0, 0, 0);\r\n\r\n  static Y2 = new Vec(0, 1);\r\n  static Y3 = new Vec(0, 1, 0);\r\n  static Y4 = new Vec(0, 1, 0, 0);\r\n\r\n  static Z3 = new Vec(0, 0, 1);\r\n  static Z4 = new Vec(0, 0, 1, 0);\r\n\r\n  static W4 = new Vec(0, 0, 0, 1);\r\n\r\n  static ONE2 = new Vec(1, 1);\r\n  static ONE3 = new Vec(1, 1, 1);\r\n  static ONE4 = new Vec(1, 1, 1, 1);\r\n\r\n  static ZERO2 = new Vec(0, 0);\r\n  static ZERO3 = new Vec(0, 0, 0);\r\n  static ZERO4 = new Vec(0, 0, 0, 0);\r\n\r\n  constructor(x, y, z = null, w = null) {\r\n    this.x = x;\r\n    this.y = y;\r\n    if (z !== null) {\r\n      this.z = z;\r\n      if (w !== null) {\r\n        this.w = w;\r\n        this.length = 4;\r\n      } else {\r\n        this.length = 3;\r\n      }\r\n    } else {\r\n      this.length = 2;\r\n    }\r\n  }\r\n\r\n  copy(other) {\r\n    this.x = other.x;\r\n    this.y = other.y;\r\n    if (this.length > 3) {\r\n      this.w = other.w ?? 0;\r\n    }\r\n    if (this.length > 2) {\r\n      this.z = other.z ?? 0;\r\n    }\r\n    return this;\r\n  }\r\n\r\n  add(other) {\r\n    const isNum = typeof other === \"number\";\r\n    this.x += isNum ? other : other.x;\r\n    this.y += isNum ? other : other.y;\r\n    if (this.length > 2) {\r\n      this.z += isNum ? other : other.z ?? 0;\r\n    }\r\n    if (this.length > 3) {\r\n      this.w += isNum ? other : other.w ?? 0;\r\n    }\r\n    return this;\r\n  }\r\n\r\n  sub(other) {\r\n    const isNum = typeof other === \"number\";\r\n    this.x -= isNum ? other : other.x;\r\n    this.y -= isNum ? other : other.y;\r\n    if (this.length > 2) {\r\n      this.z -= isNum ? other : other.z ?? 0;\r\n    }\r\n    if (this.length > 3) {\r\n      this.w -= isNum ? other : other.w ?? 0;\r\n    }\r\n    return this;\r\n  }\r\n\r\n  mul(other) {\r\n    const isNum = typeof other === \"number\";\r\n    this.x *= isNum ? other : other.x;\r\n    this.y *= isNum ? other : other.y;\r\n    if (this.length > 2) {\r\n      this.z *= isNum ? other : other.z ?? 0;\r\n    }\r\n    if (this.length > 3) {\r\n      this.w *= isNum ? other : other.w ?? 0;\r\n    }\r\n    return this;\r\n  }\r\n\r\n  dot(other) {\r\n    let sum = 0;\r\n    sum += this.x * other.x;\r\n    sum += this.y * other.y;\r\n    sum += (this.z ?? 0) * (other.z ?? 0);\r\n    sum += (this.w ?? 0) * (other.w ?? 0);\r\n    return sum;\r\n  }\r\n\r\n  min(other) {\r\n    const isNum = typeof other === \"number\";\r\n    this.x = Math.min(this.x, isNum ? other : other.x);\r\n    this.y = Math.min(this.y, isNum ? other : other.y);\r\n    if (this.length > 2) {\r\n      this.z = Math.min(this.z, isNum ? other : other.z ?? 0);\r\n    }\r\n    if (this.length > 3) {\r\n      this.w = Math.min(this.w, isNum ? other : other.w ?? 0);\r\n    }\r\n    return this;\r\n  }\r\n\r\n  clamp(low, high) {\r\n    this.x = this.x.clamp(low, high);\r\n    this.y = this.y.clamp(low, high);\r\n    if (this.length > 2) {\r\n      this.z = this.z.clamp(low, high);\r\n    }\r\n    if (this.length > 3) {\r\n      this.w = this.w.clamp(low, high);\r\n    }\r\n    return this;\r\n  }\r\n  max(other) {\r\n    const isNum = typeof other === \"number\";\r\n    this.x = Math.max(this.x, isNum ? other : other.x);\r\n    this.y = Math.max(this.y, isNum ? other : other.y);\r\n    if (this.length > 2) {\r\n      this.z = Math.max(this.z, isNum ? other : other.z ?? 0);\r\n    }\r\n    if (this.length > 3) {\r\n      this.w = Math.max(this.w, isNum ? other : other.w ?? 0);\r\n    }\r\n    return this;\r\n  }\r\n  normalize() {\r\n    const sum = this.dot(this);\r\n    this.x /= sum;\r\n\r\n    this.y /= sum;\r\n    if (this.length > 2) {\r\n      this.z = Math.max(this.z, other.z ?? 0);\r\n    }\r\n    if (this.length > 3) {\r\n      this.w = Math.max(this.w, other.w ?? 0);\r\n    }\r\n    return this;\r\n  }\r\n\r\n  cross(other) {\r\n    if (other.length === this.length) {\r\n      if (this.length === 2) {\r\n        return this.x * other.y - this.y * other.x;\r\n      } else if (this.length === 3) {\r\n        return new Vec([\r\n          this.y * other.z - this.z * other.y,\r\n          this.z * other.x - this.x * other.z,\r\n          this.x * other.y - this.y * other.x,\r\n        ]);\r\n      } else {\r\n        throw new Error(\"Can't do 4D cross (yet?)\");\r\n      }\r\n    } else {\r\n      throw new Error(\"Dimensions need to match for cross.\");\r\n    }\r\n  }\r\n\r\n  len() {\r\n    return Math.sqrt(this.lenSq());\r\n  }\r\n\r\n  lenSq() {\r\n    return this.dot(this);\r\n  }\r\n\r\n  clone() {\r\n    return new Vec(\r\n      this.x,\r\n      this.y,\r\n      this.z !== undefined ? this.z : null,\r\n      this.w !== undefined ? this.w : null\r\n    );\r\n  }\r\n}\r\n\r\nexport { Vec, LineSegment };\r\n","import { State, StateMachine } from \"./utils/stateMachine\";\r\nimport { Vec, LineSegment } from \"./utils/vector\";\r\n\r\n// Input State Machine\r\n\r\nfunction getRandomInt({ min = 0, max, steps = 2 }) {\r\n  return (Math.floor(steps * Math.random()) / (steps - 1)) * (max - min) + min;\r\n}\r\n\r\nclass Command {\r\n  constructor() {\r\n    this.type = Object.getPrototypeOf(this).constructor;\r\n  }\r\n}\r\n\r\nclass MoveCommand extends Command {\r\n  constructor(playerIndex, direction) {\r\n    super();\r\n    this.playerIndex = playerIndex;\r\n    this.direction = direction;\r\n  }\r\n}\r\n\r\nclass TickCommand extends Command {\r\n  constructor(delta) {\r\n    super();\r\n    this.delta = delta;\r\n  }\r\n}\r\n\r\nclass OpenInputState extends State {\r\n  update(game, inputStateMachine, inputState) {\r\n    const leftDir =\r\n      (inputState[\"w\"] !== undefined) - +(inputState[\"s\"] !== undefined);\r\n\r\n    const rightDir =\r\n      (inputState[\"arrowup\"] !== undefined) -\r\n      +(inputState[\"arrowdown\"] !== undefined);\r\n    game.commands.push(new MoveCommand(0, leftDir));\r\n    game.commands.push(new MoveCommand(1, rightDir));\r\n  }\r\n}\r\n\r\nclass InputStateManager extends StateMachine {\r\n  constructor() {\r\n    super();\r\n    this.pushState(new OpenInputState());\r\n  }\r\n\r\n  init() {}\r\n\r\n  update(game, inputState) {\r\n    this.currentState()?.update(game, this, inputState);\r\n  }\r\n}\r\n\r\nconst inputState = new InputStateManager();\r\n\r\n// Game\r\n\r\nconst clipToScreenSpace = ([x, y]) => [(x + 1) / 2, (y + 1) / 2];\r\n\r\nclass MyGame {\r\n  constructor(data) {\r\n    this.commands = [];\r\n    this.data = data;\r\n    data.listeners.push(this);\r\n    if (this.data.state.ball) {\r\n      this.data.state.ball.size = 0.1;\r\n    }\r\n    this.data.state.balls = this.setupBalls();\r\n    this.data.state.ball = {\r\n      position: new Vec(0, 0),\r\n      color: new Vec(1, 1, 1),\r\n      size: 0.05,\r\n      velocity: new Vec(0.8, 0.4).mul(2),\r\n    };\r\n    this.data.state.paddles = [\r\n      {\r\n        position: new Vec(-1.9, 0),\r\n        size: new Vec(0.02, 0.2),\r\n        color: new Vec(1, 0, 0),\r\n        direction: 0,\r\n      },\r\n      {\r\n        position: new Vec(1.9, 0),\r\n        size: new Vec(0.02, 0.2),\r\n        color: new Vec(0, 1, 0),\r\n        direction: 0,\r\n      },\r\n    ];\r\n    this.data.saveData();\r\n    this.activeColor = [1, 1, 1, 1];\r\n    this.currLine = { start: [0, 0], end: [0, 0], color: this.activeColor };\r\n  }\r\n\r\n  setupBalls() {\r\n    const balls = [];\r\n    for (var i = 0; i < 1; i++) {\r\n      const origin = new Vec(\r\n        getRandomInt({ max: 1.2, min: -1.5, steps: 200 }),\r\n        getRandomInt({ max: 0.95, min: -0.95, steps: 100 })\r\n      );\r\n      balls.push({\r\n        origin: origin,\r\n        position: origin.clone(),\r\n        color: new Vec(0, 0, 0),\r\n        size: getRandomInt({ max: 0.02, min: 0.01, steps: 5 }),\r\n      });\r\n    }\r\n    return balls;\r\n  }\r\n\r\n  configUpdated() {\r\n    if (!this.data.state.lines) {\r\n      this.data.state.lines = [];\r\n    }\r\n  }\r\n\r\n  updateColor(color) {\r\n    this.activeColor = structuredClone(color);\r\n    this.activeColor.push(1);\r\n    this.currLine.color = this.activeColor;\r\n  }\r\n\r\n  moveBall(delta) {\r\n    const { ball } = this.data.state;\r\n    ball.position.x += delta * ball.velocity.x;\r\n    ball.position.y += delta * ball.velocity.y;\r\n\r\n    if (Math.abs(ball.position.x) + ball.size >= 2) {\r\n      ball.velocity.x *= -1;\r\n    }\r\n    if (Math.abs(ball.position.y) + ball.size >= 1) {\r\n      ball.velocity.y *= -1;\r\n    }\r\n  }\r\n\r\n  applyCommand(command) {\r\n    switch (command.type) {\r\n      case MoveCommand:\r\n        {\r\n          this.data.state.paddles[command.playerIndex].direction =\r\n            command.direction;\r\n        }\r\n        break;\r\n      case TickCommand:\r\n        const { delta } = command;\r\n        const { ball, balls, paddles } = this.data.state;\r\n        this.moveBall(delta);\r\n        for (let i = 0; i < balls.length; i++) {\r\n          const other = balls[i];\r\n          other.color.sub(Vec.ONE3.clone().mul(2 * delta)).max(Vec.ZERO3);\r\n          const deltaV = other.position.clone().sub(ball.position);\r\n          if (deltaV.len() < 0.15) {\r\n            other.color.copy(ball.color).mul(3);\r\n          }\r\n        }\r\n\r\n        // check intersections\r\n\r\n        for (let i = 0; i < paddles.length; i++) {\r\n          const p = paddles[i];\r\n          p.position.y += delta * p.direction * 2;\r\n          p.position.y = Math.min(\r\n            Math.max(p.position.y, -1 + p.size.y),\r\n            1 - p.size.y\r\n          );\r\n\r\n          const size = new Vec(p.size);\r\n          const top = new Vec(p.position).add(p.size);\r\n          const bot = new Vec(p.position).sub(p.size);\r\n          const lineSegments = [\r\n            new LineSegment(\r\n              top.clone(),\r\n              top.clone().sub(size.clone().mul(Vec.X2).mul(2))\r\n            ),\r\n            new LineSegment(\r\n              top.clone(),\r\n              top.clone().sub(size.clone().mul(Vec.Y2).mul(2))\r\n            ),\r\n            new LineSegment(\r\n              bot.clone(),\r\n              bot.clone().add(size.clone().mul(Vec.X2).mul(2))\r\n            ),\r\n            new LineSegment(\r\n              bot.clone(),\r\n              bot.clone().add(size.clone().mul(Vec.Y2).mul(2))\r\n            ),\r\n          ];\r\n\r\n          for (let j = 0; j < lineSegments.length; j++) {\r\n            const l = lineSegments[j];\r\n            const dist = l.distanceTo(ball.position);\r\n            if (dist < ball.size) {\r\n              ball.color = p.color;\r\n              if (Math.sign(ball.velocity.x) != Math.sign(0.5 - i)) {\r\n                ball.velocity.x *= -1;\r\n              }\r\n            }\r\n          }\r\n        }\r\n        this.data.saveData();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  update(deltaTime) {\r\n    this.commands.push(new TickCommand(deltaTime));\r\n    this.commands.forEach((command) => {\r\n      this.applyCommand(command);\r\n    });\r\n    this.commands.length = 0;\r\n  }\r\n}\r\n\r\nexport { InputStateManager, MyGame };\r\n","#version 300 es\r\nprecision lowp float;\r\n\r\n#define PI 3.141592654 \r\n#define TAU (2.0*PI)\r\n#define BAD_PROBE_INDEX_COLOR vec4(1.,1.,0.,1.);\r\n#define DEBUG_COLOR vec4(0.,1.,1.,1.);\r\n#define RESERVED_COLOR vec4(0.5,0.5,0.,1.);\r\n\r\nstruct CascadeConfig { \r\n  int depth;\r\n  float minDistance;\r\n  float maxDistance;\r\n};\r\n\r\nstruct DebugInfo {\r\n  bool continousBilinearFix;\r\n  bool cornerProbes;\r\n  bool showSampleUv;\r\n  bool showProbeUv;\r\n  bool showDirection;\r\n  bool noFix;\r\n  bool quadSample;\r\n  int finalDepth;\r\n};\r\n\r\nuniform vec2 resolution;\r\nuniform vec2 renderResolution;\r\nuniform int maxSteps;\r\nuniform sampler2D tDistance;\r\nuniform sampler2D tColor;\r\nuniform int startDepth;\r\nuniform CascadeConfig current;\r\nuniform CascadeConfig deeper;\r\nuniform DebugInfo debug;\r\nuniform sampler2D tPrevCascade;\r\n\r\nout vec4 outColor;\r\n\r\nbool outOfBounds(vec2 uv) {\r\n  return uv.x < 0. || uv.x > 1. || uv.y < 0. || uv.y > 1.;\r\n}\r\n\r\nvec4 sampleSky(vec2 dir) {\r\n  return vec4(0., 0., 0., 1.);\r\n}\r\n\r\nvec4 castRay(vec2 start, vec2 end) {\r\nvec2 initialStart = start;\r\n  vec2 delta = end - start;\r\n  float distanceLeft = length(delta);\r\n  float minStep = 2. / float(textureSize(tColor, 0).x);\r\n  vec2 dir = delta / distanceLeft;\r\n  for (int i = 0; i < maxSteps; i++) {\r\n    if (distanceLeft < 0.) {\r\n        return vec4(0.);\r\n    }\r\n\r\n    if (outOfBounds(start)) {\r\n      return sampleSky(dir);\r\n    }\r\n    \r\n    float sdf = texture(tDistance, start).r ;\r\n    vec4 color = texture(tColor, start);\r\n    if (color.a > 0.9) {\r\n      color *= pow(0.01, length(start - initialStart));\r\n      return color;\r\n    }\r\n\r\n    sdf += minStep;\r\n    start += sdf * dir;\r\n    distanceLeft -= sdf;\r\n  }\r\n  return vec4(0.);\r\n}\r\n\r\n\r\n// gets the uv of the probe for this index\r\nvec2 indicesToProbeUv(ivec4 probeIndex) {\r\n    float probeCount = float(textureSize(tPrevCascade, 0).x >> (probeIndex.w + 1));\r\n    vec2 zeroToOne = vec2(probeIndex.xy) / (probeCount - 1.);\r\n    vec2 delta = 1. / renderResolution;\r\n    return zeroToOne * (1. - delta) + 0.5 * delta; \r\n}\r\n\r\nint imod(int v, int m) {\r\n    return int(mod(float(v),float(m)));\r\n}\r\n\r\nivec2 imod(ivec2 v, int m) {\r\n    return ivec2(mod(vec2(v),float(m)));\r\n}\r\n\r\nivec3 imod(ivec3 v, int m) {\r\n    return ivec3(mod(vec3(v),float(m)));\r\n}\r\n\r\nivec4 imod(ivec4 v, int m) {\r\n    return ivec4(mod(vec4(v),float(m)));\r\n}\r\n\r\nvec2 indicesToSampleUv(ivec4 index) {\r\n    ivec2 texSize = textureSize(tPrevCascade, 0);\r\n    vec2 pixelSizeInUv = 1. / vec2(texSize); \r\n\r\n    vec2 probeOffset = (vec2(index.xy) + 0.5) * pixelSizeInUv;\r\n\r\n    int probePerDim = texSize.x >>  (index.w + 1);\r\n    int dirDivison = texSize.x / probePerDim;\r\n    ivec2 gridCoord = ivec2( imod(index.z,dirDivison),index.z / dirDivison);\r\n\r\n    vec2 directionOffset = vec2(gridCoord) * pixelSizeInUv * float(probePerDim);\r\n\r\n    return probeOffset + directionOffset;\r\n}\r\n\r\nvec4 indicesToProbeDir(ivec4 index) {\r\n    float tauOverIndexRayCount = TAU / float(4 << (2 * index.w));\r\n    float angle = tauOverIndexRayCount * (float(index.z) + 0.5);\r\n    vec2 dir = vec2(cos(angle), -sin(angle)) / renderResolution;\r\n    dir = normalize(dir);\r\n\r\n\r\n    float probeCount = float(textureSize(tPrevCascade, 0).x >> (index.w + 1));\r\n    vec2 zeroToOne = vec2(index.xy) / (probeCount - 1.);\r\n    vec2 delta = 1. / renderResolution;\r\n    vec2 probeUv = zeroToOne * (1. - delta) + 0.5 * delta; \r\n\r\n    return vec4(probeUv, dir);\r\n}\r\n\r\n// gets the index that corresponds to this texture uv\r\nivec4 sampleUvToIndices(ivec2 coord) {\r\n    int probePerDim = textureSize(tPrevCascade, 0).x >> (current.depth + 1);\r\n    ivec2 gridCoord = coord / probePerDim;\r\n    ivec2 probeCoord = imod(coord, probePerDim);\r\n\r\n    int sqrtDirectionCount = textureSize(tPrevCascade, 0).x / probePerDim;\r\n\r\n    int direction = gridCoord.x + sqrtDirectionCount * gridCoord.y;\r\n    return ivec4(probeCoord, direction, current.depth);\r\n}\r\n\r\nvec2 lineSegmentUv(ivec4 probeIndex, float distance) {\r\n  vec4 probeUvDir = indicesToProbeDir(probeIndex);\r\n  return probeUvDir.xy + distance * probeUvDir.zw;\r\n}\r\n\r\nivec4 topLeftIndex(ivec4 probeIndex) {\r\n    float probeCount = float(textureSize(tPrevCascade, 0).x >> (probeIndex.w + 1));\r\n    vec2 zeroToOne = vec2(probeIndex.xy) / (probeCount - 1.);\r\n    int deeperProbeCount = int(0.5 * probeCount  - 1.);\r\n    ivec2 topLeftProbe = ivec2(floor(float(deeperProbeCount) * zeroToOne));\r\n    if (topLeftProbe.x == deeperProbeCount ) {\r\n        topLeftProbe.x = deeperProbeCount - 1;\r\n    }\r\n    if (topLeftProbe.y == deeperProbeCount) {\r\n        topLeftProbe.y = deeperProbeCount - 1;\r\n    }\r\n    return ivec4(\r\n        topLeftProbe.x,\r\n        topLeftProbe.y, \r\n        4 * probeIndex.z,\r\n        probeIndex.w + 1\r\n    );\r\n}\r\n\r\nvec4 sampleCascade(ivec4 deeperIndex) {\r\n    vec4 rad = vec4(0.);\r\n    if (rad.a < 0.5) {\r\n        for (int i = 0; i < 4; i++) {\r\n            rad += texture(tPrevCascade, indicesToSampleUv(deeperIndex + ivec4(0,0,i,0)));\r\n        }\r\n        rad *= 0.25;\r\n    } \r\n    return rad;\r\n\r\n}\r\n\r\nvec4 bilinearRaycast(\r\n    vec2 start,\r\n    vec2 end,\r\n    vec2 probeUv,\r\n    vec2 deeperUv,\r\n    ivec4 deeperIndex\r\n) {\r\n    vec4 rad = castRay(start, end + (deeperUv - probeUv));\r\n    if (rad.a < 0.05) {\r\n        rad = sampleCascade(deeperIndex);\r\n        rad *= pow(0.01, current.maxDistance - current.minDistance);\r\n    } \r\n    return rad;\r\n}\r\n\r\nvoid main() {\r\n    ivec4 index = sampleUvToIndices(ivec2(gl_FragCoord.xy));\r\n    \r\n    if (debug.noFix) {\r\n        vec2 start = lineSegmentUv(index, current.minDistance);\r\n        vec2 end = lineSegmentUv(index, current.maxDistance);\r\n        outColor = castRay(start, end);\r\n    \r\n        if (outColor.w < 0.5) {\r\n            ivec4 indexTL = topLeftIndex(index);\r\n            ivec4 indexBR = indexTL + ivec4(1,1,0,0);\r\n\r\n            vec2 probe = indicesToProbeUv(index);\r\n            vec2 probeTL = indicesToProbeUv(indexTL);\r\n            vec2 probeBR = indicesToProbeUv(indexBR);\r\n\r\n            vec2 weights = (probe - probeTL) / (probeBR - probeTL);\r\n\r\n            vec2 sample1 = mix(indicesToSampleUv(indexTL), indicesToSampleUv(indexBR), weights);\r\n            vec2 sample2 = mix(indicesToSampleUv(indexTL + ivec4(0,0,1,0)), \r\n                                indicesToSampleUv(indexBR + ivec4(0,0,1,0)), \r\n                                weights);\r\n            vec2 sample3 = mix(indicesToSampleUv(indexTL + ivec4(0,0,2,0)), \r\n                                indicesToSampleUv(indexBR + ivec4(0,0,2,0)), \r\n                                weights);\r\n            vec2 sample4 = mix(indicesToSampleUv(indexTL + ivec4(0,0,3,0)), \r\n                                indicesToSampleUv(indexBR + ivec4(0,0,3,0)), \r\n                                weights);\r\n\r\n            outColor = 0.25 * (\r\n                texture(tPrevCascade, sample1) +\r\n                texture(tPrevCascade, sample2) +\r\n                texture(tPrevCascade, sample3) +\r\n                texture(tPrevCascade, sample4) \r\n            );\r\n        }\r\n    } else {\r\n        vec4 probeUvDir = indicesToProbeDir(index);\r\n        ivec4 indexTL = topLeftIndex(index);\r\n        vec2 probeTL = indicesToProbeUv(indexTL);\r\n        ivec4 indexTR = indexTL + ivec4(1, 0, 0, 0);\r\n        vec2 probeTR = indicesToProbeUv(indexTR); \r\n        ivec4 indexBL = indexTL + ivec4(0, 1, 0, 0);\r\n        vec2 probeBL = indicesToProbeUv(indexBL);\r\n        ivec4 indexBR = indexTL + ivec4(1, 1, 0, 0);\r\n        vec2 probeBR = indicesToProbeUv(indexBR);\r\n        \r\n        vec2 start = probeUvDir.xy + current.minDistance * probeUvDir.zw;\r\n        vec2 end = probeUvDir.xy + current.maxDistance * probeUvDir.zw;\r\n\r\n        vec4 radTL = bilinearRaycast(start, end,probeUvDir.xy, probeTL, indexTL);\r\n        vec4 radTR = bilinearRaycast(start, end,probeUvDir.xy, probeTR, indexTR);\r\n        vec4 radBL = bilinearRaycast(start, end,probeUvDir.xy, probeBL, indexBL);\r\n        vec4 radBR = bilinearRaycast(start, end,probeUvDir.xy, probeBR, indexBR);\r\n\r\n        vec2 weights = (probeUvDir.xy - probeTL) / (probeBR - probeTL);\r\n\r\n        vec4 top = mix(radTL, radTR, vec4(weights.x));\r\n        vec4 bot = mix(radBL, radBR, vec4(weights.x));\r\n\r\n        outColor =  mix(top, bot, vec4(weights.y));\r\n    }\r\n\r\n\r\n    outColor.w = 1.;\r\n}\r\n","#version 300 es\r\nstruct DebugInfo {\r\n  bool continousBilinearFix;\r\n  bool cornerProbes;\r\n  bool showSampleUv;\r\n  bool showProbeUv;\r\n  bool showDirection;\r\n  bool noFix;\r\n  bool quadSample;\r\n};\r\n\r\nprecision mediump float;\r\nuniform sampler2D tPrevCascade;\r\nuniform vec2 resolution;\r\nuniform DebugInfo debug;\r\n\r\nout vec4 outColor;\r\n\r\nvec2 cascadeUvOffset(int cascadeIndex) {\r\n  return vec2(0.5 * float(cascadeIndex / 2), 0.5 * mod(float(cascadeIndex), 2.));\r\n}\r\n\r\nvec2 sampleUvMapped(vec2 sampleUv) {\r\n  vec2 fuv = fwidth(sampleUv);\r\n  vec2 minUvRemap = 0.5  * fuv;\r\n  vec2 maxUvRemap = 1. - minUvRemap;\r\n  vec2 zeroToOne = (sampleUv - minUvRemap) / (maxUvRemap - minUvRemap);\r\n  vec2 delta = 1. / vec2(textureSize(tPrevCascade, 0));\r\n  vec2 newMax = vec2(0.5 - delta) ;\r\n  vec2 newMin = delta;\r\n  return zeroToOne * (newMax - newMin) + newMin;\r\n}\r\n\r\nvec4 radiance(vec2 uv) {\r\n  vec4 rad = vec4(0.);\r\n  vec2 remapped = sampleUvMapped(uv);\r\n  for (int i = 0; i < 4; i++) {\r\n    vec2 offsetUv = cascadeUvOffset(i) + remapped;\r\n    rad += texture(tPrevCascade, offsetUv);\r\n  }\r\n  return rad / 4.;\r\n}\r\n\r\nvoid main() {\r\n  vec2 uv = gl_FragCoord.xy / resolution;\r\n  outColor = radiance(uv);\r\n  outColor.w = 1.;\r\n}\r\n","import \"./style.css\";\r\nimport { WindowManager } from \"./engine/window.js\";\r\nimport { DataManager } from \"./engine/data.js\";\r\nimport Stats from \"stats-js\";\r\nimport * as twgl from \"twgl.js\";\r\nimport { InputManager } from \"./engine/input.js\";\r\nimport { InputStateManager, MyGame } from \"./game.js\";\r\nimport calculateQuadCascade from \"./shaders/quadCascade.fs\";\r\nimport renderQuadCascade from \"./shaders/renderQuadCascade.fs\";\r\n\r\nvar stats = new Stats();\r\nstats.showPanel(0); // 0: fps, 1: ms, 2: mb, 3+: custom\r\ndocument.body.appendChild(stats.dom);\r\n\r\n// Render Pipeline\r\n\r\nconst gl = document.getElementById(\"webgl\").getContext(\"webgl2\");\r\ntwgl.addExtensionsToContext(gl);\r\n\r\nfunction renderTo(\r\n  gl,\r\n  programInfo,\r\n  bufferInfo,\r\n  uniforms,\r\n  targetFrameBuffer = null,\r\n  targetDimensions = null\r\n) {\r\n  gl.useProgram(programInfo.program);\r\n  twgl.setBuffersAndAttributes(gl, programInfo, bufferInfo);\r\n  twgl.setUniforms(programInfo, uniforms);\r\n  twgl.bindFramebufferInfo(gl, targetFrameBuffer);\r\n  if (targetDimensions) {\r\n    gl.viewport(\r\n      targetDimensions[0],\r\n      targetDimensions[1],\r\n      targetDimensions[2],\r\n      targetDimensions[3]\r\n    );\r\n  }\r\n  twgl.drawBufferInfo(gl, bufferInfo);\r\n}\r\n\r\nconst arrays = {\r\n  position: {\r\n    numComponents: 3,\r\n    data: [-1, -1, 0, 1, -1, 0, -1, 1, 0, -1, 1, 0, 1, -1, 0, 1, 1, 0],\r\n  },\r\n};\r\nconst bufferInfo = twgl.createBufferInfoFromArrays(gl, arrays);\r\n\r\n// Time\r\n\r\n// Data Storage\r\n\r\nconst data = new DataManager();\r\ndata.init();\r\n\r\n// Canvas Manager\r\n\r\nconst windowManager = new WindowManager(2);\r\n\r\n// Input handler\r\n\r\nconst input = new InputManager(windowManager);\r\n\r\nconst inputState = new InputStateManager();\r\n\r\n// Game\r\n\r\nconst game = new MyGame(data);\r\n\r\n// Data Storage Layer\r\n\r\n// Draw Lines\r\n\r\nconst vs = `#version 300 es\r\nin vec2 position;\r\nvoid main() {\r\n  gl_Position = vec4(position, 0.0, 1.0);\r\n}\r\n`;\r\n\r\nconst fs_constant_fill = `#version 300 es\r\nprecision highp float;\r\n\r\nuniform vec4 color;\r\n\r\nout vec4 outColor;\r\n\r\nvoid main() {\r\n  outColor = color;\r\n}\r\n`;\r\n\r\nconst fs_write_line = `#version 300 es\r\nprecision mediump float;\r\n\r\nuniform vec2 resolution;\r\nuniform float time;\r\nuniform vec2 lineStart;\r\nuniform vec4 color;\r\nuniform vec2 lineEnd;\r\nuniform float pixelLineSize;\r\nuniform sampler2D tPrev;\r\n\r\nout vec4 outColor;\r\n\r\nfloat lineDist() {\r\n  vec2 uv = gl_FragCoord.xy / resolution;\r\n  if (lineStart == lineEnd) {\r\n    return length(lineStart - uv);\r\n  } else {\r\n   vec2 delta = (lineEnd - lineStart);\r\n    vec2 dir = uv - lineStart;\r\n    float t = dot(dir, delta) / dot(delta,delta);\r\n    if (t < 0. || t > 1.) {\r\n      return min(length(uv - lineStart), length(uv - lineEnd));\r\n    } else {\r\n     return length(lineStart + t * delta - uv);\r\n    }\r\n   return 0.;\r\n  }\r\n}\r\n\r\nvoid main() {\r\n  vec2 uv = gl_FragCoord.xy / resolution;\r\n  float dist = step(lineDist(), pixelLineSize / resolution.x);\r\n  outColor = mix(texture(tPrev, uv).xyzw, color.rgba,  dist);\r\n}\r\n`;\r\n\r\nconst fs_jump = `#version 300 es\r\nprecision mediump float;\r\n\r\nuniform vec2 resolution;\r\nuniform float jumpSize; \r\nuniform sampler2D tPrev;\r\nuniform sampler2D tLine;\r\n\r\nout vec4 outColor;\r\n\r\nvoid main() {\r\n  vec2 uv = gl_FragCoord.xy / resolution;\r\n  \r\n  vec3 prevClosestPos = texture(tPrev, uv).xyz;\r\n\r\n  for (int i = -1; i <= 1; i++) {\r\n    for (int j = -1; j <= 1; j++) {\r\n      vec2 delta = vec2(float(i), float(j)) * jumpSize / resolution;\r\n      vec2 sampleUv = uv + delta;\r\n      vec3 closestPos = texture(tPrev, sampleUv).xyz;\r\n      float lineVal = texture(tLine, sampleUv).a;\r\n\r\n      if (lineVal > 0.1) {\r\n        closestPos = vec3(sampleUv, 1.);\r\n      }\r\n\r\n      if (closestPos.z > 0.) {\r\n        if (prevClosestPos.z > 0.) {\r\n          if (length(closestPos.xy - uv) < length(prevClosestPos.xy - uv)) {\r\n            prevClosestPos = closestPos;\r\n          }\r\n        } else {\r\n          prevClosestPos = closestPos;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  outColor = vec4( prevClosestPos , 0.);\r\n}\r\n`;\r\n\r\nconst fs_render_closest = `#version 300 es\r\nprecision mediump float;\r\n\r\nuniform vec2 resolution;\r\nuniform sampler2D tPrev;\r\n\r\nout vec4 outColor;\r\n\r\nvoid main() {\r\n  vec2 uv = gl_FragCoord.xy / resolution;\r\n  float dist = length(texture(tPrev, uv).xy - uv);\r\n  outColor = vec4(float(gl_FragCoord.x == resolution.x - 0.5), float(gl_FragCoord.y == resolution.y - 0.5), 0. ,1.);\r\n  outColor = vec4(vec3(dist), 1.0);\r\n}\r\n\r\n`;\r\n\r\nconst fs_calculate_distance = `#version 300 es\r\nprecision mediump float;\r\n\r\nuniform vec2 resolution;\r\nuniform sampler2D tPrev;\r\n\r\nout vec4 outColor;\r\n\r\nvoid main() {\r\n  vec2 uv = gl_FragCoord.xy / resolution;\r\n  outColor = texture(tPrev, uv);\r\n}\r\n\r\n`;\r\n\r\nconst fs_render_texture = `#version 300 es\r\nprecision highp float;\r\n\r\nuniform vec2 resolution;\r\nuniform vec4 renderTarget;\r\nuniform sampler2D tPrev;\r\n\r\nout vec4 outColor;\r\n\r\nvoid main() {\r\n  vec2 uv = gl_FragCoord.xy / resolution;\r\n  vec2 targetUv = (renderTarget.zw - renderTarget.xy) * uv + renderTarget.xy;\r\n  outColor = texture(tPrev, targetUv).rgba;\r\n}\r\n`;\r\n\r\nconst fs_apply_gamma = `#version 300 es\r\nprecision highp float;\r\n\r\nuniform vec2 resolution;\r\nuniform sampler2D tPrev;\r\n\r\nout vec4 outColor;\r\n\r\nvoid main() {\r\n  vec2 uv = gl_FragCoord.xy / resolution;\r\n  outColor = pow(texture(tPrev, uv), vec4(1./2.2));\r\n}\r\n`;\r\n\r\nconst vs_instance = `#version 300 es\r\nin vec2 position;\r\nin vec4 color;\r\nin mat4 matrix;\r\n\r\nout vec4 v_color;\r\n  void main() {\r\n    // Multiply the position by the matrix.\r\n    gl_Position = matrix * vec4(position, 0.0, 1.0);\r\n    v_color = color;\r\n  }\r\n`;\r\nconst fs_instance_color = `#version 300 es\r\n\r\nprecision mediump float;\r\n\r\nin vec4 v_color;\r\n\r\nout vec4 outColor;\r\nvoid main() {\r\n  outColor = v_color;\r\n}`;\r\n\r\nconst instanceColor = twgl.createProgramInfo(gl, [\r\n  vs_instance,\r\n  fs_instance_color,\r\n]);\r\nconst drawLineToBuffer = twgl.createProgramInfo(gl, [vs, fs_write_line]);\r\nconst renderTexture = twgl.createProgramInfo(gl, [vs, fs_render_texture]);\r\nconst calculateDistance = twgl.createProgramInfo(gl, [vs, fs_render_closest]);\r\nconst drawTexture = twgl.createProgramInfo(gl, [vs, fs_render_closest]);\r\nconst fillColor = twgl.createProgramInfo(gl, [vs, fs_constant_fill]);\r\nconst jumpFill = twgl.createProgramInfo(gl, [vs, fs_jump]);\r\nconst applyGamma = twgl.createProgramInfo(gl, [vs, fs_apply_gamma]);\r\nconst cascadeQuadCalculate = twgl.createProgramInfo(gl, [\r\n  vs,\r\n  calculateQuadCascade,\r\n]);\r\nconst m4 = twgl.m4;\r\nconst cascadeQuadRender = twgl.createProgramInfo(gl, [vs, renderQuadCascade]);\r\n\r\nconst vertexData = [];\r\n\r\nconst numPts = 32;\r\n\r\nfor (var i = 0; i <= numPts; i++) {\r\n  vertexData.push(\r\n    Math.sin((i * Math.PI * 2) / numPts),\r\n    Math.cos((i * Math.PI * 2) / numPts)\r\n  );\r\n}\r\nfunction renderBall(buffer, size) {\r\n  const matrices = [];\r\n  const colors = [];\r\n\r\n  const { ball } = game.data.state;\r\n\r\n  const scale = m4.scaling([\r\n    (ball.size * size) / windowManager.sizes.aspect,\r\n    ball.size * size,\r\n    ball.size * size,\r\n  ]);\r\n  const translation = m4.translation([\r\n    ball.position.x / (ball.size * size),\r\n    ball.position.y / (ball.size * size),\r\n    0,\r\n  ]);\r\n  const mat = m4.multiply(scale, translation);\r\n  mat.forEach((v, i) => {\r\n    matrices.push(v);\r\n  });\r\n  colors.push(ball.color.x, ball.color.y, ball.color.z, 1);\r\n\r\n  mat.forEach((v, i) => {\r\n    matrices.push(v);\r\n  });\r\n  colors.push(ball.color.x, ball.color.y, ball.color.z, 1);\r\n\r\n  const arrays4 = {\r\n    position: {\r\n      numComponents: 2,\r\n      data: vertexData,\r\n    },\r\n    color: {\r\n      numComponents: 4,\r\n      data: colors,\r\n      divisor: 1,\r\n    },\r\n    matrix: {\r\n      numComponents: 16,\r\n      data: matrices,\r\n      divisor: 1,\r\n    },\r\n  };\r\n  const bufferInfo4 = twgl.createBufferInfoFromArrays(gl, arrays4);\r\n  const vertexArrayInfo = twgl.createVertexArrayInfo(\r\n    gl,\r\n    instanceColor,\r\n    bufferInfo4\r\n  );\r\n\r\n  gl.useProgram(instanceColor.program);\r\n  twgl.setBuffersAndAttributes(gl, instanceColor, vertexArrayInfo);\r\n  twgl.bindFramebufferInfo(gl, buffer);\r\n  twgl.drawBufferInfo(\r\n    gl,\r\n    vertexArrayInfo,\r\n    gl.TRIANGLE_FAN,\r\n    vertexArrayInfo.numElements,\r\n    0,\r\n    1\r\n  );\r\n}\r\n\r\nfunction renderBalls(buffer, size) {\r\n  const matrices2 = [];\r\n  const colors2 = [];\r\n\r\n  const { balls } = game.data.state;\r\n\r\n  for (let i = 0; i < balls.length; i++) {\r\n    const b = balls[i];\r\n    const scale = m4.scaling([\r\n      (b.size * size) / windowManager.sizes.aspect,\r\n      b.size * size,\r\n      b.size * size,\r\n    ]);\r\n    const translation = m4.translation([\r\n      b.position.x / (b.size * size),\r\n      b.position.y / (b.size * size),\r\n      0,\r\n    ]);\r\n\r\n    const mat = m4.multiply(scale, translation);\r\n    mat.forEach((v, i) => {\r\n      matrices2.push(v);\r\n    });\r\n    colors2.push(b.color.z, b.color.y, b.color.z, 1);\r\n  }\r\n\r\n  const arrays2 = {\r\n    position: {\r\n      numComponents: 2,\r\n      data: vertexData,\r\n    },\r\n    color: {\r\n      numComponents: 4,\r\n      data: colors2,\r\n      divisor: 1,\r\n    },\r\n    matrix: {\r\n      numComponents: 16,\r\n      data: matrices2,\r\n      divisor: 1,\r\n    },\r\n  };\r\n  const bufferInfo2 = twgl.createBufferInfoFromArrays(gl, arrays2);\r\n  const vertexArrayInfo2 = twgl.createVertexArrayInfo(\r\n    gl,\r\n    instanceColor,\r\n    bufferInfo2\r\n  );\r\n  gl.useProgram(instanceColor.program);\r\n  twgl.setBuffersAndAttributes(gl, instanceColor, vertexArrayInfo2);\r\n  twgl.bindFramebufferInfo(gl, buffer);\r\n  twgl.drawBufferInfo(\r\n    gl,\r\n    vertexArrayInfo2,\r\n    gl.TRIANGLE_FAN,\r\n    vertexArrayInfo2.numElements,\r\n    0,\r\n    balls.length\r\n  );\r\n}\r\nfunction renderPaddles(buffer, size) {\r\n  const matrices3 = [];\r\n  const colors3 = [];\r\n\r\n  const { paddles } = game.data.state;\r\n\r\n  for (let i = 0; i < paddles.length; i++) {\r\n    const p = paddles[i];\r\n    const scale = m4.scaling([\r\n      (p.size.x * size) / windowManager.sizes.aspect,\r\n      p.size.y * size,\r\n      1,\r\n    ]);\r\n    const translation = m4.translation([\r\n      p.position.x / (p.size.x * size),\r\n      p.position.y / (p.size.y * size),\r\n      0,\r\n    ]);\r\n    const mat = m4.multiply(scale, translation);\r\n    mat.forEach((v, i) => {\r\n      matrices3.push(v);\r\n    });\r\n    colors3.push(p.color.x, p.color.y, p.color.z, 1);\r\n  }\r\n  const vertexData2 = [1, 1, 1, -1, -1, -1, -1, 1];\r\n\r\n  const arrays3 = {\r\n    position: {\r\n      numComponents: 2,\r\n      data: vertexData2,\r\n    },\r\n    color: {\r\n      numComponents: 4,\r\n      data: colors3,\r\n      divisor: 1,\r\n    },\r\n    matrix: {\r\n      numComponents: 16,\r\n      data: matrices3,\r\n      divisor: 1,\r\n    },\r\n  };\r\n  const bufferInfo3 = twgl.createBufferInfoFromArrays(gl, arrays3);\r\n  const vertexArrayInfo3 = twgl.createVertexArrayInfo(\r\n    gl,\r\n    instanceColor,\r\n    bufferInfo3\r\n  );\r\n  gl.useProgram(instanceColor.program);\r\n  twgl.setBuffersAndAttributes(gl, instanceColor, vertexArrayInfo3);\r\n  twgl.bindFramebufferInfo(gl, buffer);\r\n  twgl.drawBufferInfo(\r\n    gl,\r\n    vertexArrayInfo3,\r\n    gl.TRIANGLE_FAN,\r\n    vertexArrayInfo3.numElements,\r\n    0,\r\n    paddles.length\r\n  );\r\n}\r\n\r\nfunction drawToBuffer(time, buffer, size, game) {\r\n  renderBall(buffer, size);\r\n  renderBalls(buffer, size);\r\n  renderPaddles(buffer, size);\r\n}\r\n\r\nwindowManager.listeners.push({\r\n  updateSize: ({ width, height }) => {\r\n    gl.canvas.width = width;\r\n    gl.canvas.height = height;\r\n  },\r\n});\r\nlet toSave = false;\r\n\r\ndata.addButton({\r\n  name: \"Save Image\",\r\n  fn: () => {\r\n    toSave = true;\r\n  },\r\n});\r\n\r\nconst saveImage = () => {\r\n  let canvas = document.getElementById(\"webgl\");\r\n\r\n  var image = canvas.toDataURL();\r\n  // Create a link\r\n  var aDownloadLink = document.createElement(\"a\");\r\n  // Add the name of the file to the link\r\n  aDownloadLink.download = \"canvas_image.png\";\r\n  // Attach the data to the link\r\n  aDownloadLink.href = image;\r\n  // Get the code to click the download link\r\n  aDownloadLink.click();\r\n  toSave = false;\r\n};\r\n\r\nconst width = 8 * 128;\r\nconst height = width;\r\nconst frameBuffers = {\r\n  lightEmittersWithCurrent: twgl.createFramebufferInfo(\r\n    gl,\r\n    [\r\n      {\r\n        internalFormat: gl.RGBA8,\r\n        format: gl.RGBA,\r\n        mag: gl.LINEAR,\r\n        min: gl.LINEAR,\r\n        wrap: gl.CLAMP_TO_EDGE,\r\n      },\r\n    ],\r\n    width,\r\n    height\r\n  ),\r\n  distance: twgl.createFramebufferInfo(\r\n    gl,\r\n    [\r\n      {\r\n        internalFormat: gl.R8,\r\n        format: gl.R,\r\n        mag: gl.LINEAR,\r\n        min: gl.LINEAR,\r\n        wrap: gl.CLAMP_TO_EDGE,\r\n      },\r\n    ],\r\n    width,\r\n    height\r\n  ),\r\n  fill: twgl.createFramebufferInfo(\r\n    gl,\r\n    [\r\n      {\r\n        internalFormat: gl.RGB8,\r\n        format: gl.RGB,\r\n        mag: gl.NEAREST,\r\n        min: gl.NEAREST,\r\n        wrap: gl.CLAMP_TO_EDGE,\r\n      },\r\n    ],\r\n    width,\r\n    height\r\n  ),\r\n  spare: twgl.createFramebufferInfo(\r\n    gl,\r\n    [\r\n      {\r\n        internalFormat: gl.RGB8,\r\n        format: gl.RGB,\r\n        mag: gl.NEAREST,\r\n        min: gl.NEAREST,\r\n        wrap: gl.CLAMP_TO_EDGE,\r\n      },\r\n    ],\r\n    width,\r\n    height\r\n  ),\r\n  quadCascadeRT: twgl.createFramebufferInfo(\r\n    gl,\r\n    [\r\n      {\r\n        internalFormat: gl.RGBA32F,\r\n        format: gl.RGBA,\r\n        mag: gl.LINEAR,\r\n        min: gl.LINEAR,\r\n        wrap: gl.CLAMP_TO_EDGE,\r\n      },\r\n    ],\r\n    width,\r\n    height\r\n  ),\r\n  spareQuadCascadeRT: twgl.createFramebufferInfo(\r\n    gl,\r\n    [\r\n      {\r\n        internalFormat: gl.RGBA32F,\r\n        format: gl.RGBA,\r\n        mag: gl.LINEAR,\r\n        min: gl.LINEAR,\r\n        wrap: gl.CLAMP_TO_EDGE,\r\n      },\r\n    ],\r\n    width,\r\n    height\r\n  ),\r\n  spareQuadCascadeFinalRT: twgl.createFramebufferInfo(\r\n    gl,\r\n    [\r\n      {\r\n        internalFormat: gl.RGBA32F,\r\n        format: gl.RGBA,\r\n        mag: gl.LINEAR,\r\n        min: gl.LINEAR,\r\n        wrap: gl.CLAMP_TO_EDGE,\r\n      },\r\n    ],\r\n    width,\r\n    height\r\n  ),\r\n};\r\n\r\ndata.addColor({\r\n  displayName: \"Color\",\r\n  defaultValue: [1, 1, 1],\r\n  callback: (color) => {\r\n    game.commands.push(new UpdateColorCommand(color));\r\n  },\r\n});\r\nconst ext = gl.getExtension(\"EXT_disjoint_timer_query_webgl2\");\r\nconst query = gl.createQuery();\r\nvar hasQueried = false;\r\nvar hasFinished = false;\r\nfunction renderScene(time) {\r\n  gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\r\n\r\n  renderTo(\r\n    gl,\r\n    fillColor,\r\n    bufferInfo,\r\n    { color: [0, 0, 0, 0] },\r\n    frameBuffers.lightEmittersWithCurrent\r\n  );\r\n\r\n  drawToBuffer(time, frameBuffers.lightEmittersWithCurrent, 1, game);\r\n}\r\n\r\nfunction renderDepth(time, depth) {\r\n  const startDepth = Math.log2(width) - 5;\r\n  const shortestDistance = (2 * Math.SQRT2) / frameBuffers.quadCascadeRT.width;\r\n  const longestDistance = Math.SQRT2;\r\n\r\n  const multiplier2 = Math.log2(longestDistance / shortestDistance);\r\n\r\n  const minDistance =\r\n    depth === 0\r\n      ? 0\r\n      : shortestDistance *\r\n        Math.pow(2, (multiplier2 * (depth - 1)) / startDepth);\r\n  const maxDistance =\r\n    depth == startDepth\r\n      ? Math.SQRT2\r\n      : shortestDistance * Math.pow(2, (multiplier2 * depth) / startDepth);\r\n  const deeperMaxDistance =\r\n    shortestDistance * Math.pow(2, (multiplier2 * (depth + 1)) / startDepth);\r\n\r\n  renderTo(\r\n    gl,\r\n    cascadeQuadCalculate,\r\n    bufferInfo,\r\n    {\r\n      renderResolution: [gl.canvas.width, gl.canvas.height],\r\n      resolution: [\r\n        frameBuffers.quadCascadeRT.width,\r\n        frameBuffers.quadCascadeRT.height,\r\n      ],\r\n      maxSteps: data.addNumber({\r\n        displayName: \"Max Steps\",\r\n        defaultValue: 32,\r\n        min: 1,\r\n        max: 128,\r\n        step: 1,\r\n      }).value,\r\n      tDistance: frameBuffers.distance.attachments[0],\r\n      tColor: frameBuffers.lightEmittersWithCurrent.attachments[0],\r\n      startDepth: startDepth,\r\n      current: {\r\n        depth: depth,\r\n        minDistance: minDistance,\r\n        maxDistance: maxDistance,\r\n      },\r\n      deeper: {\r\n        depth: depth,\r\n        minDistance: maxDistance,\r\n        maxDistance: deeperMaxDistance,\r\n      },\r\n      debug: {\r\n        continousBilinearFix: data.addNumber({\r\n          displayName: \"Continuous Bilinear Fix\",\r\n          defaultValue: true,\r\n        }).value,\r\n        cornerProbes: data.addNumber({\r\n          displayName: \"Corner Probes\",\r\n          defaultValue: true,\r\n        }).value,\r\n        showSampleUv: data.addNumber({\r\n          displayName: \"Show Sample Uv\",\r\n          defaultValue: false,\r\n        }).value,\r\n        showProbeUv: data.addNumber({\r\n          displayName: \"Show Probe Uv\",\r\n          defaultValue: false,\r\n        }).value,\r\n        showDirection: data.addNumber({\r\n          displayName: \"Show Direction Uv\",\r\n          defaultValue: false,\r\n        }).value,\r\n        noFix: data.addNumber({\r\n          displayName: \"No Fix\",\r\n          defaultValue: false,\r\n        }).value,\r\n        quadSample: data.addNumber({\r\n          displayName: \"Quad Sample\",\r\n          defaultValue: false,\r\n        }).value,\r\n        finalDepth: data.addNumber({\r\n          displayName: \"Final Depth\",\r\n          defaultValue: 0,\r\n          min: 0,\r\n          max: 8,\r\n          step: 1,\r\n        }).value,\r\n      },\r\n      tPrevCascade: frameBuffers.quadCascadeRT.attachments[0],\r\n    },\r\n    frameBuffers.spareQuadCascadeRT\r\n  );\r\n  [frameBuffers.spareQuadCascadeRT, frameBuffers.quadCascadeRT] = [\r\n    frameBuffers.quadCascadeRT,\r\n    frameBuffers.spareQuadCascadeRT,\r\n  ];\r\n}\r\n\r\nfunction renderDistance(time) {\r\n  renderTo(\r\n    gl,\r\n    fillColor,\r\n    bufferInfo,\r\n    { color: [0, 0, 0, 0] },\r\n    frameBuffers.spare\r\n  );\r\n  [frameBuffers.fill, frameBuffers.spare] = [\r\n    frameBuffers.spare,\r\n    frameBuffers.fill,\r\n  ];\r\n\r\n  for (var i = Math.ceil(Math.log2(width)); i >= 0; i--) {\r\n    renderTo(\r\n      gl,\r\n      jumpFill,\r\n      bufferInfo,\r\n      {\r\n        resolution: [frameBuffers.fill.width, frameBuffers.fill.height],\r\n        jumpSize: 1 << i,\r\n        tPrev: frameBuffers.fill.attachments[0],\r\n        tLine: frameBuffers.lightEmittersWithCurrent.attachments[0],\r\n      },\r\n      frameBuffers.spare\r\n    );\r\n    [frameBuffers.fill, frameBuffers.spare] = [\r\n      frameBuffers.spare,\r\n      frameBuffers.fill,\r\n    ];\r\n  }\r\n\r\n  renderTo(\r\n    gl,\r\n    calculateDistance,\r\n    bufferInfo,\r\n    {\r\n      resolution: [frameBuffers.fill.width, frameBuffers.fill.height],\r\n      tPrev: frameBuffers.fill.attachments[0],\r\n    },\r\n    frameBuffers.distance\r\n  );\r\n}\r\n\r\nfunction renderCascadeLevel() {\r\n  renderTo(\r\n    gl,\r\n    renderTexture,\r\n    bufferInfo,\r\n    {\r\n      renderTarget: [\r\n        data.addNumber({\r\n          displayName: \"minx\",\r\n          defaultValue: 0,\r\n          min: 0,\r\n          max: 1,\r\n          step: 0.01,\r\n        }).value,\r\n        data.addNumber({\r\n          displayName: \"miny\",\r\n          defaultValue: 0,\r\n          min: 0,\r\n          max: 1,\r\n          step: 0.01,\r\n        }).value,\r\n        data.addNumber({\r\n          displayName: \"maxx\",\r\n          defaultValue: 1,\r\n          min: 0,\r\n          max: 1,\r\n          step: 0.01,\r\n        }).value,\r\n        data.addNumber({\r\n          displayName: \"maxy\",\r\n          defaultValue: 1,\r\n          min: 0,\r\n          max: 1,\r\n          step: 0.01,\r\n        }).value,\r\n      ],\r\n      resolution: [\r\n        frameBuffers.quadCascadeRT.width,\r\n        frameBuffers.quadCascadeRT.height,\r\n      ],\r\n      tPrev: frameBuffers.quadCascadeRT.attachments[0],\r\n    },\r\n    frameBuffers.spareQuadCascadeFinalRT\r\n  );\r\n\r\n  renderTo(gl, applyGamma, bufferInfo, {\r\n    resolution: [gl.canvas.width, gl.canvas.height],\r\n    tPrev: frameBuffers.spareQuadCascadeFinalRT.attachments[0],\r\n  });\r\n}\r\n\r\nfunction renderCasadeScene() {\r\n  renderTo(\r\n    gl,\r\n    cascadeQuadRender,\r\n    bufferInfo,\r\n    {\r\n      resolution: [\r\n        frameBuffers.spareQuadCascadeRT.width,\r\n        frameBuffers.spareQuadCascadeRT.height,\r\n      ],\r\n      tPrevCascade: frameBuffers.quadCascadeRT.attachments[0],\r\n    },\r\n    frameBuffers.spareQuadCascadeFinalRT\r\n  );\r\n}\r\n\r\nclass TimeManager {\r\n  constructor({ fps = 60 }) {\r\n    this.frame = 0;\r\n    this.fps = fps;\r\n    this.initialTime = Date.now();\r\n    this.lastDelta = Date.now();\r\n  }\r\n\r\n  getDeltaTime() {\r\n    const now = Date.now();\r\n    const deltaTime = now - this.lastDelta;\r\n    this.lastDelta = Date.now();\r\n    return Math.min(1000 / this.fps, deltaTime);\r\n  }\r\n\r\n  timeToNextRender() {\r\n    this.frame++;\r\n    const timeSinceStart = Date.now() - this.initialTime;\r\n    const delta = 1000 / this.fps;\r\n    return timeSinceStart % delta;\r\n  }\r\n}\r\n\r\nconst time = new TimeManager({ fps: 60 });\r\n\r\nfunction render(timeMillis) {\r\n  stats.begin();\r\n  windowManager.update();\r\n  inputState.update(game, input.getState());\r\n\r\n  game.update(time.getDeltaTime() / 1000);\r\n  twgl.resizeCanvasToDisplaySize(gl.canvas);\r\n\r\n  renderScene(timeMillis);\r\n  renderDistance(timeMillis);\r\n\r\n  let depth = data.addNumber({\r\n    displayName: \"Initial Depth\",\r\n    defaultValue: Math.log2(width) - 3,\r\n    min: 1,\r\n    max: Math.log2(width) - 3,\r\n    step: 1,\r\n  }).value;\r\n\r\n  renderTo(\r\n    gl,\r\n    fillColor,\r\n    bufferInfo,\r\n    { color: [0, 0, 0, 0] },\r\n    frameBuffers.quadCascadeRT\r\n  );\r\n  renderTo(\r\n    gl,\r\n    fillColor,\r\n    bufferInfo,\r\n    { color: [0, 0, 0, 0] },\r\n    frameBuffers.spareQuadCascadeFinalRT\r\n  );\r\n\r\n  if (!hasQueried && ext) {\r\n    gl.beginQuery(ext.TIME_ELAPSED_EXT, query);\r\n    hasQueried = true;\r\n  }\r\n  while (\r\n    depth >=\r\n    data.addNumber({\r\n      displayName: \"Final Depth\",\r\n      defaultValue: 0,\r\n      min: 0,\r\n      max: 8,\r\n      step: 1,\r\n    }).value\r\n  ) {\r\n    renderDepth(time, depth);\r\n    depth--;\r\n  }\r\n  if (hasQueried && !hasFinished && ext) {\r\n    hasFinished = true;\r\n    gl.endQuery(ext.TIME_ELAPSED_EXT);\r\n  }\r\n  renderTo(gl, applyGamma, bufferInfo, {\r\n    resolution: [gl.canvas.width, gl.canvas.height],\r\n    tPrev: frameBuffers.lightEmittersWithCurrent.attachments[0],\r\n  });\r\n  switch (\r\n    data.addEnum({\r\n      displayName: \"Render Mode\",\r\n      defaultValue: \"Render Cascade\",\r\n      options: [\"Render Cascade\", \"Cascade Levels\"],\r\n    }).value\r\n  ) {\r\n    case \"Cascade Levels\":\r\n      renderCascadeLevel();\r\n      break;\r\n    case \"Render Cascade\":\r\n    default:\r\n      renderCasadeScene();\r\n      break;\r\n  }\r\n\r\n  drawToBuffer(time, frameBuffers.spareQuadCascadeFinalRT, 1.0, game);\r\n\r\n  renderTo(gl, applyGamma, bufferInfo, {\r\n    resolution: [gl.canvas.width, gl.canvas.height],\r\n    tPrev: frameBuffers.spareQuadCascadeFinalRT.attachments[0],\r\n  });\r\n\r\n  if (toSave) {\r\n    saveImage();\r\n  }\r\n  const available = gl.getQueryParameter(query, gl.QUERY_RESULT_AVAILABLE);\r\n  if (available) {\r\n    const elapsedNanos = gl.getQueryParameter(query, gl.QUERY_RESULT);\r\n    console.log(\"ELAPSED: \", elapsedNanos / 1000000);\r\n  }\r\n  setTimeout(() => {\r\n    requestAnimationFrame(render);\r\n  }, time.timeToNextRender());\r\n  stats.end();\r\n}\r\n\r\nrequestAnimationFrame(render);\r\n"],"names":["WindowManager","aspect","canvasContainer","buffer","adjustedHeight","adjustedWidth","l","event","Controller","parent","object","property","className","elementType","e","name","callback","enabled","disabled","show","options","controller","min","max","step","decimals","listen","curValue","value","BooleanController","normalizeColorString","string","match","result","STRING","v","INT","ARRAY","target","rgbScale","int","r","g","b","OBJECT","FORMATS","getColorFormat","format","ColorController","tryParse","newValue","FunctionController","NumberController","stepExplicit","explicit","percent","onInput","increment","delta","onKeyDown","onWheel","testingForVerticalDrag","initClientX","initClientY","prevClientY","initValue","dragDelta","DRAG_THRESH","onMouseDown","onMouseMove","onMouseUp","dx","dy","onFocus","onBlur","map","a","c","d","setValueFromX","clientX","rect","mouseDown","mouseMove","mouseUp","testingForScroll","prevClientX","beginTouchDrag","onTouchStart","onTouchMove","onTouchEnd","callOnFinishChange","WHEEL_DEBOUNCE_TIME","wheelFinishChangeTimeout","active","axis","deltaX","deltaY","mult","root","OptionController","$option","index","StringController","stylesheet","_injectStyles","cssContent","injected","before","stylesInjected","GUI","autoPlace","container","width","title","closeFolders","injectStyles","touchStyles","$1","initialValue","folder","obj","recursive","f","open","closed","initialHeight","onTransitionEnd","targetHeight","changedGUI","controllers","folders","GUI$1","stateString","configString","DataManager","gui","displayName","defaultValue","existingValue","_a","fn","s","key","minOrOptions","state","config","_","listener","t","module","this","n","i","o","u","m","h","y","VecType","create$1","x","z","dst","subtract","cross","t1","t2","normalize","lenSq","len","MatType","setDefaultType","ctor","oldType","negate","create","copy","identity","transpose","m00","m01","m02","m03","m10","m11","m12","m13","m20","m21","m22","m23","m30","m31","m32","m33","inverse","tmp_0","tmp_1","tmp_2","tmp_3","tmp_4","tmp_5","tmp_6","tmp_7","tmp_8","tmp_9","tmp_10","tmp_11","tmp_12","tmp_13","tmp_14","tmp_15","tmp_16","tmp_17","tmp_18","tmp_19","tmp_20","tmp_21","tmp_22","tmp_23","t0","t3","multiply","a00","a01","a02","a03","a10","a11","a12","a13","a20","a21","a22","a23","a30","a31","a32","a33","b00","b01","b02","b03","b10","b11","b12","b13","b20","b21","b22","b23","b30","b31","b32","b33","setTranslation","getTranslation","getAxis","off","setAxis","perspective","fieldOfViewYInRadians","zNear","zFar","rangeInv","ortho","left","right","bottom","top","near","far","frustum","dz","xAxis","yAxis","zAxis","lookAt","eye","up","translation","translate","v0","v1","v2","rotationX","angleInRadians","rotateX","rotationY","rotateY","rotationZ","rotateZ","axisRotation","xx","yy","zz","oneMinusCosine","axisRotate","r00","r01","r02","r10","r11","r12","r20","r21","r22","scaling","scale","transformPoint","transformDirection","transformNormal$1","mi","m4","BYTE$2","UNSIGNED_BYTE$3","SHORT$2","UNSIGNED_SHORT$3","INT$3","UNSIGNED_INT$3","FLOAT$3","UNSIGNED_SHORT_4_4_4_4$1","UNSIGNED_SHORT_5_5_5_1$1","UNSIGNED_SHORT_5_6_5$1","HALF_FLOAT$1","UNSIGNED_INT_2_10_10_10_REV$1","UNSIGNED_INT_10F_11F_11F_REV$1","UNSIGNED_INT_5_9_9_9_REV$1","FLOAT_32_UNSIGNED_INT_24_8_REV$1","UNSIGNED_INT_24_8$1","glTypeToTypedArray","tt","getGLTypeForTypedArray","typedArray","getGLTypeForTypedArrayType","typedArrayType","getTypedArrayTypeForGLType","type","CTOR","isArrayBuffer$1","error$1","args","warn$1","isTypeWeakMaps","isType","weakMap","isOfType","isBuffer","gl","isRenderbuffer","isTexture","isSampler","STATIC_DRAW","ARRAY_BUFFER$1","ELEMENT_ARRAY_BUFFER$2","BUFFER_SIZE","BYTE$1","UNSIGNED_BYTE$2","SHORT$1","UNSIGNED_SHORT$2","INT$2","UNSIGNED_INT$2","FLOAT$2","defaults$2","setBufferFromTypedArray","array","drawType","createBufferFromTypedArray","isIndices","getNormalizationForTypedArrayType","getArray$1","texcoordRE","colorRE","guessNumComponentsFromName","length","numComponents","getNumComponents$1","arrayName","numValues","makeTypedArray","Type","typedArrayTypeFromGLTypeOrTypedArrayCtor","glTypeFromGLTypeOrTypedArrayType","glTypeOrTypedArrayCtor","attribBufferFromBuffer","attribBufferFromSize","arrayType","numBytes","attribBufferFromArrayLike","createAttribsFromArrays","arrays","attribs","attribName","normalization","getBytesPerValueForGLType","positionKeys","getNumElementsFromAttributes","ii","attrib","bytesPerValue","totalElements","numElements","createBufferInfoFromArrays","srcBufferInfo","newAttribs","bufferInfo","indices","newIndices","isWebGL2","glEnumToString","haveEnumsForType","enums","addEnums","existing","defaults$1","isArrayBuffer","getShared2DContext","s_ctx","ALPHA","RGB","RGBA$1","LUMINANCE","LUMINANCE_ALPHA","DEPTH_COMPONENT$1","DEPTH_STENCIL$1","CLAMP_TO_EDGE$1","NEAREST","LINEAR$1","TEXTURE_2D$2","TEXTURE_CUBE_MAP$1","TEXTURE_3D$1","TEXTURE_2D_ARRAY$1","TEXTURE_CUBE_MAP_POSITIVE_X","TEXTURE_CUBE_MAP_NEGATIVE_X","TEXTURE_CUBE_MAP_POSITIVE_Y","TEXTURE_CUBE_MAP_NEGATIVE_Y","TEXTURE_CUBE_MAP_POSITIVE_Z","TEXTURE_CUBE_MAP_NEGATIVE_Z","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_WRAP_R","TEXTURE_MIN_LOD","TEXTURE_MAX_LOD","TEXTURE_BASE_LEVEL","TEXTURE_MAX_LEVEL","TEXTURE_COMPARE_MODE","TEXTURE_COMPARE_FUNC","UNPACK_ALIGNMENT","UNPACK_ROW_LENGTH","UNPACK_IMAGE_HEIGHT","UNPACK_SKIP_PIXELS","UNPACK_SKIP_ROWS","UNPACK_SKIP_IMAGES","UNPACK_COLORSPACE_CONVERSION_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_FLIP_Y_WEBGL","R8","R8_SNORM","R16F","R32F","R8UI","R8I","RG16UI","RG16I","RG32UI","RG32I","RG8","RG8_SNORM","RG16F","RG32F","RG8UI","RG8I","R16UI","R16I","R32UI","R32I","RGB8","SRGB8","RGB565$1","RGB8_SNORM","R11F_G11F_B10F","RGB9_E5","RGB16F","RGB32F","RGB8UI","RGB8I","RGB16UI","RGB16I","RGB32UI","RGB32I","RGBA8","SRGB8_ALPHA8","RGBA8_SNORM","RGB5_A1$1","RGBA4$1","RGB10_A2","RGBA16F","RGBA32F","RGBA8UI","RGBA8I","RGB10_A2UI","RGBA16UI","RGBA16I","RGBA32I","RGBA32UI","DEPTH_COMPONENT16$1","DEPTH_COMPONENT24$1","DEPTH_COMPONENT32F$1","DEPTH32F_STENCIL8$1","DEPTH24_STENCIL8$1","BYTE","UNSIGNED_BYTE$1","SHORT","UNSIGNED_SHORT$1","INT$1","UNSIGNED_INT$1","FLOAT$1","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_5_5_5_1","UNSIGNED_SHORT_5_6_5","HALF_FLOAT","HALF_FLOAT_OES","UNSIGNED_INT_2_10_10_10_REV","UNSIGNED_INT_10F_11F_11F_REV","UNSIGNED_INT_5_9_9_9_REV","FLOAT_32_UNSIGNED_INT_24_8_REV","UNSIGNED_INT_24_8","RG","RG_INTEGER","RED","RED_INTEGER","RGB_INTEGER","RGBA_INTEGER","s_textureInternalFormatInfo","getTextureInternalFormatInfo","internalFormat","info","bytesPerElement","ndx","getBytesPerElementForInternalFormat","getFormatAndTypeForInternalFormat","isPowerOf2","canGenerateMipmap","height","canFilter","getTextureTypeForArrayType","src","defaultType","guessDimensions","size","setPackState","setSkipStateToDefault","setTextureSamplerParameters","parameteriFn","setTextureParameters","tex","make1Pixel","color","setTextureFilteringForSize","filtering","shouldAutomaticallySetTextureFilteringForSize","getCubeFaceOrder","getCubeFacesWithNdx","facesWithNdx","face","setTextureFromElement","element","level","formatType","imgWidth","imgHeight","slices","ctx","xOffset","yOffset","imageBitmap","smallest","largest","depth","xMult","yMult","srcX","srcY","noop","urlIsSameOrigin","url","localOrigin","setToAnonymousIfUndefinedAndURLIsNotSameOrigin","crossOrigin","loadImage","img","clearEventHandlers","onError","onLoad","msg","err","bm","cb","response","blob","bitmap","isTexImageSource","loadAndUseImage","setTextureTo1PixelColor","loadTextureFromUrl","loadCubemapFromUrls","urls","numToLoad","errors","faces","imgs","uploadImg","faceTarget","otherTarget","loadSlicesFromUrls","firstImage","slice","setTextureFromArray","dimensions","elementsPerElement","faceSize","offset","data","setEmptyTexture","createTexture","error","getElementById","id","TEXTURE0","ARRAY_BUFFER","ELEMENT_ARRAY_BUFFER$1","COMPILE_STATUS","LINK_STATUS","FRAGMENT_SHADER","VERTEX_SHADER","SEPARATE_ATTRIBS","ACTIVE_UNIFORMS","ACTIVE_ATTRIBUTES","TRANSFORM_FEEDBACK_VARYINGS","ACTIVE_UNIFORM_BLOCKS","UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER","UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER","UNIFORM_BLOCK_DATA_SIZE","UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES","FLOAT","FLOAT_VEC2","FLOAT_VEC3","FLOAT_VEC4","INT_VEC2","INT_VEC3","INT_VEC4","BOOL","BOOL_VEC2","BOOL_VEC3","BOOL_VEC4","FLOAT_MAT2","FLOAT_MAT3","FLOAT_MAT4","SAMPLER_2D","SAMPLER_CUBE","SAMPLER_3D","SAMPLER_2D_SHADOW","FLOAT_MAT2x3","FLOAT_MAT2x4","FLOAT_MAT3x2","FLOAT_MAT3x4","FLOAT_MAT4x2","FLOAT_MAT4x3","SAMPLER_2D_ARRAY","SAMPLER_2D_ARRAY_SHADOW","SAMPLER_CUBE_SHADOW","UNSIGNED_INT","UNSIGNED_INT_VEC2","UNSIGNED_INT_VEC3","UNSIGNED_INT_VEC4","INT_SAMPLER_2D","INT_SAMPLER_3D","INT_SAMPLER_CUBE","INT_SAMPLER_2D_ARRAY","UNSIGNED_INT_SAMPLER_2D","UNSIGNED_INT_SAMPLER_3D","UNSIGNED_INT_SAMPLER_CUBE","UNSIGNED_INT_SAMPLER_2D_ARRAY","TEXTURE_2D$1","TEXTURE_CUBE_MAP","TEXTURE_3D","TEXTURE_2D_ARRAY","typeMap","getBindPointForSamplerType","floatSetter","location","floatArraySetter","floatVec2Setter","floatVec3Setter","floatVec4Setter","intSetter","intArraySetter","intVec2Setter","intVec3Setter","intVec4Setter","uintSetter","uintArraySetter","uintVec2Setter","uintVec3Setter","uintVec4Setter","floatMat2Setter","floatMat3Setter","floatMat4Setter","floatMat23Setter","floatMat32Setter","floatMat24Setter","floatMat42Setter","floatMat34Setter","floatMat43Setter","samplerSetter","unit","bindPoint","textureOrPair","texture","sampler","samplerArraySetter","units","textures","floatAttribSetter","intAttribSetter","uintAttribSetter","matAttribSetter","typeInfo","defaultSize","count","stride","rowOffset","attrTypeMap","errorRE","addLineNumbersWithError","log","lineOffset","matches","lineNoToErrorMap","lineNo","next","end","line","spaceRE","prepShaderSource","shaderSource","reportError","progOptions","checkShaderStatus","shaderType","shader","errFn","lastError","getProgramOptions","opt_attribs","opt_locations","opt_errorCallback","transformFeedbackVaryings","transformFeedbackMode","opt","errorCallback","attribLocations","defaultShaderType","getShaderTypeFromScriptType","scriptType","deleteProgramAndShaders","program","notThese","shaders","wait","ms","resolve","createProgramNoCheck","programOptions","elem","loc","varyings","createProgram","shaderSet","hasErrors","getProgramErrors","waitForProgramLinkCompletionAsync","ext","checkFn","waitTime","createProgramFromSources","shaderSources","isBuiltIn","tokenRE","isDigit","addSetterToUniformTree","fullPath","setter","node","uniformSetters","tokens","tokenNdx","path","token","isArrayIndex","accessor","isArray","child","setUniformTree","createUniformSetters","textureUnit","createUniformSetter","uniformInfo","uniformTree","numUniforms","createTransformFeedbackInfo","numVaryings","varying","createUniformBlockSpecFromProgram","uniformData","uniformIndices","pair","pname","blockSpecs","numUniformBlocks","blockSpec","tree","values","prop","setUniforms","setters","actualSetters","numArgs","aNdx","createAttributeSetters","attribSetters","numAttribs","attribInfo","setAttributes","buffers","setBuffersAndAttributes","programInfo","createProgramInfoFromProgram","notIdRE","createProgramInfo","source","script","origCallback","TRIANGLES","UNSIGNED_SHORT","drawBufferInfo","instanceCount","FRAMEBUFFER","RENDERBUFFER","TEXTURE_2D","UNSIGNED_BYTE","DEPTH_COMPONENT","RGBA","DEPTH_COMPONENT24","DEPTH_COMPONENT32F","DEPTH24_STENCIL8","DEPTH32F_STENCIL8","RGBA4","RGB5_A1","RGB565","DEPTH_COMPONENT16","STENCIL_INDEX","STENCIL_INDEX8","DEPTH_STENCIL","COLOR_ATTACHMENT0","DEPTH_ATTACHMENT","STENCIL_ATTACHMENT","DEPTH_STENCIL_ATTACHMENT","CLAMP_TO_EDGE","LINEAR","defaultAttachments","attachmentsByFormat","getAttachmentPointForFormat","renderbufferFormats","isRenderbufferFormat","MAX_COLOR_ATTACHMENT_POINTS","isColorAttachmentPoint","attachmentPoint","createFramebufferInfo","attachments","fb","usedColorAttachmentsPoints","framebufferInfo","attachmentOptions","attachment","samples","textureOptions","bindFramebufferInfo","createVertexArrayInfo","programInfos","vao","prefixRE","addExtensionToContext","extensionName","fnSuffix","enumSuffix","isFunc","suffix","origFn","supportedExtensions","addExtensionsToContext","resizeCanvasToDisplaySize","canvas","multiplier","other","InputManager","events","ev","windowManager","handleMouseEvent","sizes","pos","handleScrollEvent","frame","addCustomArrayMethods","StateMachine","State","machine","LineSegment","start","_Vec","w","isNum","sum","low","high","__publicField","Vec","getRandomInt","steps","Command","MoveCommand","playerIndex","direction","TickCommand","OpenInputState","game","inputStateMachine","inputState","leftDir","rightDir","InputStateManager","MyGame","balls","origin","ball","command","paddles","p","bot","lineSegments","j","deltaTime","quadCascade_default","renderQuadCascade_default","stats","Stats","twgl.addExtensionsToContext","renderTo","uniforms","targetFrameBuffer","targetDimensions","twgl.setBuffersAndAttributes","twgl.setUniforms","twgl.bindFramebufferInfo","twgl.drawBufferInfo","twgl.createBufferInfoFromArrays","input","vs","fs_constant_fill","fs_write_line","fs_jump","fs_render_closest","fs_render_texture","fs_apply_gamma","vs_instance","fs_instance_color","instanceColor","twgl.createProgramInfo","renderTexture","calculateDistance","fillColor","jumpFill","applyGamma","cascadeQuadCalculate","calculateQuadCascade","twgl.m4","cascadeQuadRender","renderQuadCascade","vertexData","numPts","renderBall","matrices","colors","mat","bufferInfo4","vertexArrayInfo","twgl.createVertexArrayInfo","renderBalls","matrices2","colors2","bufferInfo2","vertexArrayInfo2","renderPaddles","matrices3","colors3","bufferInfo3","vertexArrayInfo3","drawToBuffer","time","toSave","saveImage","image","aDownloadLink","frameBuffers","twgl.createFramebufferInfo","query","hasQueried","hasFinished","renderScene","renderDepth","startDepth","shortestDistance","multiplier2","minDistance","maxDistance","deeperMaxDistance","renderDistance","renderCascadeLevel","renderCasadeScene","TimeManager","fps","timeSinceStart","render","timeMillis","twgl.resizeCanvasToDisplaySize","elapsedNanos"],"mappings":"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","x_google_ignoreList":[1,3,4]}