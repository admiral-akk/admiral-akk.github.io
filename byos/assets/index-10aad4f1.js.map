{"version":3,"file":"index-10aad4f1.js","sources":["../../raw_code/byos/src/util/compression.js","../../raw_code/byos/src/script.js"],"sourcesContent":["// https://evanhahn.com/javascript-compression-streams-api-with-strings/\r\nasync function concatUint8Arrays(uint8arrays) {\r\n  const blob = new Blob(uint8arrays);\r\n  const buffer = await blob.arrayBuffer();\r\n  return new Uint8Array(buffer);\r\n}\r\n\r\nclass ApiCompressor {\r\n  constructor(compressionType = \"gzip\") {\r\n    this.compressionType = compressionType;\r\n  }\r\n\r\n  // https://evanhahn.com/javascript-compression-streams-api-with-strings/\r\n  async compressStrToBase64(str) {\r\n    // Convert the string to a byte stream.\r\n    const stream = new Blob([str]).stream();\r\n\r\n    // Create a compressed stream.\r\n    const compressedStream = stream.pipeThrough(\r\n      new CompressionStream(this.compressionType)\r\n    );\r\n\r\n    // Read all the bytes from this stream.\r\n    const chunks = [];\r\n    for await (const chunk of compressedStream) {\r\n      chunks.push(chunk);\r\n    }\r\n    const uint8Array = await concatUint8Arrays(chunks);\r\n    return btoa(String.fromCharCode.apply(null, uint8Array));\r\n  }\r\n\r\n  // https://evanhahn.com/javascript-compression-streams-api-with-strings/\r\n  async decompressBase64ToStr(base64) {\r\n    const uint8Array = new Uint8Array(\r\n      atob(base64)\r\n        .split(\"\")\r\n        .map((char) => char.charCodeAt(0))\r\n    );\r\n    // Convert the bytes to a stream.\r\n    const stream = new Blob([uint8Array]).stream();\r\n\r\n    // Create a decompressed stream.\r\n    const decompressedStream = stream.pipeThrough(\r\n      new DecompressionStream(this.compressionType)\r\n    );\r\n\r\n    // Read all the bytes from this stream.\r\n    const chunks = [];\r\n    for await (const chunk of decompressedStream) {\r\n      chunks.push(chunk);\r\n    }\r\n    const stringBytes = await concatUint8Arrays(chunks);\r\n    return new TextDecoder().decode(stringBytes);\r\n  }\r\n}\r\n\r\nclass DefaultCompressor {\r\n  async compressStrToBase64(str) {\r\n    return btoa(str);\r\n  }\r\n  async decompressBase64ToStr(base64) {\r\n    return atob(base64);\r\n  }\r\n}\r\n\r\nclass DefaultPreprocessor {\r\n  async jsonToString(jsonData) {\r\n    return JSON.stringify(jsonData);\r\n  }\r\n\r\n  async jsonFromString(jsonData) {\r\n    return JSON.parse(jsonData);\r\n  }\r\n}\r\n\r\nclass DataManager {\r\n  constructor(\r\n    compressor = new DefaultCompressor(),\r\n    preprocessor = new DefaultPreprocessor()\r\n  ) {\r\n    this.compressor = compressor;\r\n    this.preprocessor = preprocessor;\r\n  }\r\n\r\n  async saveData(jsonData) {\r\n    const str = await this.preprocessor.jsonToString(jsonData);\r\n    console.log(\"URL param processed\", str);\r\n    const base64 = await this.compressor.compressStrToBase64(str);\r\n    console.log(\"URL param length\", base64.length);\r\n    const base64UrlStr = base64\r\n      .replace(/\\+/g, \"-\")\r\n      .replace(/\\//g, \"_\")\r\n      .replace(/=/g, \".\");\r\n    const url = new URL(window.location.href);\r\n    url.searchParams.set(\"d\", base64UrlStr);\r\n    window.history.pushState(null, \"\", url.toString());\r\n  }\r\n\r\n  async fetchData() {\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    const base64UrlStr = urlParams.get(\"d\");\r\n    if (!base64UrlStr) {\r\n      return null;\r\n    }\r\n    const base64 = base64UrlStr\r\n      .replace(/-/g, \"+\")\r\n      .replace(/_/g, \"/\")\r\n      .replace(/\\./g, \"=\");\r\n    const str = await this.compressor.decompressBase64ToStr(base64);\r\n    return await this.preprocessor.jsonFromString(str);\r\n  }\r\n}\r\n\r\nexport { DataManager, DefaultCompressor, ApiCompressor, DefaultPreprocessor };\r\n","import {\r\n  DataManager,\r\n  ApiCompressor,\r\n  DefaultCompressor,\r\n} from \"./util/compression.js\";\r\n\r\nvar id = document.getElementById(\"drawflow\");\r\nconst editor = new Drawflow(id);\r\nvar audioContext = new (window.AudioContext || window.webkitAudioContext)();\r\neditor.reroute = true;\r\neditor.start();\r\n\r\nvar toAudioNodeType = {};\r\nclass DrawflowPreprocessor {\r\n  minifyConnections(outputs) {\r\n    var str = \"\";\r\n    for (const [outputName, { connections }] of Object.entries(outputs)) {\r\n      const shortName = outputName.replace(\"output_\", \"\");\r\n      for (let i = 0; i < connections.length; i++) {\r\n        const { node, output } = connections[i];\r\n        const shortInputName = output.replace(\"input_\", \"\");\r\n        if (str !== \"\") {\r\n          str += \",\";\r\n        }\r\n        str += `${shortName},${node},${shortInputName}`;\r\n      }\r\n    }\r\n    return str;\r\n  }\r\n\r\n  unminifyConnections(outputStr) {\r\n    if (outputStr === \"\") {\r\n      return {};\r\n    }\r\n\r\n    const outputs = {};\r\n\r\n    const splitStr = outputStr.split(\",\");\r\n\r\n    for (let i = 0; i < splitStr.length / 3; i++) {\r\n      const outputName = `output_${splitStr[3 * i]}`;\r\n      const node = `${splitStr[3 * i + 1]}`;\r\n      const output = `input_${splitStr[3 * i + 2]}`;\r\n      if (!(outputName in outputs)) {\r\n        outputs[outputName] = { connections: [] };\r\n      }\r\n      outputs[outputName].connections.push({ node, output });\r\n    }\r\n\r\n    return outputs;\r\n  }\r\n\r\n  async jsonToString(jsonData) {\r\n    const arrayForm = [];\r\n    for (const [key, value] of Object.entries(jsonData)) {\r\n      const { data, id, name, outputs, pos_x, pos_y } = value;\r\n\r\n      const outputList = [];\r\n      for (const [outputName, c] of Object.entries(outputs)) {\r\n        const connections = c.connections;\r\n        if (connections.length > 0) {\r\n          outputList.push([outputName.replace(\"output_\", \"\"), connections]);\r\n        }\r\n      }\r\n      const x = Math.round(pos_x);\r\n      const y = Math.round(pos_y);\r\n      const compressedObj = {\r\n        id,\r\n        name,\r\n        x,\r\n        y,\r\n      };\r\n\r\n      const outputListNullable = this.minifyConnections(outputs);\r\n      const dataNullable = toAudioNodeType[name].dataToString(data);\r\n\r\n      const compressedStr = `${id}|${name}|${x}|${y}|${outputListNullable}|${dataNullable}`;\r\n\r\n      if (outputList.length > 0) {\r\n        compressedObj.o = outputList;\r\n      }\r\n      if (Object.keys(data).length > 0) {\r\n        compressedObj.data = data;\r\n      }\r\n\r\n      arrayForm.push(compressedStr);\r\n    }\r\n\r\n    return JSON.stringify(arrayForm);\r\n  }\r\n  async jsonFromString(jsonStr) {\r\n    const arrayForm = JSON.parse(jsonStr);\r\n\r\n    const drawflowData = {};\r\n    for (let i = 0; i < arrayForm.length; i++) {\r\n      const compressedStr = arrayForm[i];\r\n\r\n      const [id, name, x, y, outputsNullable, dataNullable] =\r\n        compressedStr.split(\"|\");\r\n\r\n      const data = toAudioNodeType[name].dataFromString(dataNullable);\r\n      const outputs = this.unminifyConnections(outputsNullable);\r\n      console.log(outputs);\r\n      drawflowData[id] = {\r\n        data,\r\n        id: id,\r\n        name: name,\r\n        outputs,\r\n        pos_x: Number(x),\r\n        pos_y: Number(y),\r\n      };\r\n    }\r\n\r\n    return drawflowData;\r\n  }\r\n}\r\n\r\nconst dataManager = new DataManager(\r\n  new DefaultCompressor(),\r\n  new DrawflowPreprocessor()\r\n);\r\n\r\n// Events!\r\nconst audioNodes = new Map();\r\n\r\n// compression scheme:\r\n\r\nfunction minifyData(editorData) {\r\n  if (typeof editorData !== \"object\" || editorData === null) {\r\n    return null;\r\n  }\r\n  const newData = {};\r\n  for (const [key, value] of Object.entries(editorData.drawflow.Home.data)) {\r\n    const { data, id, name, outputs, pos_x, pos_y } = value;\r\n    newData[key] = {\r\n      data,\r\n      id,\r\n      name,\r\n      outputs,\r\n      pos_x,\r\n      pos_y,\r\n    };\r\n  }\r\n\r\n  return newData;\r\n}\r\n\r\nfunction unminifyData(urlData) {\r\n  if (typeof urlData !== \"object\" || urlData === null) {\r\n    return null;\r\n  }\r\n  const newData = { drawflow: { Home: { data: urlData } } };\r\n  return newData;\r\n}\r\n\r\nasync function saveTransformedData() {\r\n  return dataManager.saveData(minifyData(editor.export()));\r\n}\r\n\r\nasync function readData() {\r\n  const dataP = unminifyData(await dataManager.fetchData());\r\n  if (dataP && dataP != \"undefined\" && dataP !== null) {\r\n    const { data } = dataP.drawflow.Home;\r\n\r\n    const connectionsMap = {};\r\n    const idMap = {};\r\n    const newIdMap = {};\r\n\r\n    // first identify the network graph\r\n\r\n    for (const [_, value] of Object.entries(data)) {\r\n      const { id, outputs } = value;\r\n      connectionsMap[id] = {};\r\n      for (const [outputName, value] of Object.entries(outputs)) {\r\n        connectionsMap[id][outputName] = [];\r\n        for (let i = 0; i < value.connections.length; i++) {\r\n          const { node, output } = value.connections[i];\r\n          connectionsMap[id][outputName].push({ id: node, inputName: output });\r\n        }\r\n      }\r\n    }\r\n\r\n    // identify sink nodes, then measure distance to sink, and that's the x value\r\n    // then use different y per node\r\n\r\n    const sinkIds = [];\r\n    const distanceToSink = {};\r\n    // identify sink nodes\r\n    for (const [id, connections] of Object.entries(connectionsMap)) {\r\n      if (Object.keys(connections).length === 0) {\r\n        sinkIds.push(id);\r\n        distanceToSink[id] = 0;\r\n      }\r\n    }\r\n\r\n    // measure distance to sink\r\n    var newDist = {};\r\n    while (true) {\r\n      for (const [id, connections] of Object.entries(connectionsMap)) {\r\n        if (id.toString() in distanceToSink) {\r\n          continue;\r\n        }\r\n\r\n        for (const [outputName, connections2] of Object.entries(connections)) {\r\n          for (let i = 0; i < connections2.length; i++) {\r\n            const connection = connections2[i];\r\n            const d = distanceToSink[Number(connection.id)];\r\n            if (d !== undefined) {\r\n              if (newDist[id] !== undefined) {\r\n                newDist[id] = Math.min(newDist[id], d);\r\n              } else {\r\n                newDist[id] = d;\r\n              }\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      if (Object.keys(newDist).length === 0) {\r\n        break;\r\n      } else {\r\n        for (const [id, d] of Object.entries(newDist)) {\r\n          distanceToSink[id] = d + 1;\r\n        }\r\n        newDist = {};\r\n      }\r\n    }\r\n\r\n    for (const [id, value] of Object.entries(data)) {\r\n      if (distanceToSink[id] === undefined) {\r\n      }\r\n    }\r\n\r\n    // calculate positions of nodes\r\n\r\n    const countOfDist = {};\r\n    const position = {};\r\n    for (const [id, value] of Object.entries(data)) {\r\n      const dist = distanceToSink[id];\r\n      if (countOfDist[dist] === undefined) {\r\n        countOfDist[dist] = 1;\r\n      } else {\r\n        countOfDist[dist] = countOfDist[dist] + 1;\r\n      }\r\n      const count = countOfDist[dist];\r\n\r\n      position[id] = { posX: -dist * 300 + 800, posY: 500 * count };\r\n    }\r\n\r\n    // then figure out which positions to put nodes in and create the nodes\r\n\r\n    for (const [_, value] of Object.entries(data)) {\r\n      const { id, name, data, pos_x, pos_y } = value;\r\n\r\n      const newId = addNodeToDrawFlow(name, pos_x, pos_y, data);\r\n\r\n      audioNodes[newId].updateData(data);\r\n\r\n      idMap[id] = newId;\r\n      newIdMap[newId] = id;\r\n    }\r\n    // then connect the nodes\r\n    for (const [id, connections] of Object.entries(connectionsMap)) {\r\n      for (const [outputName, connectionList] of Object.entries(connections)) {\r\n        for (let i = 0; i < connectionList.length; i++) {\r\n          const inputId = connectionList[i].id;\r\n          const inputName = connectionList[i].inputName;\r\n          editor.addConnection(\r\n            idMap[id],\r\n            idMap[inputId],\r\n            outputName,\r\n            inputName\r\n          );\r\n        }\r\n      }\r\n    }\r\n  }\r\n  await saveTransformedData();\r\n}\r\n\r\nfunction draw() {\r\n  audioContext.resume();\r\n  const timestamp = Date.now();\r\n  for (const [_, audioNode] of Object.entries(audioNodes)) {\r\n    const canvas = audioNode.canvas;\r\n    const analyser = audioNode.analyser;\r\n    if (canvas && analyser) {\r\n      const canvasCtx = canvas.getContext(\"2d\");\r\n      const bufferLength = analyser.frequencyBinCount;\r\n      const dataArray = new Uint8Array(bufferLength);\r\n      analyser.getByteTimeDomainData(dataArray);\r\n\r\n      audioNode.history.push([timestamp, dataArray]);\r\n\r\n      const windowSize = 500;\r\n\r\n      audioNode.history = audioNode.history.filter(\r\n        ([time, _]) => time > timestamp - windowSize\r\n      );\r\n\r\n      const bufferTimeLength =\r\n        (1000 * analyser.frequencyBinCount) / audioContext.sampleRate;\r\n      const sampleTick = bufferTimeLength / analyser.frequencyBinCount;\r\n\r\n      canvasCtx.clearRect(0, 0, canvas.width, canvas.height);\r\n      canvasCtx.fillStyle = \"rgb(200 200 200)\";\r\n      canvasCtx.fillRect(0, 0, canvas.width, canvas.height);\r\n      canvasCtx.lineWidth = 2;\r\n      canvasCtx.strokeStyle = \"rgb(0 0 0)\";\r\n      canvasCtx.beginPath();\r\n      let x = 0;\r\n      let time = audioNode.history[0][0] - bufferTimeLength;\r\n      for (let i = 0; i < audioNode.history.length; i++) {\r\n        const data = audioNode.history[i][1];\r\n\r\n        for (let j = 0; j < data.length; j++) {\r\n          const v = data[j] / 128.0;\r\n          const y = v * (canvas.height / 2);\r\n\r\n          if (i === 0 && j == 0) {\r\n            canvasCtx.moveTo(canvas.width * x, y);\r\n          } else {\r\n            canvasCtx.lineTo(canvas.width * x, y);\r\n          }\r\n\r\n          x += sampleTick / windowSize;\r\n          time += sampleTick;\r\n          if (time > audioNode.history?.[i + 1]?.[0] - bufferTimeLength) {\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      canvasCtx.stroke();\r\n    }\r\n  }\r\n\r\n  requestAnimationFrame(draw);\r\n}\r\n\r\nfunction nodeCreated(id) {\r\n  const node = editor.getNodeFromId(id);\r\n\r\n  switch (node.class) {\r\n    case \"o\":\r\n      audioNodes[id] = audioContext.createOscillator();\r\n      audioNodes[id].start();\r\n      break;\r\n    case \"s\":\r\n      audioNodes[id] = audioContext;\r\n      break;\r\n    case \"g\":\r\n      audioNodes[id] = audioContext.createGain();\r\n      break;\r\n    case \"e\":\r\n      audioNodes[id] = new Envelope();\r\n      break;\r\n    case \"f\":\r\n      audioNodes[id] = audioContext.createBiquadFilter();\r\n      break;\r\n    case \"n\":\r\n      audioNodes[id] = new NoiseNode();\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n\r\n  switch (node.class) {\r\n    case \"o\":\r\n    case \"g\":\r\n    case \"e\":\r\n    case \"f\":\r\n    case \"n\":\r\n      const htmlBody = document\r\n        .getElementById(`node-${id}`)\r\n        .getElementsByClassName(\"drawflow_content_node\")[0].children[0];\r\n      const canvas = document.createElement(\"canvas\");\r\n      canvas.width = 180;\r\n      canvas.height = 180;\r\n      htmlBody.appendChild(canvas);\r\n      const analyser = audioContext.createAnalyser();\r\n      analyser.fftSize = 2048;\r\n      const bufferLength = analyser.frequencyBinCount;\r\n      const dataArray = new Uint8Array(bufferLength);\r\n      analyser.getByteTimeDomainData(dataArray);\r\n\r\n      audioNodes[id].connect(analyser);\r\n\r\n      audioNodes[id].canvas = canvas;\r\n      audioNodes[id].analyser = analyser;\r\n      audioNodes[id].history = [];\r\n    default:\r\n      break;\r\n  }\r\n}\r\n\r\neditor.on(\"nodeCreated\", () => {\r\n  saveTransformedData();\r\n});\r\n\r\neditor.on(\"nodeRemoved\", function (id) {\r\n  saveTransformedData();\r\n  // remove connections\r\n});\r\n\r\neditor.on(\"nodeSelected\", function (id) {});\r\n\r\neditor.on(\"moduleCreated\", function (name) {});\r\n\r\neditor.on(\"moduleChanged\", function (name) {});\r\n\r\nclass NoiseNode extends AudioBufferSourceNode {\r\n  constructor() {\r\n    super(audioContext);\r\n    const bufferSize = 2 * audioContext.sampleRate;\r\n    const noiseBuffer = audioContext.createBuffer(\r\n      1,\r\n      bufferSize,\r\n      audioContext.sampleRate\r\n    );\r\n\r\n    this.type = \"white\";\r\n    this.buffer = noiseBuffer;\r\n    this.loop = true;\r\n\r\n    this.regenerateBuffer();\r\n    this.start(0);\r\n  }\r\n\r\n  static dataToString(data) {\r\n    switch (data.type) {\r\n      default:\r\n      case \"white\":\r\n        return \"0\";\r\n      case \"pink\":\r\n        return \"1\";\r\n      case \"brown\":\r\n        return \"2\";\r\n    }\r\n  }\r\n\r\n  static dataFromString(str) {\r\n    const num = Number(str);\r\n    switch (num) {\r\n      default:\r\n      case \"0\":\r\n        return \"white\";\r\n      case \"1\":\r\n        return \"pink\";\r\n      case \"2\":\r\n        return \"brown\";\r\n    }\r\n  }\r\n\r\n  regenerateBuffer() {\r\n    // https://noisehack.com/generate-noise-web-audio-api/\r\n    const output = this.buffer.getChannelData(0);\r\n    const bufferSize = 2 * audioContext.sampleRate;\r\n    switch (this.type) {\r\n      case \"pink\":\r\n        var b0, b1, b2, b3, b4, b5, b6;\r\n        b0 = b1 = b2 = b3 = b4 = b5 = b6 = 0.0;\r\n        for (var i = 0; i < bufferSize; i++) {\r\n          const white = Math.random() * 2 - 1;\r\n          b0 = 0.99886 * b0 + white * 0.0555179;\r\n          b1 = 0.99332 * b1 + white * 0.0750759;\r\n          b2 = 0.969 * b2 + white * 0.153852;\r\n          b3 = 0.8665 * b3 + white * 0.3104856;\r\n          b4 = 0.55 * b4 + white * 0.5329522;\r\n          b5 = -0.7616 * b5 - white * 0.016898;\r\n          output[i] = b0 + b1 + b2 + b3 + b4 + b5 + b6 + white * 0.5362;\r\n          output[i] *= 0.11; // (roughly) compensate for gain\r\n          b6 = white * 0.115926;\r\n        }\r\n        break;\r\n      case \"brown\":\r\n        var lastOut = 0;\r\n        for (var i = 0; i < bufferSize; i++) {\r\n          var white = Math.random() * 2 - 1;\r\n          output[i] = (lastOut + 0.02 * white) / 1.02;\r\n          lastOut = output[i];\r\n          output[i] *= 3.5; // (roughly) compensate for gain\r\n        }\r\n        break;\r\n      case \"white\":\r\n      default:\r\n        for (var i = 0; i < bufferSize; i++) {\r\n          output[i] = Math.random() * 2 - 1;\r\n        }\r\n        break;\r\n    }\r\n  }\r\n\r\n  getInput(key) {\r\n    return this;\r\n  }\r\n\r\n  updateData(data) {\r\n    if (this.type != data.type) {\r\n      this.type = data.type;\r\n      this.regenerateBuffer();\r\n    }\r\n  }\r\n}\r\n\r\nclass Envelope extends GainNode {\r\n  static types = [\"linear\", \"instant\", \"exp\"];\r\n  constructor() {\r\n    super(audioContext);\r\n    this.constantNode = audioContext.createConstantSource();\r\n    this.constantNode.connect(this);\r\n    this.constantNode.start();\r\n    this.data = {\r\n      ramptype: \"exp\",\r\n      peak: 1,\r\n      attack: 1,\r\n      decay: 1,\r\n    };\r\n  }\r\n\r\n  static dataToString(data) {\r\n    const { ramptype, peak, attack, decay } = data;\r\n    const typeIndex = Envelope.types.indexOf(ramptype);\r\n    const dataStr = `${typeIndex}${peak},${attack},${decay}`;\r\n\r\n    return dataStr;\r\n  }\r\n\r\n  static dataFromString(str) {\r\n    const ramptype = Envelope.types[Number(str[0])];\r\n    const [peak, attack, decay] = str.substring(1).split(\",\");\r\n    return {\r\n      ramptype,\r\n      attack: Number(attack),\r\n      decay: Number(decay),\r\n      peak: Number(peak),\r\n    };\r\n  }\r\n\r\n  getInput(key) {\r\n    return this;\r\n  }\r\n\r\n  updateData(data) {\r\n    this.data.ramptype = data.ramptype;\r\n    this.data.peak = Number(data.peak);\r\n    this.data.attack = Number(data.attack);\r\n    this.data.decay = Number(data.decay);\r\n    this.applyEnvelope();\r\n  }\r\n\r\n  applyEnvelope() {\r\n    var setValue;\r\n    var currentTime = audioContext.currentTime;\r\n\r\n    this.gain.cancelScheduledValues(currentTime);\r\n    switch (this.data.ramptype) {\r\n      case \"linear\":\r\n        setValue = (val, t) => this.gain.linearRampToValueAtTime(val, t);\r\n        break;\r\n      case \"instant\":\r\n        setValue = (val, t) => this.gain.setValueAtTime(val, t);\r\n        break;\r\n      default:\r\n      case \"exp\":\r\n        setValue = (val, t) => this.gain.exponentialRampToValueAtTime(val, t);\r\n        break;\r\n    }\r\n    const addStep = (val, deltaTime) => {\r\n      if (deltaTime > 0) {\r\n        currentTime += deltaTime;\r\n        setValue(val, currentTime);\r\n      }\r\n    };\r\n    if (this.data.attack > 0) {\r\n      this.gain.setValueAtTime(0.001, currentTime);\r\n    }\r\n\r\n    addStep(this.data.peak, this.data.attack);\r\n    addStep(0.001, this.data.decay);\r\n  }\r\n}\r\n\r\nBiquadFilterNode.types = [\r\n  \"lowpass\",\r\n  \"highpass\",\r\n  \"bandpass\",\r\n  \"lowshelf\",\r\n  \"peaking\",\r\n  \"notch\",\r\n  \"allpass\",\r\n];\r\nBiquadFilterNode.dataToString = function (data) {\r\n  const { type, frequency } = data;\r\n  const typeIndex = BiquadFilterNode.types.indexOf(type);\r\n  return `${typeIndex}${frequency}`;\r\n};\r\nBiquadFilterNode.dataFromString = function (str) {\r\n  return {\r\n    type: BiquadFilterNode.types[Number(str[0])],\r\n    frequency: Number(str.substring(1)),\r\n  };\r\n};\r\n\r\nBiquadFilterNode.prototype.getInput = function (key) {\r\n  switch (key) {\r\n    case \"input_1\":\r\n      return this;\r\n    case \"input_2\":\r\n    default:\r\n      return this.frequency;\r\n  }\r\n};\r\n\r\nAudioContext.prototype.getInput = function (key) {\r\n  switch (key) {\r\n    default:\r\n      return this.destination;\r\n  }\r\n};\r\nAudioContext.dataToString = function (data) {\r\n  return ``;\r\n};\r\nAudioContext.dataFromString = function (str) {\r\n  return {};\r\n};\r\n\r\nGainNode.prototype.getInput = function (key) {\r\n  switch (key) {\r\n    case \"input_1\":\r\n      return this;\r\n    case \"input_2\":\r\n    default:\r\n      return this.gain;\r\n  }\r\n};\r\nGainNode.dataToString = function (data) {\r\n  return `${data.gain}`;\r\n};\r\nGainNode.dataFromString = function (str) {\r\n  return {\r\n    gain: Number(str),\r\n  };\r\n};\r\n\r\nOscillatorNode.types = [\"sine\", \"square\", \"sawtooth\", \"triangle\"];\r\nOscillatorNode.prototype.getInput = function (key) {\r\n  switch (key) {\r\n    default:\r\n      return this.frequency;\r\n  }\r\n};\r\nOscillatorNode.dataToString = function (data) {\r\n  const { type, frequency } = data;\r\n  const typeIndex = OscillatorNode.types.indexOf(type);\r\n  return `${typeIndex}${frequency}`;\r\n};\r\nOscillatorNode.dataFromString = function (str) {\r\n  return {\r\n    type: OscillatorNode.types[Number(str[0])],\r\n    frequency: Number(str.substring(1)),\r\n  };\r\n};\r\n\r\nAudioContext.prototype.updateData = () => {};\r\nOscillatorNode.prototype.updateData = function (data) {\r\n  this.type = data.type;\r\n  this.frequency.value = Number(data.frequency);\r\n};\r\nGainNode.prototype.updateData = function (data) {\r\n  this.gain.value = Number(data.gain);\r\n};\r\nBiquadFilterNode.prototype.updateData = function (data) {\r\n  this.type = data.type;\r\n  this.frequency.value = Number(data.frequency);\r\n};\r\n\r\neditor.on(\"connectionCreated\", function (connection) {\r\n  const sendingNode = audioNodes[connection.output_id];\r\n  const recievingNode = audioNodes[connection.input_id];\r\n  if (sendingNode && recievingNode) {\r\n    sendingNode.connect(recievingNode.getInput(connection.input_class));\r\n  }\r\n  saveTransformedData();\r\n});\r\n\r\neditor.on(\"connectionRemoved\", function (connection) {\r\n  audioNodes[connection.output_id]?.disconnect(\r\n    audioNodes[connection.input_id].getInput(connection.input_class)\r\n  );\r\n  saveTransformedData();\r\n});\r\n\r\neditor.on(\"mouseMove\", function (position) {\r\n  //\r\n});\r\n\r\neditor.on(\"nodeDataChanged\", function (id) {\r\n  const { data } = editor.getNodeFromId(id);\r\n\r\n  audioNodes[id].updateData(data);\r\n  saveTransformedData();\r\n});\r\n\r\neditor.on(\"nodeMoved\", function (id) {});\r\n\r\neditor.on(\"zoom\", function (zoom) {});\r\n\r\neditor.on(\"translate\", function (position) {\r\n  //\r\n});\r\n\r\neditor.on(\"addReroute\", function (id) {});\r\n\r\neditor.on(\"removeReroute\", function (id) {});\r\n\r\n/* DRAG EVENT */\r\n\r\n/* Mouse and Touch Actions */\r\n\r\nvar elements = document.getElementsByClassName(\"drag-drawflow\");\r\nfor (var i = 0; i < elements.length; i++) {\r\n  elements[i].addEventListener(\"touchend\", drop, false);\r\n  elements[i].addEventListener(\"touchmove\", positionMobile, false);\r\n  elements[i].addEventListener(\"touchstart\", drag, false);\r\n}\r\n\r\nvar mobile_item_selec = \"\";\r\nvar mobile_last_move = null;\r\nfunction positionMobile(ev) {\r\n  mobile_last_move = ev;\r\n}\r\n\r\nfunction allowDrop(ev) {\r\n  ev.preventDefault();\r\n}\r\n\r\nfunction drag(ev) {\r\n  if (ev.type === \"touchstart\") {\r\n    mobile_item_selec = ev.target\r\n      .closest(\".drag-drawflow\")\r\n      .getAttribute(\"data-node\");\r\n  } else {\r\n    ev.dataTransfer.setData(\"node\", ev.target.getAttribute(\"data-node\"));\r\n  }\r\n}\r\n\r\nfunction drop(ev) {\r\n  if (ev.type === \"touchend\") {\r\n    var parentdrawflow = document\r\n      .elementFromPoint(\r\n        mobile_last_move.touches[0].clientX,\r\n        mobile_last_move.touches[0].clientY\r\n      )\r\n      .closest(\"#drawflow\");\r\n    if (parentdrawflow != null) {\r\n      addNodeToDrawFlow(\r\n        mobile_item_selec,\r\n        mobile_last_move.touches[0].clientX,\r\n        mobile_last_move.touches[0].clientY\r\n      );\r\n    }\r\n    mobile_item_selec = \"\";\r\n  } else {\r\n    ev.preventDefault();\r\n    var data = ev.dataTransfer.getData(\"node\");\r\n    addNodeToDrawFlow(data, ev.clientX, ev.clientY);\r\n  }\r\n}\r\n\r\nfunction addNodeToDrawFlow(name, pos_x, pos_y, data = null) {\r\n  if (editor.editor_mode === \"fixed\") {\r\n    return null;\r\n  }\r\n  pos_x =\r\n    pos_x *\r\n      (editor.precanvas.clientWidth /\r\n        (editor.precanvas.clientWidth * editor.zoom)) -\r\n    editor.precanvas.getBoundingClientRect().x *\r\n      (editor.precanvas.clientWidth /\r\n        (editor.precanvas.clientWidth * editor.zoom));\r\n  pos_y =\r\n    pos_y *\r\n      (editor.precanvas.clientHeight /\r\n        (editor.precanvas.clientHeight * editor.zoom)) -\r\n    editor.precanvas.getBoundingClientRect().y *\r\n      (editor.precanvas.clientHeight /\r\n        (editor.precanvas.clientHeight * editor.zoom));\r\n  var nodeId = null;\r\n  switch (name) {\r\n    case \"s\":\r\n      var output = `\r\n      <div>\r\n        <div class=\"title-box\"><i class=\"fas fa-at\"></i> Audio Out </div>\r\n      </div>\r\n      `;\r\n      nodeId = editor.addNode(\"s\", 1, 0, pos_x, pos_y, \"s\", data ?? {}, output);\r\n      break;\r\n    case \"g\":\r\n      var gain = `\r\n        <div>\r\n          <div class=\"title-box\"><i class=\"fas fa-at\"></i> Gain</div>\r\n      <div class=\"box\">\r\n        <p>Gain</p>\r\n        <input type=\"number\" df-gain>\r\n      </div>\r\n        </div>\r\n        `;\r\n      nodeId = editor.addNode(\r\n        \"g\",\r\n        2,\r\n        1,\r\n        pos_x,\r\n        pos_y,\r\n        \"g\",\r\n        data ?? { gain: 1 },\r\n        gain\r\n      );\r\n      break;\r\n\r\n    case \"e\":\r\n      var env = `\r\n      <div>\r\n        <div class=\"title-box\"><i class=\"fab fa-telegram-plane\"></i> Envelope</div>\r\n        <div class=\"box\">\r\n          <p>Select type</p>\r\n          <select df-ramptype>\r\n            <option value=\"exp\">Exponential</option>\r\n            <option value=\"linear\">Linear</option>\r\n            <option value=\"instant\">Instant</option>\r\n          </select>\r\n        </div>\r\n        <div class=\"box\">\r\n          <p>Attack</p>\r\n          <input type=\"number\" df-attack>\r\n        </div>\r\n        <div class=\"box\">\r\n          <p>Decay</p>\r\n          <input type=\"number\" df-decay>\r\n        </div>\r\n        <div class=\"box\">\r\n          <p>Peak</p>\r\n          <input type=\"number\" df-peak>\r\n        </div>\r\n      </div>\r\n      `;\r\n      nodeId = editor.addNode(\r\n        \"e\",\r\n        0,\r\n        1,\r\n        pos_x,\r\n        pos_y,\r\n        \"e\",\r\n        data ?? { ramptype: \"exp\", attack: 1, peak: 1, decay: 1 },\r\n        env\r\n      );\r\n      break;\r\n\r\n    case \"n\":\r\n      var noise = `\r\n        <div>\r\n          <div class=\"title-box\"><i class=\"fab fa-telegram-plane\"></i> Noise</div>\r\n          <div class=\"box\">\r\n            <p>Select type</p>\r\n            <select df-type>\r\n              <option value=\"white\">White</option>\r\n              <option value=\"pink\">Pink</option>\r\n              <option value=\"brown\">Brown</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        `;\r\n      nodeId = editor.addNode(\r\n        \"n\",\r\n        0,\r\n        1,\r\n        pos_x,\r\n        pos_y,\r\n        \"n\",\r\n        data ?? { type: \"white\" },\r\n        noise\r\n      );\r\n      break;\r\n\r\n    case \"f\":\r\n      var filter = `\r\n      <div>\r\n        <div class=\"title-box\"><i class=\"fab fa-telegram-plane\"></i> Filter</div>\r\n        <div class=\"box\">\r\n          <p>Select type</p>\r\n          <select df-type>\r\n            <option value=\"lowpass\">Low Pass</option>\r\n            <option value=\"highpass\">High Pass</option>\r\n            <option value=\"bandpass\">Band Pass</option>\r\n            <option value=\"lowshelf\">Low Shelf</option>\r\n            <option value=\"peaking\">Peaking</option>\r\n            <option value=\"notch\">Notch</option>\r\n            <option value=\"allpass\">All Pass</option>\r\n          </select>\r\n        </div>\r\n        <div class=\"box\">\r\n          <p>Frequency</p>\r\n          <input type=\"number\" df-frequency>\r\n        </div>\r\n      </div>\r\n      `;\r\n      nodeId = editor.addNode(\r\n        \"f\",\r\n        2,\r\n        1,\r\n        pos_x,\r\n        pos_y,\r\n        \"f\",\r\n        data ?? { type: \"lowpass\", frequency: 200 },\r\n        filter\r\n      );\r\n      break;\r\n\r\n    case \"o\":\r\n      var osc = `\r\n    <div>\r\n      <div class=\"title-box\"><i class=\"fab fa-telegram-plane\"></i> Oscillator</div>\r\n      <div class=\"box\">\r\n        <p>Select type</p>\r\n        <select df-type>\r\n          <option value=\"sine\">Sine</option>\r\n          <option value=\"square\">Square</option>\r\n          <option value=\"sawtooth\">Sawtooth</option>\r\n          <option value=\"triangle\">Triangle</option>\r\n        </select>\r\n      </div>\r\n      <div class=\"box\">\r\n        <p>Frequency</p>\r\n        <input type=\"number\" df-frequency>\r\n      </div>\r\n    </div>\r\n    `;\r\n      nodeId = editor.addNode(\r\n        \"o\",\r\n        1,\r\n        1,\r\n        pos_x,\r\n        pos_y,\r\n        \"o\",\r\n        data ?? { type: \"sine\", frequency: 260 },\r\n        osc\r\n      );\r\n      break;\r\n\r\n    default:\r\n      return null;\r\n  }\r\n  nodeCreated(nodeId);\r\n  return nodeId;\r\n}\r\n\r\nvar transform = \"\";\r\nfunction showpopup(e) {\r\n  e.target.closest(\".drawflow-node\").style.zIndex = \"9999\";\r\n  e.target.children[0].style.display = \"block\";\r\n  //document.getElementById(\"modalfix\").style.display = \"block\";\r\n\r\n  //e.target.children[0].style.transform = 'translate('+translate.x+'px, '+translate.y+'px)';\r\n  transform = editor.precanvas.style.transform;\r\n  editor.precanvas.style.transform = \"\";\r\n  editor.precanvas.style.left = editor.canvas_x + \"px\";\r\n  editor.precanvas.style.top = editor.canvas_y + \"px\";\r\n\r\n  //e.target.children[0].style.top  =  -editor.canvas_y - editor.container.offsetTop +'px';\r\n  //e.target.children[0].style.left  =  -editor.canvas_x  - editor.container.offsetLeft +'px';\r\n  editor.editor_mode = \"fixed\";\r\n}\r\n\r\nfunction closemodal(e) {\r\n  e.target.closest(\".drawflow-node\").style.zIndex = \"2\";\r\n  e.target.parentElement.parentElement.style.display = \"none\";\r\n  //document.getElementById(\"modalfix\").style.display = \"none\";\r\n  editor.precanvas.style.transform = transform;\r\n  editor.precanvas.style.left = \"0px\";\r\n  editor.precanvas.style.top = \"0px\";\r\n  editor.editor_mode = \"edit\";\r\n}\r\n\r\nfunction changeModule(event) {\r\n  var all = document.querySelectorAll(\".menu ul li\");\r\n  for (var i = 0; i < all.length; i++) {\r\n    all[i].classList.remove(\"selected\");\r\n  }\r\n  event.target.classList.add(\"selected\");\r\n}\r\n\r\nfunction changeMode(option) {\r\n  //\r\n  if (option == \"lock\") {\r\n    lock.style.display = \"none\";\r\n    unlock.style.display = \"block\";\r\n  } else {\r\n    lock.style.display = \"block\";\r\n    unlock.style.display = \"none\";\r\n  }\r\n}\r\n\r\nfunction trigger() {\r\n  for (const [_, audioNode] of Object.entries(audioNodes)) {\r\n    if (audioNode.applyEnvelope) {\r\n      audioNode.applyEnvelope();\r\n    }\r\n  }\r\n}\r\n\r\nwindow.drop = drop;\r\nwindow.drag = drag;\r\nwindow.allowDrop = allowDrop;\r\nwindow.trigger = trigger;\r\nwindow.editor = editor;\r\n\r\ntoAudioNodeType = {\r\n  s: AudioContext,\r\n  g: GainNode,\r\n  e: Envelope,\r\n  n: NoiseNode,\r\n  f: BiquadFilterNode,\r\n  o: OscillatorNode,\r\n};\r\n\r\nreadData();\r\nrequestAnimationFrame(draw);\r\n"],"names":["DefaultCompressor","str","base64","DefaultPreprocessor","jsonData","DataManager","compressor","preprocessor","base64UrlStr","url","id","editor","audioContext","toAudioNodeType","DrawflowPreprocessor","outputs","outputName","connections","shortName","i","node","output","shortInputName","outputStr","splitStr","arrayForm","key","value","data","name","pos_x","pos_y","outputList","c","x","y","outputListNullable","dataNullable","compressedStr","jsonStr","drawflowData","outputsNullable","dataManager","audioNodes","minifyData","editorData","newData","unminifyData","urlData","saveTransformedData","readData","dataP","connectionsMap","idMap","_","distanceToSink","newDist","connections2","connection","d","countOfDist","dist","newId","addNodeToDrawFlow","connectionList","inputId","inputName","draw","timestamp","audioNode","canvas","analyser","canvasCtx","bufferLength","dataArray","windowSize","time","bufferTimeLength","sampleTick","j","_b","_a","nodeCreated","Envelope","NoiseNode","htmlBody","bufferSize","noiseBuffer","b0","b1","b2","b3","b4","b5","b6","white","lastOut","_Envelope","ramptype","peak","attack","decay","setValue","currentTime","val","t","addStep","deltaTime","__publicField","type","frequency","sendingNode","recievingNode","position","zoom","elements","drop","positionMobile","drag","mobile_item_selec","mobile_last_move","ev","allowDrop","parentdrawflow","nodeId","gain","env","noise","filter","osc","trigger"],"mappings":"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"}